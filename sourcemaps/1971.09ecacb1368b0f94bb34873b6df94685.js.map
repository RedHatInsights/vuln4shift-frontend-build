{"version":3,"file":"js/1971.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/Router.js","webpack:///./src/App.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/MissingMetadata.js","webpack:///./src/Components/PresentationalComponents/ShieldSet.js","webpack:///./src/Helpers/constants.js","webpack:///./src/Helpers/miscHelper.js","webpack:///./src/Store/ActionTypes.js","webpack:///./src/Store/Reducers/CveListStore.js","webpack:///./src/Store/Reducers/ClusterListStore.js","webpack:///./src/Store/Reducers/CveDetailStore.js","webpack:///./src/Store/Reducers/ClusterCvesStore.js","webpack:///./src/Store/Reducers/ClusterImagesStore.js","webpack:///./src/Store/Reducers/ClusterDetailStore.js","webpack:///./src/Store/ReducerRegistry.js"],"sourcesContent":["import React, { Suspense, lazy } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { CLUSTER_DETAIL_TABS } from './Helpers/constants';\n\nconst CveListPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"CveListPage\" */ './Components/SmartComponents/CveList/CveListPage'\n  )\n);\n\nconst ClusterListPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"ClusterListPage\" */ './Components/SmartComponents/ClusterList/ClusterListPage'\n  )\n);\n\nconst CveDetailPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"CveDetailPage\" */ './Components/SmartComponents/CveDetail/CveDetailPage'\n  )\n);\n\nconst ClusterDetailPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"ClusterDetailPage\" */ './Components/SmartComponents/ClusterDetail/ClusterDetailPage'\n  )\n);\n\nconst InsightsElement = ({ element: Element }) => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    {Element}\n  </Suspense>\n);\n\nInsightsElement.propTypes = {\n  element: propTypes.element.isRequired,\n};\n\nexport const Router = () => (\n  <Routes>\n    <Route\n      path=\"/cves/:cveId\"\n      element={<InsightsElement element={<CveDetailPage />} />}\n    />\n    <Route\n      path=\"/clusters/:clusterId/cves\"\n      element={\n        <InsightsElement\n          element={<ClusterDetailPage activeTab={CLUSTER_DETAIL_TABS.cves} />}\n        />\n      }\n    />\n    <Route\n      path=\"/clusters/:clusterId/images\"\n      element={\n        <InsightsElement\n          element={<ClusterDetailPage activeTab={CLUSTER_DETAIL_TABS.images} />}\n        />\n      }\n    />\n    <Route\n      path=\"/cves\"\n      element={<InsightsElement element={<CveListPage />} />}\n    />\n    <Route\n      path=\"/clusters\"\n      element={<InsightsElement element={<ClusterListPage />} />}\n    />\n    <Route path=\"*\" element={<Navigate to=\"cves\" replace />} />\n  </Routes>\n);\n","import React, { Fragment } from 'react';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './App.scss';\nimport { Router } from './Router';\n\nconst App = (props) => {\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <Router childProps={props} />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  Bullseye,\n  Text,\n} from '@patternfly/react-core';\n\nconst MissingMetadata = ({ ...props }) => (\n  <Bullseye>\n    <EmptyState variant=\"lg\" {...props}>\n      <Text>\n        <strong>No description available</strong>\n      </Text>\n      <EmptyStateBody>\n        This CVE has been published, however metadata about this CVE is not yet\n        available on Red Hat Insights. Metadata is usually available on Insights\n        within 24 hours of a CVE being published.\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nMissingMetadata.propTypes = {\n  props: propTypes.object,\n};\n\nexport default MissingMetadata;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SEVERITY_OPTIONS } from '../../Helpers/constants';\nimport { SecurityIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst ShieldSet = ({ count, linkTo }) => {\n  const DISABLED_COLOR = 'var(--pf-global--disabled-color--200)';\n\n  return (\n    <div className=\"shield-set\">\n      {SEVERITY_OPTIONS.map((severityOption) => (\n        <Tooltip\n          key={severityOption.value}\n          content={`${severityOption.label} severity`}\n        >\n          {severityOption.hasIcon &&\n            (count[severityOption.value] === 0 ? (\n              <a className=\"disabled-shield nowrap\">\n                <SecurityIcon style={{ color: DISABLED_COLOR }} />\n                <span>0</span>\n              </a>\n            ) : (\n              <Link\n                key={severityOption.value}\n                to={`${linkTo}?severity=${severityOption.value}`}\n                className=\"nowrap\"\n              >\n                <SecurityIcon style={{ color: severityOption.iconColor }} />\n                <span>{count[severityOption.value]}</span>\n              </Link>\n            ))}\n        </Tooltip>\n      ))}\n    </div>\n  );\n};\n\nShieldSet.propTypes = {\n  count: PropTypes.shape({\n    critical: PropTypes.number,\n    important: PropTypes.number,\n    moderate: PropTypes.number,\n    low: PropTypes.number,\n  }).isRequired,\n  linkTo: PropTypes.string,\n};\n\nexport default ShieldSet;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport parseCvssScore from '@redhat-cloud-services/frontend-components-utilities/parseCvssScore';\nimport { Shield } from '@redhat-cloud-services/frontend-components/Shield';\nimport ShieldSet from '../Components/PresentationalComponents/ShieldSet';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { subtractDays, subtractYears } from './miscHelper';\nimport MissingMetadata from '../Components/PresentationalComponents/EmptyStates/MissingMetadata';\n\nexport const HEADER_ALERT_DISMISSED_KEY = 'vuln4shift:header-alert-dismissed';\n\nexport const DEFAULT_LIMIT = 20;\n\nexport const CLUSTER_DETAIL_TABS = {\n  cves: 'cves',\n  images: 'images',\n};\n\n/* FILTER OPTIONS */\n\nexport const PUBLISHED_OPTIONS = [\n  {\n    value: 'all',\n    label: 'All',\n  },\n  {\n    value: 'last7days',\n    label: 'Last 7 days',\n    from: subtractDays(new Date(), 7),\n  },\n  {\n    value: 'last30days',\n    label: 'Last 30 days',\n    from: subtractDays(new Date(), 30),\n  },\n  {\n    value: 'last90days',\n    label: 'Last 90 days',\n    from: subtractDays(new Date(), 90),\n  },\n  {\n    value: 'lastYear',\n    label: 'Last year',\n    from: subtractYears(new Date(), 1),\n  },\n  {\n    value: 'moreThanYear',\n    label: 'More than 1 year ago',\n    to: subtractYears(new Date(), 1),\n  },\n];\n\nexport const SEVERITY_OPTIONS = [\n  {\n    value: 'critical',\n    label: 'Critical',\n    iconColor: 'var(--pf-global--danger-color--100)',\n    textColor: 'var(--pf-global--danger-color--100)',\n    hasIcon: true,\n  },\n  {\n    value: 'important',\n    label: 'Important',\n    iconColor: 'var(--pf-global--palette--orange-300)',\n    textColor: 'var(--pf-global--palette--orange-400)',\n    hasIcon: true,\n  },\n  {\n    value: 'moderate',\n    label: 'Moderate',\n    iconColor: 'var(--pf-global--warning-color--100)',\n    textColor: 'var(--pf-global--warning-color--200)',\n    hasIcon: true,\n  },\n  {\n    value: 'low',\n    label: 'Low',\n    iconColor: 'var(--pf-global--Color--200)',\n    textColor: 'var(--pf-global--default-color--300)',\n    hasIcon: true,\n  },\n  {\n    value: 'none',\n    label: 'Unknown',\n  },\n];\n\nexport const CLUSTER_SEVERITY_OPTIONS = [\n  {\n    value: 'any',\n    label: 'All clusters',\n  },\n  {\n    value: 'critical',\n    label: 'Critical',\n  },\n  {\n    value: 'important',\n    label: 'Important',\n  },\n  {\n    value: 'moderate',\n    label: 'Moderate',\n  },\n  {\n    value: 'low',\n    label: 'Low',\n  },\n];\n\nexport const EXPOSED_CLUSTERS_OPTIONS = [\n  {\n    value: 'oneOrMore',\n    label: '1 or more',\n  },\n  {\n    value: 'none',\n    label: 'None',\n  },\n];\n\nexport const CLUSTER_STATUS_OPTIONS = [\n  {\n    value: 'Connected',\n    label: 'Connected',\n  },\n  {\n    value: 'Disconnected',\n    label: 'Disconnected',\n  },\n  {\n    value: 'Stale',\n    label: 'Stale',\n  },\n  {\n    value: 'N/A',\n    label: 'Unknown',\n  },\n];\n\nexport const CLUSTER_VERSION_OPTIONS = [\n  {\n    value: 'N/A',\n    label: 'Unknown',\n  },\n];\n\nexport const CLUSTER_PROVIDER_OPTIONS = [\n  {\n    value: 'N/A',\n    label: 'Unknown',\n  },\n];\n\n/* TABLE COLUMNS */\n\nexport const CVE_LIST_TABLE_COLUMNS = [\n  {\n    title: 'CVE ID',\n    sortParam: 'synopsis',\n  },\n  {\n    title: 'Publish date',\n    sortParam: 'publish_date',\n  },\n  {\n    title: 'Severity',\n    sortParam: 'severity',\n  },\n  {\n    title: 'CVSS base score',\n    sortParam: 'cvss_score',\n  },\n  {\n    title: 'Exposed clusters',\n    sortParam: 'clusters_exposed',\n  },\n  {\n    title: 'Exposed images',\n    sortParam: 'images_exposed',\n  },\n];\n\nexport const CLUSTER_LIST_TABLE_COLUMNS = [\n  {\n    title: 'Name',\n    sortParam: 'display_name',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Status',\n    sortParam: 'status',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Type',\n  },\n  {\n    title: 'Version',\n    sortParam: 'version',\n  },\n  {\n    title: 'CVEs severity',\n    sortParam: 'cluster_severity',\n  },\n  {\n    title: 'Provider',\n    sortParam: 'provider',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Last seen',\n    sortParam: 'last_seen',\n  },\n];\n\nexport const CVE_DETAIL_TABLE_COLUMNS = [\n  {\n    title: 'Name',\n    sortParam: 'display_name',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Status',\n    sortParam: 'status',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Type',\n  },\n  {\n    title: 'Version',\n    sortParam: 'version',\n  },\n  {\n    title: 'Provider',\n    sortParam: 'provider',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Last seen',\n    sortParam: 'last_seen',\n  },\n];\n\nexport const CLUSTER_CVES_TABLE_COLUMNS = [\n  {\n    title: 'CVE ID',\n    sortParam: 'synopsis',\n  },\n  {\n    title: 'Publish date',\n    sortParam: 'publish_date',\n  },\n  {\n    title: 'Severity',\n    sortParam: 'severity',\n  },\n  {\n    title: 'CVSS base score',\n    sortParam: 'cvss_score',\n  },\n];\n\nexport const CLUSTER_IMAGES_TABLE_COLUMNS = [\n  {\n    title: 'Name',\n    sortParam: 'name',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Registry name',\n    sortParam: 'registry',\n  },\n  {\n    title: 'Version',\n  },\n];\n\n/* TABLE ROW MAPPERS */\n\nconst createCveDescription = (row) => (\n  <Fragment>\n    {row.description === 'unknown' ? (\n      <MissingMetadata variant=\"large\" style={{ padding: 0 }} />\n    ) : (\n      <TextContent>\n        <Text component={TextVariants.h6} style={{ fontSize: 14 }}>\n          CVE description\n        </Text>\n        {row.description}\n      </TextContent>\n    )}\n    <Link\n      to={'../cves/' + row.synopsis}\n      className=\"pf-u-mt-md pf-u-display-block\"\n    >\n      View more information about this CVE\n    </Link>\n  </Fragment>\n);\n\nexport const CVE_LIST_TABLE_MAPPER = (row) => ({\n  key: row.synopsis,\n  cells: [\n    <Link to={'../cves/' + row.synopsis} key={row.synopsis}>\n      {row.synopsis}\n    </Link>,\n    processDate(row.publish_date),\n    <Shield hasLabel impact={row.severity} key={row.synopsis} />,\n    parseCvssScore(row.cvss2_score, row.cvss3_score, true),\n    <Link to={'../cves/' + row.synopsis} key={row.synopsis}>\n      {row.clusters_exposed}\n    </Link>,\n    <Link to={'../cves/' + row.synopsis} key={row.synopsis}>\n      {row.images_exposed}\n    </Link>,\n  ],\n  expandableContent: createCveDescription(row),\n});\n\nexport const CLUSTER_LIST_TABLE_MAPPER = (row) => ({\n  key: row.id,\n  cells: [\n    <Link to={`../clusters/${row.id}/cves`} key={row.id}>\n      {row.display_name}\n    </Link>,\n    row.status,\n    row.type,\n    row.version,\n    <ShieldSet\n      key={row.id}\n      count={{ ...row.cves_severity }}\n      linkTo={`./${row.id}`}\n    />,\n    row.provider,\n    <DateFormat key={row.id} date={row.last_seen} type=\"relative\" />,\n  ],\n});\n\nexport const CVE_DETAIL_TABLE_MAPPER = (row) => ({\n  key: row.id,\n  cells: [\n    <Link to={`../clusters/${row.id}/cves`} key={row.id}>\n      {row.display_name}\n    </Link>,\n    row.status,\n    row.type,\n    row.version,\n    row.provider,\n    <DateFormat key={row.id} date={row.last_seen} type=\"relative\" />,\n  ],\n});\n\nexport const CLUSTER_CVES_TABLE_MAPPER = (row) => ({\n  key: row.synopsis,\n  cells: [\n    <Link to={'../cves/' + row.synopsis} key={row.synopsis}>\n      {row.synopsis}\n    </Link>,\n    processDate(row.publish_date),\n    <Shield hasLabel impact={row.severity} key={row.synopsis} />,\n    parseCvssScore(row.cvss2_score, row.cvss3_score, true),\n  ],\n  expandableContent: createCveDescription(row),\n});\n\nexport const CLUSTER_IMAGES_TABLE_MAPPER = (row) => ({\n  key: row.name,\n  cells: [row.name, row.registry, row.version],\n});\n\n/* ALLOWED PARAMETERS */\n\nexport const GENERIC_ALLOWED_PARAMS = ['limit', 'offset', 'sort'];\n\nexport const CVE_LIST_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'published',\n  'severity',\n  'cvss_score',\n  'affected_clusters',\n];\n\nexport const CLUSTER_LIST_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'status',\n  'version',\n  'cluster_severity',\n  'provider',\n];\n\nexport const CVE_DETAIL_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'status',\n  'version',\n  'provider',\n];\n\nexport const CLUSTER_CVES_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'published',\n  'severity',\n  'cvss_score',\n];\n\nexport const CLUSTER_IMAGES_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'registry',\n  'version',\n];\n\n/* DEFAULT FILTERS */\n\nexport const CVE_LIST_DEFAULT_FILTERS = {\n  affected_clusters: 'oneOrMore',\n};\n\nexport const CLUSTER_LIST_DEFAULT_FILTERS = {\n  cluster_severity: 'any',\n};\n\nexport const CVE_DETAIL_DEFAULT_FILTERS = {};\n\nexport const CLUSTER_CVES_DEFAULT_FILTERS = {};\n\nexport const CLUSTER_IMAGES_DEFAULT_FILTERS = {};\n\n/* EXPORTS */\nexport const CVE_LIST_EXPORT_PREFIX = 'ocp-vulnerability_cves--';\nexport const CLUSTER_LIST_EXPORT_PREFIX = 'ocp-vulnerability_clusters--';\nexport const CVE_DETAIL_EXPORT_PREFIX = 'ocp-vulnerability_exposed-clusters--';\nexport const CLUSTER_CVES_EXPORT_PREFIX = 'ocp-vulnerability_cluster-cves--';\nexport const CLUSTER_IMAGES_EXPORT_PREFIX =\n  'ocp-vulnerability_cluster-images--';\n","import isEqual from 'lodash/isEqual';\n\nexport const getCvssScoreFromUrlParam = (urlParam) => {\n  if (!urlParam?.includes(',')) {\n    urlParam = ',';\n  }\n\n  const urlMin = urlParam.split(',')[0];\n  const urlMax = urlParam.split(',')[1];\n\n  let min, max;\n\n  min = urlMin === '' ? 0 : Number(urlMin);\n  max = urlMax === '' ? 10 : Number(urlMax);\n\n  return [min, max];\n};\n\nexport const deepFreeze = (object) => {\n  const propNames = Object.getOwnPropertyNames(object);\n\n  for (const name of propNames) {\n    const value = object[name];\n\n    if (value && typeof value === 'object') {\n      deepFreeze(value);\n    }\n  }\n\n  return Object.freeze(object);\n};\n\nexport const subtractDays = (currentDate, toSubtract) => {\n  return currentDate.setDate(currentDate.getDate() - toSubtract);\n};\n\nexport const subtractYears = (currentDate, toSubtract) => {\n  return currentDate.setFullYear(currentDate.getFullYear() - toSubtract);\n};\n\nexport const areAnyFiltersApplied = ({\n  currentParams,\n  defaultParams,\n  filterParams,\n}) => {\n  // filter out params which have nothing to do with filtering, like page, sort, etc.\n  const reducedParams = filterParams.reduce(\n    (acc, param) => ({\n      ...acc,\n      ...(currentParams[param] && { [param]: currentParams[param] }),\n    }),\n    {}\n  );\n\n  return !isEqual(reducedParams, defaultParams);\n};\n\nexport const setupFilters = (filters, meta, defaultFilters, apply) => {\n  if (filters.length === 0) {\n    return [undefined, undefined];\n  }\n\n  const filterKeys = filters.map((item) => item.filterConfig.key);\n  const showDeleteButton = areAnyFiltersApplied({\n    currentParams: meta,\n    defaultParams: defaultFilters,\n    filterParams: filterKeys,\n  });\n\n  let filterConfig = { items: [] };\n  let activeFiltersConfig = {\n    filters: [],\n    onDelete: (_, categories, isReset) =>\n      isReset\n        ? apply({ ...defaultFilters, offset: 0, limit: meta.limit }, true)\n        : categories.forEach((category) => category.onDelete(category.chips)),\n    deleteTitle: 'Reset filter',\n    showDeleteButton,\n  };\n\n  filters.forEach((filter) => {\n    filterConfig.items.push(filter.filterConfig);\n\n    filter.activeFiltersConfig?.isShown &&\n      activeFiltersConfig.filters.push(filter.activeFiltersConfig);\n  });\n\n  return [filterConfig, activeFiltersConfig, showDeleteButton];\n};\n\nexport const isTimestampValid = (stateTimestamp, actionTimestamp) =>\n  actionTimestamp >= stateTimestamp;\n\nexport const urlChangeTab = (urlPath, newTab) => {\n  const lastSlashIndex = urlPath.lastIndexOf('/');\n  return urlPath.substring(0, lastSlashIndex + 1) + newTab;\n};\n","/* eslint-disable prettier/prettier */\n\n/* FETCHING DATA */\nexport const FETCH_CVE_LIST_TABLE = 'FETCH_CVE_LIST_TABLE';\nexport const FETCH_CVE_DETAIL_TABLE = 'FETCH_CVE_DETAIL_TABLE';\nexport const FETCH_CLUSTER_LIST_TABLE = 'FETCH_CLUSTER_LIST_TABLE';\nexport const FETCH_CLUSTER_CVES_TABLE = 'FETCH_CLUSTER_CVES_TABLE';\nexport const FETCH_CLUSTER_IMAGES_TABLE = 'FETCH_CLUSTER_IMAGES_TABLE';\nexport const FETCH_CVE_DETAILS = 'FETCH_CVE_DETAILS';\nexport const FETCH_CLUSTER_DETAILS = 'FETCH_CLUSTER_DETAILS';\n\n/* CHANGING TABLE PARAMS */\nexport const CHANGE_CVE_LIST_TABLE_PARAMS = 'CHANGE_CVE_LIST_TABLE_PARAMS';\nexport const CHANGE_CVE_DETAIL_TABLE_PARAMS = 'CHANGE_CVE_DETAIL_TABLE_PARAMS';\nexport const CHANGE_CLUSTER_LIST_TABLE_PARAMS = 'CHANGE_CLUSTER_LIST_TABLE_PARAMS';\nexport const CHANGE_CLUSTER_CVES_TABLE_PARAMS = 'CHANGE_CLUSTER_CVES_TABLE_PARAMS';\nexport const CHANGE_CLUSTER_IMAGES_TABLE_PARAMS = 'CHANGE_CLUSTER_IMAGES_TABLE_PARAMS';\n","import {\n  CVE_LIST_DEFAULT_FILTERS,\n  DEFAULT_LIMIT,\n} from '../../Helpers/constants';\nimport { deepFreeze, isTimestampValid } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  cves: [],\n  isLoading: true,\n  timestamp: new Date(),\n  meta: {\n    limit: DEFAULT_LIMIT,\n    offset: 0,\n    total_items: 0,\n    sort: '-publish_date',\n    ...CVE_LIST_DEFAULT_FILTERS,\n  },\n});\n\nconst CveListStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CVE_LIST_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isLoading: true,\n        error: undefined,\n        timestamp: action.meta.timestamp,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_LIST_TABLE}_FULFILLED`: {\n      if (isTimestampValid(state.timestamp, action.meta.timestamp)) {\n        return {\n          ...state,\n          cves: action.payload.data.data,\n          meta: {\n            ...state.meta,\n            total_items: action.payload.data.meta.total_items,\n          },\n          isLoading: false,\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case `${ActionTypes.FETCH_CVE_LIST_TABLE}_REJECTED`: {\n      return {\n        ...state,\n        isLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CVE_LIST_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          total_items: state.meta.total_items,\n          sort: state.meta.sort,\n          limit: state.meta.limit,\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default CveListStore;\n","import {\n  CLUSTER_LIST_DEFAULT_FILTERS,\n  DEFAULT_LIMIT,\n} from '../../Helpers/constants';\nimport { deepFreeze, isTimestampValid } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  clusters: [],\n  isLoading: true,\n  timestamp: new Date(),\n  meta: {\n    limit: DEFAULT_LIMIT,\n    offset: 0,\n    total_items: 0,\n    sort: '-last_seen',\n    ...CLUSTER_LIST_DEFAULT_FILTERS,\n  },\n});\n\nconst ClusterListStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CLUSTER_LIST_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isLoading: true,\n        error: undefined,\n        timestamp: action.meta.timestamp,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_LIST_TABLE}_FULFILLED`: {\n      const { data, meta } = action.payload.data;\n\n      if (isTimestampValid(state.timestamp, action.meta.timestamp)) {\n        return {\n          ...state,\n          clusters: data,\n          meta: {\n            ...state.meta,\n            total_items: meta.total_items,\n            dynamic_provider_options: meta.cluster_providers_all,\n            dynamic_status_options: meta.cluster_statuses_all,\n            dynamic_version_options: meta.cluster_versions_all,\n          },\n          isLoading: false,\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_LIST_TABLE}_REJECTED`: {\n      return {\n        ...state,\n        isLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CLUSTER_LIST_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          total_items: state.meta.total_items,\n          sort: state.meta.sort,\n          limit: state.meta.limit,\n          dynamic_provider_options: state.meta.dynamic_provider_options,\n          dynamic_status_options: state.meta.dynamic_status_options,\n          dynamic_version_options: state.meta.dynamic_version_options,\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default ClusterListStore;\n","import {\n  CVE_DETAIL_DEFAULT_FILTERS,\n  DEFAULT_LIMIT,\n} from '../../Helpers/constants';\nimport { deepFreeze, isTimestampValid } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  cve: {},\n  clusters: [],\n  isDetailLoading: true,\n  isTableLoading: true,\n  timestamp: new Date(),\n  meta: {\n    limit: DEFAULT_LIMIT,\n    offset: 0,\n    total_items: 0,\n    sort: '-last_seen',\n    ...CVE_DETAIL_DEFAULT_FILTERS,\n  },\n});\n\nconst CveDetailStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CVE_DETAIL_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isTableLoading: true,\n        error: undefined,\n        timestamp: action.meta.timestamp,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAIL_TABLE}_FULFILLED`: {\n      if (isTimestampValid(state.timestamp, action.meta.timestamp)) {\n        const { data, meta } = action.payload.data;\n\n        return {\n          ...state,\n          clusters: data,\n          meta: {\n            ...state.meta,\n            total_items: meta.total_items,\n            dynamic_provider_options: meta.cluster_providers_all,\n            dynamic_status_options: meta.cluster_statuses_all,\n            dynamic_version_options: meta.cluster_versions_all,\n          },\n          isTableLoading: false,\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAIL_TABLE}_REJECTED`: {\n      return {\n        ...state,\n        isTableLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CVE_DETAIL_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          total_items: state.meta.total_items,\n          sort: state.meta.sort,\n          limit: state.meta.limit,\n          dynamic_provider_options: state.meta.dynamic_provider_options,\n          dynamic_status_options: state.meta.dynamic_status_options,\n          dynamic_version_options: state.meta.dynamic_version_options,\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAILS}_PENDING`: {\n      return {\n        ...state,\n        isDetailLoading: true,\n        error: undefined,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAILS}_FULFILLED`: {\n      return {\n        ...state,\n        cve: action.payload.data.data,\n        isDetailLoading: false,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAILS}_REJECTED`: {\n      return {\n        ...state,\n        isDetailLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default CveDetailStore;\n","import {\n  CLUSTER_CVES_DEFAULT_FILTERS,\n  DEFAULT_LIMIT,\n} from '../../Helpers/constants';\nimport { deepFreeze, isTimestampValid } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  cluster: {},\n  cves: [],\n  isTableLoading: true,\n  timestamp: new Date(),\n  meta: {\n    limit: DEFAULT_LIMIT,\n    offset: 0,\n    total_items: 0,\n    sort: '-publish_date',\n    ...CLUSTER_CVES_DEFAULT_FILTERS,\n  },\n});\n\nconst ClusterCvesStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CLUSTER_CVES_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isTableLoading: true,\n        error: undefined,\n        timestamp: action.meta.timestamp,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_CVES_TABLE}_FULFILLED`: {\n      if (isTimestampValid(state.timestamp, action.meta.timestamp)) {\n        return {\n          ...state,\n          cves: action.payload.data.data,\n          meta: {\n            ...state.meta,\n            total_items: action.payload.data.meta.total_items,\n          },\n          isTableLoading: false,\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_CVES_TABLE}_REJECTED`: {\n      return {\n        ...state,\n        isTableLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CLUSTER_CVES_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          total_items: state.meta.total_items,\n          sort: state.meta.sort,\n          limit: state.meta.limit,\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default ClusterCvesStore;\n","import {\n  CLUSTER_IMAGES_DEFAULT_FILTERS,\n  DEFAULT_LIMIT,\n} from '../../Helpers/constants';\nimport { deepFreeze, isTimestampValid } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  cluster: {},\n  exposed_images: [],\n  isTableLoading: true,\n  timestamp: new Date(),\n  meta: {\n    limit: DEFAULT_LIMIT,\n    offset: 0,\n    total_items: 0,\n    sort: 'name',\n    ...CLUSTER_IMAGES_DEFAULT_FILTERS,\n  },\n});\n\nconst ClusterImagesStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CLUSTER_IMAGES_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isTableLoading: true,\n        error: undefined,\n        timestamp: action.meta.timestamp,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_IMAGES_TABLE}_FULFILLED`: {\n      if (isTimestampValid(state.timestamp, action.meta.timestamp)) {\n        return {\n          ...state,\n          exposed_images: action.payload.data.data,\n          meta: {\n            ...state.meta,\n            total_items: action.payload.data.meta.total_items,\n          },\n          isTableLoading: false,\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_IMAGES_TABLE}_REJECTED`: {\n      return {\n        ...state,\n        isTableLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CLUSTER_IMAGES_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          total_items: state.meta.total_items,\n          sort: state.meta.sort,\n          limit: state.meta.limit,\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default ClusterImagesStore;\n","import { deepFreeze } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  cluster: {},\n  isDetailLoading: true,\n});\n\nconst ClusterDetailStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CLUSTER_DETAILS}_PENDING`: {\n      return {\n        ...state,\n        isDetailLoading: true,\n        error: undefined,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAILS}_FULFILLED`: {\n      return {\n        ...state,\n        cluster: action.payload.data.data,\n        isDetailLoading: false,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAILS}_REJECTED`: {\n      return {\n        ...state,\n        isDetailLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default ClusterDetailStore;\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport CveListStore from './Reducers/CveListStore';\nimport ClusterListStore from './Reducers/ClusterListStore';\nimport CveDetailStore from './Reducers/CveDetailStore';\nimport ClusterCvesStore from './Reducers/ClusterCvesStore';\nimport ClusterImagesStore from './Reducers/ClusterImagesStore';\nimport ClusterDetailStore from './Reducers/ClusterDetailStore';\n\nlet registry;\n\nconst notificationsFilterMiddleware = () => (next) => (action) => {\n  const matchRejected = (type) => type.match(new RegExp(`_REJECTED$`));\n\n  if (matchRejected(action.type) && action.meta?.noNotificationOnError) {\n    action.meta = { ...action.meta, noError: true };\n  }\n\n  next(action);\n};\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsFilterMiddleware,\n    notificationsMiddleware({\n      errorDescriptionKey: 'detail',\n      // TODO: for some reason this does not work\n      autoDismiss: false,\n    }),\n    ...middleware,\n  ]);\n\n  registry.register({ notifications: notificationsReducer });\n\n  registry.register({ CveListStore });\n  registry.register({ ClusterListStore });\n  registry.register({ CveDetailStore });\n  registry.register({ ClusterCvesStore });\n  registry.register({ ClusterImagesStore });\n  registry.register({ ClusterDetailStore });\n\n  return registry;\n}\n"],"names":["CveListPage","lazy","ClusterListPage","CveDetailPage","ClusterDetailPage","InsightsElement","element","Element","Suspense","fallback","Bullseye","Spinner","propTypes","isRequired","Router","Routes","Route","path","activeTab","cves","images","Navigate","to","replace","props","Fragment","childProps","MissingMetadata","EmptyState","variant","Text","EmptyStateBody","ShieldSet","count","linkTo","className","SEVERITY_OPTIONS","map","severityOption","Tooltip","key","value","content","label","hasIcon","style","color","Link","iconColor","critical","important","moderate","low","HEADER_ALERT_DISMISSED_KEY","DEFAULT_LIMIT","CLUSTER_DETAIL_TABS","PUBLISHED_OPTIONS","from","Date","textColor","CLUSTER_SEVERITY_OPTIONS","EXPOSED_CLUSTERS_OPTIONS","CLUSTER_STATUS_OPTIONS","CLUSTER_VERSION_OPTIONS","CLUSTER_PROVIDER_OPTIONS","CVE_LIST_TABLE_COLUMNS","title","sortParam","CLUSTER_LIST_TABLE_COLUMNS","sortDefaultDirection","CVE_DETAIL_TABLE_COLUMNS","CLUSTER_CVES_TABLE_COLUMNS","CLUSTER_IMAGES_TABLE_COLUMNS","createCveDescription","row","description","padding","TextContent","component","TextVariants","h6","fontSize","synopsis","CVE_LIST_TABLE_MAPPER","cells","publish_date","Shield","hasLabel","impact","severity","parseCvssScore","cvss2_score","cvss3_score","clusters_exposed","images_exposed","expandableContent","CLUSTER_LIST_TABLE_MAPPER","id","display_name","status","type","version","cves_severity","provider","DateFormat","date","last_seen","CVE_DETAIL_TABLE_MAPPER","CLUSTER_CVES_TABLE_MAPPER","CLUSTER_IMAGES_TABLE_MAPPER","name","registry","GENERIC_ALLOWED_PARAMS","CVE_LIST_ALLOWED_PARAMS","CLUSTER_LIST_ALLOWED_PARAMS","CVE_DETAIL_ALLOWED_PARAMS","CLUSTER_CVES_ALLOWED_PARAMS","CLUSTER_IMAGES_ALLOWED_PARAMS","CVE_LIST_DEFAULT_FILTERS","affected_clusters","CLUSTER_LIST_DEFAULT_FILTERS","cluster_severity","CVE_DETAIL_DEFAULT_FILTERS","CLUSTER_CVES_DEFAULT_FILTERS","CLUSTER_IMAGES_DEFAULT_FILTERS","CVE_LIST_EXPORT_PREFIX","CLUSTER_LIST_EXPORT_PREFIX","CVE_DETAIL_EXPORT_PREFIX","CLUSTER_CVES_EXPORT_PREFIX","CLUSTER_IMAGES_EXPORT_PREFIX","getCvssScoreFromUrlParam","urlParam","includes","urlMin","split","urlMax","min","max","Number","deepFreeze","object","propNames","Object","getOwnPropertyNames","freeze","subtractDays","currentDate","toSubtract","setDate","getDate","subtractYears","setFullYear","getFullYear","setupFilters","filters","meta","defaultFilters","apply","length","undefined","filterKeys","item","filterConfig","showDeleteButton","currentParams","defaultParams","filterParams","reducedParams","reduce","acc","param","areAnyFiltersApplied","items","activeFiltersConfig","onDelete","_","categories","isReset","offset","limit","forEach","category","chips","deleteTitle","filter","push","isShown","isTimestampValid","stateTimestamp","actionTimestamp","urlChangeTab","urlPath","newTab","lastSlashIndex","lastIndexOf","substring","FETCH_CVE_LIST_TABLE","FETCH_CVE_DETAIL_TABLE","FETCH_CLUSTER_LIST_TABLE","FETCH_CLUSTER_CVES_TABLE","FETCH_CLUSTER_IMAGES_TABLE","FETCH_CVE_DETAILS","FETCH_CLUSTER_DETAILS","CHANGE_CVE_LIST_TABLE_PARAMS","CHANGE_CVE_DETAIL_TABLE_PARAMS","CHANGE_CLUSTER_LIST_TABLE_PARAMS","CHANGE_CLUSTER_CVES_TABLE_PARAMS","CHANGE_CLUSTER_IMAGES_TABLE_PARAMS","initialState","isLoading","timestamp","total_items","sort","state","action","ActionTypes","error","payload","data","clusters","dynamic_provider_options","cluster_providers_all","dynamic_status_options","cluster_statuses_all","dynamic_version_options","cluster_versions_all","cve","isDetailLoading","isTableLoading","cluster","exposed_images","notificationsFilterMiddleware","next","match","RegExp","noNotificationOnError","noError","init","middleware","notificationsMiddleware","errorDescriptionKey","autoDismiss","register","notifications","CveListStore","ClusterListStore","CveDetailStore","ClusterCvesStore","ClusterImagesStore","ClusterDetailStore"],"sourceRoot":""}