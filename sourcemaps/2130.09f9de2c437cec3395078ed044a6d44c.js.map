{"version":3,"file":"js/2130.0a5c9b8c1dccf92092c2.js","mappings":"iQAIA,MAAMA,UAAyB,YAC3BC,SACI,MAAMC,EAAKC,KAAKC,OAAO,GAAEC,EAAE,UAAEC,EAAS,QAAEC,EAAO,WAAEC,EAAU,SAAEC,GAAaP,EAAIE,GAAQ,QAAOF,EAAI,CAAC,KAAM,YAAa,UAAW,aAAc,aAC9I,OAAQ,gBAAoB,SAAUQ,OAAOC,OAAO,CAAEN,GAAIA,EAAIC,WAAW,OAAI,IAAOM,iBAAkBN,GAAYC,QAASA,EAASM,KAAM,SAAUC,SAAUN,GAAcJ,GAAQK,EACxL,EAEJT,EAAiBe,YAAc,mBAC/Bf,EAAiBgB,aAAe,CAC5BV,UAAW,GACXE,YAAY,EACZD,QAAS,Q,0BCTb,MAAMU,UAA2B,YAC7BC,YAAYd,GACRe,MAAMf,GACND,KAAKiB,aAAgBC,IACjBlB,KAAKC,MAAMkB,SAASD,EAAME,OAAOC,QAASH,EAAM,EAEpDlB,KAAKsB,iBAAmB,KACpB,MAAM,UAAEC,EAAS,eAAEC,GAAmBxB,KAAKC,MAC3C,OAAkB,OAAdsB,SAImBE,IAAdF,EACEA,EAEJC,EAAc,EAEzBxB,KAAK0B,MAAQ,CACTC,aAAa,IAAAC,kBAAiBd,EAAmBF,aAEzD,CACAd,SACI,MAAMC,EAAKC,KAAKC,OAAO,UAAEE,EAAS,QAAE0B,EAAO,WAAExB,EAAU,UAAEkB,EAAS,SAAEjB,EAAQ,OAAEwB,EAAM,SAAEC,EAAQ,SAE9FZ,EAAQ,eAAEK,EAAc,GAAEtB,GAAOH,EAAIE,GAAQ,QAAOF,EAAI,CAAC,YAAa,UAAW,aAAc,YAAa,WAAY,SAAU,WAAY,WAAY,iBAAkB,OACtKiC,EAAO1B,GAAa,gBAAoB,OAAQ,CAAEH,WAAW,OAAI,IAAO8B,WAAY9B,GAAY,cAAe,OAAQD,GAAIA,GAAMI,GACvI,OAAQ,gBAAoB,QAAS,CAAEH,WAAW,OAAI,IAAO+B,OAAQ5B,GAAY,IAAO6B,UAAUC,WAAYjC,GAAYkC,QAASnC,GAC/H,gBAAoB,QAASK,OAAOC,OAAO,CAAEL,WAAW,OAAI,IAAOmC,kBAA4Cb,IAA5BzB,KAAKsB,oBAAoC,CAAEH,SAAUnB,KAAKiB,cAAiB,CAAEsB,KAAMrC,EAAIQ,KAAM,WAAY8B,IAAMC,GAASA,IAASA,EAAKC,cAA8B,OAAdnB,GAAqB,gBAAiBM,EAASlB,SAAUN,QAAkCoB,IAAnBD,EAA+B,CAAEA,kBAAmB,CAAEH,QAASE,IAAc,IAAAoB,cAAa7B,EAAmBF,iBAAwBa,IAAXK,EAAuBA,EAAS9B,KAAK0B,MAAMC,YAAaI,GAAW9B,IAC9e+B,EACR,EAEJlB,EAAmBF,YAAc,qBACjCE,EAAmBD,aAAe,CAC9BgB,SAAS,EACTxB,YAAY,EACZc,SAAU,KACd,E","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/MenuToggle/MenuToggleAction.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/MenuToggle/MenuToggleCheckbox.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/MenuToggle/menu-toggle';\nimport { css } from '@patternfly/react-styles';\nclass MenuToggleAction extends React.Component {\n    render() {\n        const _a = this.props, { id, className, onClick, isDisabled, children } = _a, props = __rest(_a, [\"id\", \"className\", \"onClick\", \"isDisabled\", \"children\"]);\n        return (React.createElement(\"button\", Object.assign({ id: id, className: css(styles.menuToggleButton, className), onClick: onClick, type: \"button\", disabled: isDisabled }, props), children));\n    }\n}\nMenuToggleAction.displayName = 'MenuToggleAction';\nMenuToggleAction.defaultProps = {\n    className: '',\n    isDisabled: false,\n    onClick: () => { }\n};\nexport { MenuToggleAction };\n//# sourceMappingURL=MenuToggleAction.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nclass MenuToggleCheckbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.target.checked, event);\n        };\n        this.calculateChecked = () => {\n            const { isChecked, defaultChecked } = this.props;\n            if (isChecked === null) {\n                // return false here and the indeterminate state will be set to true through the ref\n                return false;\n            }\n            else if (isChecked !== undefined) {\n                return isChecked;\n            }\n            return defaultChecked;\n        };\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(MenuToggleCheckbox.displayName)\n        };\n    }\n    render() {\n        const _a = this.props, { className, isValid, isDisabled, isChecked, children, ouiaId, ouiaSafe, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onChange, defaultChecked, id } = _a, props = __rest(_a, [\"className\", \"isValid\", \"isDisabled\", \"isChecked\", \"children\", \"ouiaId\", \"ouiaSafe\", \"onChange\", \"defaultChecked\", \"id\"]);\n        const text = children && (React.createElement(\"span\", { className: css(styles.checkLabel, className), \"aria-hidden\": \"true\", id: id }, children));\n        return (React.createElement(\"label\", { className: css(styles.check, !children && styles.modifiers.standalone, className), htmlFor: id },\n            React.createElement(\"input\", Object.assign({ className: css(styles.checkInput) }, (this.calculateChecked() !== undefined && { onChange: this.handleChange }), { name: id, type: \"checkbox\", ref: (elem) => elem && (elem.indeterminate = isChecked === null), \"aria-invalid\": !isValid, disabled: isDisabled }, (defaultChecked !== undefined ? { defaultChecked } : { checked: isChecked }), getOUIAProps(MenuToggleCheckbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props)),\n            text));\n    }\n}\nMenuToggleCheckbox.displayName = 'MenuToggleCheckbox';\nMenuToggleCheckbox.defaultProps = {\n    isValid: true,\n    isDisabled: false,\n    onChange: () => undefined\n};\nexport { MenuToggleCheckbox };\n//# sourceMappingURL=MenuToggleCheckbox.js.map"],"names":["MenuToggleAction","render","_a","this","props","id","className","onClick","isDisabled","children","Object","assign","menuToggleButton","type","disabled","displayName","defaultProps","MenuToggleCheckbox","constructor","super","handleChange","event","onChange","target","checked","calculateChecked","isChecked","defaultChecked","undefined","state","ouiaStateId","getDefaultOUIAId","isValid","ouiaId","ouiaSafe","text","checkLabel","check","modifiers","standalone","htmlFor","checkInput","name","ref","elem","indeterminate","getOUIAProps"],"sourceRoot":""}