{"version":3,"file":"js/229.b895af768c5ee6fbbb11.js","mappings":"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","sources":["webpack:///./src/Router.js","webpack:///./src/App.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/MissingMetadata.js","webpack:///./src/Components/PresentationalComponents/ShieldSet.js","webpack:///./src/Helpers/constants.js","webpack:///./src/Helpers/miscHelper.js","webpack:///./src/Store/ActionTypes.js","webpack:///./src/Store/Reducers/CveListStore.js","webpack:///./src/Store/Reducers/ClusterListStore.js","webpack:///./src/Store/Reducers/CveDetailStore.js","webpack:///./src/Store/Reducers/ClusterDetailStore.js","webpack:///./src/Store/ReducerRegistry.js"],"sourcesContent":["import React, { Suspense, lazy } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst CveListPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"CveListPage\" */ './Components/SmartComponents/CveList/CveListPage'\n  )\n);\n\nconst ClusterListPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"ClusterListPage\" */ './Components/SmartComponents/ClusterList/ClusterListPage'\n  )\n);\n\nconst CveDetailPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"CveDetailPage\" */ './Components/SmartComponents/CveDetail/CveDetailPage'\n  )\n);\n\nconst ClusterDetailPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"ClusterDetailPage\" */ './Components/SmartComponents/ClusterDetail/ClusterDetailPage'\n  )\n);\n\nconst InsightsElement = ({ element: Element }) => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    {Element}\n  </Suspense>\n);\n\nInsightsElement.propTypes = {\n  element: propTypes.element.isRequired,\n};\n\nexport const Router = () => (\n  <Routes>\n    <Route\n      path=\"/cves/:cveId\"\n      element={<InsightsElement element={<CveDetailPage />} />}\n    />\n    <Route\n      path=\"/clusters/:clusterId\"\n      element={<InsightsElement element={<ClusterDetailPage />} />}\n    />\n    <Route\n      path=\"/cves\"\n      element={<InsightsElement element={<CveListPage />} />}\n    />\n    <Route\n      path=\"/clusters\"\n      element={<InsightsElement element={<ClusterListPage />} />}\n    />\n    <Route path=\"*\" element={<Navigate to=\"cves\" replace />} />\n  </Routes>\n);\n","import React, { Fragment } from 'react';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './App.scss';\nimport { Router } from './Router';\n\nconst App = (props) => {\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <Router childProps={props} />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  Bullseye,\n  Text,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\n\nconst MissingMetadata = ({ ...props }) => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.large} {...props}>\n      <Text>\n        <strong>No description available</strong>\n      </Text>\n      <EmptyStateBody>\n        This CVE has been published, however metadata about this CVE is not yet\n        available on Red Hat Insights. Metadata is usually available on Insights\n        within 24 hours of a CVE being published.\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nMissingMetadata.propTypes = {\n  props: propTypes.object,\n};\n\nexport default MissingMetadata;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SEVERITY_OPTIONS } from '../../Helpers/constants';\nimport { SecurityIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst ShieldSet = ({ count, linkTo }) => {\n  const DISABLED_COLOR = 'var(--pf-global--disabled-color--200)';\n\n  return (\n    <div className=\"shield-set\">\n      {SEVERITY_OPTIONS.map((severityOption) => (\n        <Tooltip\n          key={severityOption.value}\n          content={`${severityOption.label} severity`}\n        >\n          {severityOption.hasIcon &&\n            (count[severityOption.value] === 0 ? (\n              <a className=\"disabled-shield nowrap\">\n                <SecurityIcon style={{ color: DISABLED_COLOR }} />\n                <span>0</span>\n              </a>\n            ) : (\n              <Link\n                key={severityOption.value}\n                to={`../${linkTo}?severity=${severityOption.value}`}\n                className=\"nowrap\"\n              >\n                <SecurityIcon style={{ color: severityOption.iconColor }} />\n                <span>{count[severityOption.value]}</span>\n              </Link>\n            ))}\n        </Tooltip>\n      ))}\n    </div>\n  );\n};\n\nShieldSet.propTypes = {\n  count: PropTypes.shape({\n    critical: PropTypes.number,\n    important: PropTypes.number,\n    moderate: PropTypes.number,\n    low: PropTypes.number,\n  }).isRequired,\n  linkTo: PropTypes.string,\n};\n\nexport default ShieldSet;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport parseCvssScore from '@redhat-cloud-services/frontend-components-utilities/parseCvssScore';\nimport { Shield } from '@redhat-cloud-services/frontend-components/Shield';\nimport ShieldSet from '../Components/PresentationalComponents/ShieldSet';\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n  EmptyStateVariant,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { subtractDays, subtractYears } from './miscHelper';\nimport MissingMetadata from '../Components/PresentationalComponents/EmptyStates/MissingMetadata';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\n\nexport const HEADER_ALERT_DISMISSED_KEY = 'vuln4shift:header-alert-dismissed';\n\nexport const DEFAULT_LIMIT = 20;\n\n/* FILTER OPTIONS */\n\nexport const PUBLISHED_OPTIONS = [\n  {\n    value: 'all',\n    label: 'All',\n  },\n  {\n    value: 'last7days',\n    label: 'Last 7 days',\n    from: subtractDays(new Date(), 7),\n  },\n  {\n    value: 'last30days',\n    label: 'Last 30 days',\n    from: subtractDays(new Date(), 30),\n  },\n  {\n    value: 'last90days',\n    label: 'Last 90 days',\n    from: subtractDays(new Date(), 90),\n  },\n  {\n    value: 'lastYear',\n    label: 'Last year',\n    from: subtractYears(new Date(), 1),\n  },\n  {\n    value: 'moreThanYear',\n    label: 'More than 1 year ago',\n    to: subtractYears(new Date(), 1),\n  },\n];\n\nexport const SEVERITY_OPTIONS = [\n  {\n    value: 'critical',\n    label: 'Critical',\n    iconColor: 'var(--pf-global--danger-color--100)',\n    textColor: 'var(--pf-global--danger-color--100)',\n    hasIcon: true,\n  },\n  {\n    value: 'important',\n    label: 'Important',\n    iconColor: 'var(--pf-global--palette--orange-300)',\n    textColor: 'var(--pf-global--palette--orange-400)',\n    hasIcon: true,\n  },\n  {\n    value: 'moderate',\n    label: 'Moderate',\n    iconColor: 'var(--pf-global--warning-color--100)',\n    textColor: 'var(--pf-global--warning-color--200)',\n    hasIcon: true,\n  },\n  {\n    value: 'low',\n    label: 'Low',\n    iconColor: 'var(--pf-global--Color--200)',\n    textColor: 'var(--pf-global--default-color--300)',\n    hasIcon: true,\n  },\n  {\n    value: 'none',\n    label: 'Unknown',\n  },\n];\n\nexport const CLUSTER_SEVERITY_OPTIONS = [\n  {\n    value: 'any',\n    label: 'All clusters',\n  },\n  {\n    value: 'critical',\n    label: 'Critical',\n  },\n  {\n    value: 'important',\n    label: 'Important',\n  },\n  {\n    value: 'moderate',\n    label: 'Moderate',\n  },\n  {\n    value: 'low',\n    label: 'Low',\n  },\n];\n\nexport const EXPOSED_CLUSTERS_OPTIONS = [\n  {\n    value: 'oneOrMore',\n    label: '1 or more',\n  },\n  {\n    value: 'none',\n    label: 'None',\n  },\n];\n\nexport const CLUSTER_STATUS_OPTIONS = [\n  {\n    value: 'Connected',\n    label: 'Connected',\n  },\n  {\n    value: 'Disconnected',\n    label: 'Disconnected',\n  },\n  {\n    value: 'Stale',\n    label: 'Stale',\n  },\n  {\n    value: 'N/A',\n    label: 'Unknown',\n  },\n];\n\nexport const CLUSTER_VERSION_OPTIONS = [\n  {\n    value: 'N/A',\n    label: 'Unknown',\n  },\n];\n\nexport const CLUSTER_PROVIDER_OPTIONS = [\n  {\n    value: 'N/A',\n    label: 'Unknown',\n  },\n];\n\n/* TABLE COLUMNS */\n\nexport const CVE_LIST_TABLE_COLUMNS = [\n  {\n    title: 'CVE ID',\n    sortParam: 'synopsis',\n  },\n  {\n    title: 'Publish date',\n    sortParam: 'publish_date',\n  },\n  {\n    title: 'Severity',\n    sortParam: 'severity',\n  },\n  {\n    title: 'CVSS base score',\n    sortParam: 'cvss_score',\n  },\n  {\n    title: 'Exposed clusters',\n    sortParam: 'clusters_exposed',\n  },\n];\n\nexport const CLUSTER_LIST_TABLE_COLUMNS = [\n  {\n    title: 'Name',\n    sortParam: 'display_name',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Status',\n    sortParam: 'status',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Type',\n  },\n  {\n    title: 'Version',\n    sortParam: 'version',\n  },\n  {\n    stringTitle: 'CVEs severity',\n    title: (\n      <span>\n        CVEs severity\n        <Tooltip content=\"Sort clusters by Critical or Low severity. The filters applied do not affect the organization of this column.\">\n          <OutlinedQuestionCircleIcon id=\"cves-severity-question-mark\" />\n        </Tooltip>\n      </span>\n    ),\n    sortParam: 'cluster_severity',\n  },\n  {\n    title: 'Provider',\n    sortParam: 'provider',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Last seen',\n    sortParam: 'last_seen',\n  },\n];\n\nexport const CVE_DETAIL_TABLE_COLUMNS = [\n  {\n    title: 'Name',\n    sortParam: 'display_name',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Status',\n    sortParam: 'status',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Type',\n  },\n  {\n    title: 'Version',\n    sortParam: 'version',\n  },\n  {\n    title: 'Provider',\n    sortParam: 'provider',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Last seen',\n    sortParam: 'last_seen',\n  },\n];\n\nexport const CLUSTER_DETAIL_TABLE_COLUMNS = [\n  {\n    title: 'CVE ID',\n    sortParam: 'synopsis',\n  },\n  {\n    title: 'Publish date',\n    sortParam: 'publish_date',\n  },\n  {\n    title: 'Severity',\n    sortParam: 'severity',\n  },\n  {\n    title: 'CVSS base score',\n    sortParam: 'cvss_score',\n  },\n];\n\n/* TABLE ROW MAPPERS */\n\nconst createCveDescription = (row) => (\n  <Fragment>\n    {row.description === 'unknown' ? (\n      <MissingMetadata\n        variant={EmptyStateVariant.large}\n        style={{ padding: 0 }}\n      />\n    ) : (\n      <TextContent>\n        <Text component={TextVariants.h6} style={{ fontSize: 14 }}>\n          CVE description\n        </Text>\n        {row.description}\n      </TextContent>\n    )}\n    <Link\n      to={'../cves/' + row.synopsis}\n      className=\"pf-u-mt-md pf-u-display-block\"\n    >\n      View more information about this CVE\n    </Link>\n  </Fragment>\n);\n\nexport const CVE_LIST_TABLE_MAPPER = (row) => ({\n  key: row.synopsis,\n  cells: [\n    <Link to={'../cves/' + row.synopsis} key={row.synopsis}>\n      {row.synopsis}\n    </Link>,\n    processDate(row.publish_date),\n    <Shield hasLabel impact={row.severity} key={row.synopsis} />,\n    parseCvssScore(row.cvss2_score, row.cvss3_score, true),\n    <Link to={'../cves/' + row.synopsis} key={row.synopsis}>\n      {row.clusters_exposed}\n    </Link>,\n  ],\n  expandableContent: createCveDescription(row),\n});\n\nexport const CLUSTER_LIST_TABLE_MAPPER = (row) => ({\n  key: row.id,\n  cells: [\n    <Link to={'../clusters/' + row.id} key={row.id}>\n      {row.display_name}\n    </Link>,\n    row.status,\n    row.type,\n    row.version,\n    <ShieldSet\n      key={row.id}\n      count={{ ...row.cves_severity }}\n      linkTo={`../clusters/${row.id}`}\n    />,\n    row.provider,\n    <DateFormat key={row.id} date={row.last_seen} type=\"relative\" />,\n  ],\n});\n\nexport const CVE_DETAIL_TABLE_MAPPER = (row) => ({\n  key: row.id,\n  cells: [\n    <Link to={'../clusters/' + row.id} key={row.id}>\n      {row.display_name}\n    </Link>,\n    row.status,\n    row.type,\n    row.version,\n    row.provider,\n    <DateFormat key={row.id} date={row.last_seen} type=\"relative\" />,\n  ],\n});\n\nexport const CLUSTER_DETAIL_TABLE_MAPPER = (row) => ({\n  key: row.synopsis,\n  cells: [\n    <Link to={'../cves/' + row.synopsis} key={row.synopsis}>\n      {row.synopsis}\n    </Link>,\n    processDate(row.publish_date),\n    <Shield hasLabel impact={row.severity} key={row.synopsis} />,\n    parseCvssScore(row.cvss2_score, row.cvss3_score, true),\n  ],\n  expandableContent: createCveDescription(row),\n});\n\n/* ALLOWED PARAMETERS */\n\nexport const GENERIC_ALLOWED_PARAMS = ['limit', 'offset', 'sort'];\n\nexport const CVE_LIST_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'published',\n  'severity',\n  'cvss_score',\n  'affected_clusters',\n];\n\nexport const CLUSTER_LIST_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'status',\n  'version',\n  'cluster_severity',\n  'provider',\n];\n\nexport const CVE_DETAIL_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'status',\n  'version',\n  'provider',\n];\n\nexport const CLUSTER_DETAIL_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'published',\n  'severity',\n  'cvss_score',\n];\n\n/* DEFAULT FILTERS */\n\nexport const CVE_LIST_DEFAULT_FILTERS = {\n  affected_clusters: 'oneOrMore',\n};\n\nexport const CLUSTER_LIST_DEFAULT_FILTERS = {\n  cluster_severity: 'any',\n};\n\nexport const CVE_DETAIL_DEFAULT_FILTERS = {};\n\nexport const CLUSTER_DETAIL_DEFAULT_FILTERS = {};\n\n/* EXPORTS */\nexport const CVE_LIST_EXPORT_PREFIX = 'ocp-vulnerability_cves--';\nexport const CLUSTER_LIST_EXPORT_PREFIX = 'ocp-vulnerability_clusters--';\nexport const CVE_DETAIL_EXPORT_PREFIX = 'ocp-vulnerability_exposed-clusters--';\nexport const CLUSTER_DETAIL_EXPORT_PREFIX = 'ocp-vulnerability_cluster-cves--';\n","import isEqual from 'lodash/isEqual';\n\nexport const getCvssScoreFromUrlParam = (urlParam) => {\n  if (!urlParam?.includes(',')) {\n    urlParam = ',';\n  }\n\n  const urlMin = urlParam.split(',')[0];\n  const urlMax = urlParam.split(',')[1];\n\n  let min, max;\n\n  min = urlMin === '' ? 0 : Number(urlMin);\n  max = urlMax === '' ? 10 : Number(urlMax);\n\n  return [min, max];\n};\n\nexport const deepFreeze = (object) => {\n  const propNames = Object.getOwnPropertyNames(object);\n\n  for (const name of propNames) {\n    const value = object[name];\n\n    if (value && typeof value === 'object') {\n      deepFreeze(value);\n    }\n  }\n\n  return Object.freeze(object);\n};\n\nexport const subtractDays = (currentDate, toSubtract) => {\n  return currentDate.setDate(currentDate.getDate() - toSubtract);\n};\n\nexport const subtractYears = (currentDate, toSubtract) => {\n  return currentDate.setFullYear(currentDate.getFullYear() - toSubtract);\n};\n\nexport const areAnyFiltersApplied = ({\n  currentParams,\n  defaultParams,\n  filterParams,\n}) => {\n  // filter out params which have nothing to do with filtering, like page, sort, etc.\n  const reducedParams = filterParams.reduce(\n    (acc, param) => ({\n      ...acc,\n      ...(currentParams[param] && { [param]: currentParams[param] }),\n    }),\n    {}\n  );\n\n  return !isEqual(reducedParams, defaultParams);\n};\n\nexport const setupFilters = (filters, meta, defaultFilters, apply) => {\n  if (filters.length === 0) {\n    return [undefined, undefined];\n  }\n\n  const filterKeys = filters.map((item) => item.filterConfig.key);\n  const showDeleteButton = areAnyFiltersApplied({\n    currentParams: meta,\n    defaultParams: defaultFilters,\n    filterParams: filterKeys,\n  });\n\n  let filterConfig = { items: [] };\n  let activeFiltersConfig = {\n    filters: [],\n    onDelete: (_, categories, isReset) =>\n      isReset\n        ? apply({ ...defaultFilters, offset: 0, limit: meta.limit }, true)\n        : categories.forEach((category) => category.onDelete(category.chips)),\n    deleteTitle: 'Reset filter',\n    showDeleteButton,\n  };\n\n  filters.forEach((filter) => {\n    filterConfig.items.push(filter.filterConfig);\n\n    filter.activeFiltersConfig?.isShown &&\n      activeFiltersConfig.filters.push(filter.activeFiltersConfig);\n  });\n\n  return [filterConfig, activeFiltersConfig, showDeleteButton];\n};\n\nexport const isTimestampValid = (stateTimestamp, actionTimestamp) =>\n  actionTimestamp >= stateTimestamp;\n","/* eslint-disable prettier/prettier */\n\n/* FETCHING DATA */\nexport const FETCH_CVE_LIST_TABLE = 'FETCH_CVE_LIST_TABLE';\nexport const FETCH_CVE_DETAIL_TABLE = 'FETCH_CVE_DETAIL_TABLE';\nexport const FETCH_CLUSTER_LIST_TABLE = 'FETCH_CLUSTER_LIST_TABLE';\nexport const FETCH_CLUSTER_DETAIL_TABLE = 'FETCH_CLUSTER_DETAIL_TABLE';\nexport const FETCH_CVE_DETAILS = 'FETCH_CVE_DETAILS';\nexport const FETCH_CLUSTER_DETAILS = 'FETCH_CLUSTER_DETAILS';\n\n/* CHANGING TABLE PARAMS */\nexport const CHANGE_CVE_LIST_TABLE_PARAMS = 'CHANGE_CVE_LIST_TABLE_PARAMS';\nexport const CHANGE_CVE_DETAIL_TABLE_PARAMS = 'CHANGE_CVE_DETAIL_TABLE_PARAMS';\nexport const CHANGE_CLUSTER_LIST_TABLE_PARAMS = 'CHANGE_CLUSTER_LIST_TABLE_PARAMS';\nexport const CHANGE_CLUSTER_DETAIL_TABLE_PARAMS = 'CHANGE_CLUSTER_DETAIL_TABLE_PARAMS';\n","import {\n  CVE_LIST_DEFAULT_FILTERS,\n  DEFAULT_LIMIT,\n} from '../../Helpers/constants';\nimport { deepFreeze, isTimestampValid } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  cves: [],\n  isLoading: true,\n  timestamp: new Date(),\n  meta: {\n    limit: DEFAULT_LIMIT,\n    offset: 0,\n    total_items: 0,\n    sort: '-publish_date',\n    ...CVE_LIST_DEFAULT_FILTERS,\n  },\n});\n\nconst CveListStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CVE_LIST_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isLoading: true,\n        error: undefined,\n        timestamp: action.meta.timestamp,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_LIST_TABLE}_FULFILLED`: {\n      if (isTimestampValid(state.timestamp, action.meta.timestamp)) {\n        return {\n          ...state,\n          cves: action.payload.data.data,\n          meta: {\n            ...state.meta,\n            total_items: action.payload.data.meta.total_items,\n          },\n          isLoading: false,\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case `${ActionTypes.FETCH_CVE_LIST_TABLE}_REJECTED`: {\n      return {\n        ...state,\n        isLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CVE_LIST_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          total_items: state.meta.total_items,\n          sort: state.meta.sort,\n          limit: state.meta.limit,\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default CveListStore;\n","import {\n  CLUSTER_LIST_DEFAULT_FILTERS,\n  DEFAULT_LIMIT,\n} from '../../Helpers/constants';\nimport { deepFreeze, isTimestampValid } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  clusters: [],\n  isLoading: true,\n  timestamp: new Date(),\n  meta: {\n    limit: DEFAULT_LIMIT,\n    offset: 0,\n    total_items: 0,\n    sort: '-last_seen',\n    ...CLUSTER_LIST_DEFAULT_FILTERS,\n  },\n});\n\nconst ClusterListStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CLUSTER_LIST_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isLoading: true,\n        error: undefined,\n        timestamp: action.meta.timestamp,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_LIST_TABLE}_FULFILLED`: {\n      const { data, meta } = action.payload.data;\n\n      if (isTimestampValid(state.timestamp, action.meta.timestamp)) {\n        return {\n          ...state,\n          clusters: data,\n          meta: {\n            ...state.meta,\n            total_items: meta.total_items,\n            dynamic_provider_options: meta.cluster_providers_all,\n            dynamic_status_options: meta.cluster_statuses_all,\n            dynamic_version_options: meta.cluster_versions_all,\n          },\n          isLoading: false,\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_LIST_TABLE}_REJECTED`: {\n      return {\n        ...state,\n        isLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CLUSTER_LIST_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          total_items: state.meta.total_items,\n          sort: state.meta.sort,\n          limit: state.meta.limit,\n          dynamic_provider_options: state.meta.dynamic_provider_options,\n          dynamic_status_options: state.meta.dynamic_status_options,\n          dynamic_version_options: state.meta.dynamic_version_options,\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default ClusterListStore;\n","import {\n  CVE_DETAIL_DEFAULT_FILTERS,\n  DEFAULT_LIMIT,\n} from '../../Helpers/constants';\nimport { deepFreeze, isTimestampValid } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  cve: {},\n  clusters: [],\n  isDetailLoading: true,\n  isTableLoading: true,\n  timestamp: new Date(),\n  meta: {\n    limit: DEFAULT_LIMIT,\n    offset: 0,\n    total_items: 0,\n    sort: '-last_seen',\n    ...CVE_DETAIL_DEFAULT_FILTERS,\n  },\n});\n\nconst CveDetailStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CVE_DETAIL_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isTableLoading: true,\n        error: undefined,\n        timestamp: action.meta.timestamp,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAIL_TABLE}_FULFILLED`: {\n      if (isTimestampValid(state.timestamp, action.meta.timestamp)) {\n        const { data, meta } = action.payload.data;\n\n        return {\n          ...state,\n          clusters: data,\n          meta: {\n            ...state.meta,\n            total_items: meta.total_items,\n            dynamic_provider_options: meta.cluster_providers_all,\n            dynamic_status_options: meta.cluster_statuses_all,\n            dynamic_version_options: meta.cluster_versions_all,\n          },\n          isTableLoading: false,\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAIL_TABLE}_REJECTED`: {\n      return {\n        ...state,\n        isTableLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CVE_DETAIL_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          total_items: state.meta.total_items,\n          sort: state.meta.sort,\n          limit: state.meta.limit,\n          dynamic_provider_options: state.meta.dynamic_provider_options,\n          dynamic_status_options: state.meta.dynamic_status_options,\n          dynamic_version_options: state.meta.dynamic_version_options,\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAILS}_PENDING`: {\n      return {\n        ...state,\n        isDetailLoading: true,\n        error: undefined,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAILS}_FULFILLED`: {\n      return {\n        ...state,\n        cve: action.payload.data.data,\n        isDetailLoading: false,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAILS}_REJECTED`: {\n      return {\n        ...state,\n        isDetailLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default CveDetailStore;\n","import {\n  CLUSTER_DETAIL_DEFAULT_FILTERS,\n  DEFAULT_LIMIT,\n} from '../../Helpers/constants';\nimport { deepFreeze, isTimestampValid } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  cluster: {},\n  cves: [],\n  isDetailLoading: true,\n  isTableLoading: true,\n  timestamp: new Date(),\n  meta: {\n    limit: DEFAULT_LIMIT,\n    offset: 0,\n    total_items: 0,\n    sort: '-publish_date',\n    ...CLUSTER_DETAIL_DEFAULT_FILTERS,\n  },\n});\n\nconst ClusterDetailStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CLUSTER_DETAIL_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isTableLoading: true,\n        error: undefined,\n        timestamp: action.meta.timestamp,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAIL_TABLE}_FULFILLED`: {\n      if (isTimestampValid(state.timestamp, action.meta.timestamp)) {\n        return {\n          ...state,\n          cves: action.payload.data.data,\n          meta: {\n            ...state.meta,\n            total_items: action.payload.data.meta.total_items,\n          },\n          isTableLoading: false,\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAIL_TABLE}_REJECTED`: {\n      return {\n        ...state,\n        isTableLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CLUSTER_DETAIL_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          total_items: state.meta.total_items,\n          sort: state.meta.sort,\n          limit: state.meta.limit,\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAILS}_PENDING`: {\n      return {\n        ...state,\n        isDetailLoading: true,\n        error: undefined,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAILS}_FULFILLED`: {\n      return {\n        ...state,\n        cluster: action.payload.data.data,\n        isDetailLoading: false,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAILS}_REJECTED`: {\n      return {\n        ...state,\n        isDetailLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default ClusterDetailStore;\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport CveListStore from './Reducers/CveListStore';\nimport ClusterListStore from './Reducers/ClusterListStore';\nimport CveDetailStore from './Reducers/CveDetailStore';\nimport ClusterDetailStore from './Reducers/ClusterDetailStore';\n\nlet registry;\n\nconst notificationsFilterMiddleware = () => (next) => (action) => {\n  const matchRejected = (type) => type.match(new RegExp(`_REJECTED$`));\n\n  if (matchRejected(action.type) && action.meta?.noNotificationOnError) {\n    action.meta = { ...action.meta, noError: true };\n  }\n\n  next(action);\n};\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsFilterMiddleware,\n    notificationsMiddleware({\n      errorDescriptionKey: 'detail',\n      // TODO: for some reason this does not work\n      autoDismiss: false,\n    }),\n    ...middleware,\n  ]);\n\n  registry.register({ notifications: notificationsReducer });\n\n  registry.register({ CveListStore });\n  registry.register({ ClusterListStore });\n  registry.register({ CveDetailStore });\n  registry.register({ ClusterDetailStore });\n\n  return registry;\n}\n"],"names":["CveListPage","lazy","ClusterListPage","CveDetailPage","ClusterDetailPage","InsightsElement","_ref","Element","element","React","Suspense","fallback","Bullseye","Spinner","propTypes","Router","Routes","Route","path","Navigate","to","replace","props","Fragment","NotificationsPortal","childProps","MissingMetadata","_extends","_objectDestructuringEmpty","EmptyState","variant","EmptyStateVariant","Text","EmptyStateBody","ShieldSet","count","linkTo","className","SEVERITY_OPTIONS","map","severityOption","Tooltip","key","value","content","concat","label","hasIcon","SecurityIcon","style","color","Link","iconColor","PropTypes","critical","important","moderate","low","isRequired","HEADER_ALERT_DISMISSED_KEY","DEFAULT_LIMIT","PUBLISHED_OPTIONS","from","subtractDays","Date","subtractYears","textColor","CLUSTER_SEVERITY_OPTIONS","EXPOSED_CLUSTERS_OPTIONS","CLUSTER_STATUS_OPTIONS","CLUSTER_VERSION_OPTIONS","CLUSTER_PROVIDER_OPTIONS","CVE_LIST_TABLE_COLUMNS","title","sortParam","CLUSTER_LIST_TABLE_COLUMNS","sortDefaultDirection","stringTitle","OutlinedQuestionCircleIcon","id","CVE_DETAIL_TABLE_COLUMNS","CLUSTER_DETAIL_TABLE_COLUMNS","createCveDescription","row","description","padding","TextContent","component","TextVariants","fontSize","synopsis","CVE_LIST_TABLE_MAPPER","cells","processDate","publish_date","Shield","hasLabel","impact","severity","parseCvssScore","cvss2_score","cvss3_score","clusters_exposed","expandableContent","CLUSTER_LIST_TABLE_MAPPER","display_name","status","type","version","_objectSpread","cves_severity","provider","DateFormat","date","last_seen","CVE_DETAIL_TABLE_MAPPER","CLUSTER_DETAIL_TABLE_MAPPER","GENERIC_ALLOWED_PARAMS","CVE_LIST_ALLOWED_PARAMS","CLUSTER_LIST_ALLOWED_PARAMS","CVE_DETAIL_ALLOWED_PARAMS","CLUSTER_DETAIL_ALLOWED_PARAMS","CVE_LIST_DEFAULT_FILTERS","affected_clusters","CLUSTER_LIST_DEFAULT_FILTERS","cluster_severity","CVE_DETAIL_DEFAULT_FILTERS","CLUSTER_DETAIL_DEFAULT_FILTERS","CVE_LIST_EXPORT_PREFIX","CLUSTER_LIST_EXPORT_PREFIX","CVE_DETAIL_EXPORT_PREFIX","CLUSTER_DETAIL_EXPORT_PREFIX","getCvssScoreFromUrlParam","urlParam","_urlParam","includes","urlMin","split","urlMax","Number","deepFreeze","object","_step","_iterator","_createForOfIteratorHelper","Object","getOwnPropertyNames","s","n","done","_typeof","err","e","f","freeze","currentDate","toSubtract","setDate","getDate","setFullYear","getFullYear","setupFilters","filters","meta","defaultFilters","apply","length","undefined","currentParams","defaultParams","reducedParams","filterKeys","item","filterConfig","showDeleteButton","filterParams","reduce","acc","param","_defineProperty","isEqual","items","activeFiltersConfig","onDelete","_","categories","isReset","offset","limit","forEach","category","chips","deleteTitle","filter","_filter$activeFilters","push","isShown","isTimestampValid","stateTimestamp","actionTimestamp","FETCH_CVE_LIST_TABLE","FETCH_CVE_DETAIL_TABLE","FETCH_CLUSTER_LIST_TABLE","FETCH_CLUSTER_DETAIL_TABLE","FETCH_CVE_DETAILS","FETCH_CLUSTER_DETAILS","CHANGE_CVE_LIST_TABLE_PARAMS","CHANGE_CVE_DETAIL_TABLE_PARAMS","CHANGE_CLUSTER_LIST_TABLE_PARAMS","CHANGE_CLUSTER_DETAIL_TABLE_PARAMS","initialState","cves","isLoading","timestamp","total_items","sort","state","arguments","action","ActionTypes","error","payload","data","clusters","_action$payload$data","dynamic_provider_options","cluster_providers_all","dynamic_status_options","cluster_statuses_all","dynamic_version_options","cluster_versions_all","cve","isDetailLoading","isTableLoading","cluster","registry","notificationsFilterMiddleware","next","_action$meta","match","RegExp","noNotificationOnError","noError","init","_len","middleware","Array","_key","getRegistry","promiseMiddleware","notificationsMiddleware","errorDescriptionKey","autoDismiss","register","notifications","notificationsReducer","CveListStore","ClusterListStore","CveDetailStore","ClusterDetailStore"],"sourceRoot":""}