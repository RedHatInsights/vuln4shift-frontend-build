{"version":3,"file":"js/3215.1658782722015.8fed4eb1907846ab28b9.js","mappings":"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","sources":["webpack:///./src/Components/SmartComponents/Filters/TextFilter.js","webpack:///./src/Components/SmartComponents/Generic/BaseTableBody.js","webpack:///./src/Components/SmartComponents/Generic/BaseToolbar.js","webpack:///./src/Components/PresentationalComponents/BottomPagination.js","webpack:///./src/Components/SmartComponents/Generic/BaseTable.js","webpack:///./src/Components/PresentationalComponents/ShieldSet.js","webpack:///./src/Helpers/constants.js","webpack:///./src/Helpers/hooks.js","webpack:///./src/Helpers/apiHelper.js","webpack:///./src/Store/Actions.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst useTextFilter = ({\n  urlParam,\n  label,\n  placeholder,\n  value,\n  apply,\n  chipLabel,\n}) => {\n  const [searchValue, setSearchValue] = useState();\n  const [handleSearch] = useState(() =>\n    debounce((newValue) => {\n      apply({ [urlParam]: newValue, offset: 0 });\n    }, 400)\n  );\n\n  useEffect(() => setSearchValue(value), [value]);\n\n  const filterConfig = {\n    type: conditionalFilterType.text,\n    label: label,\n    key: urlParam,\n    filterValues: {\n      'aria-label': 'search-field',\n      id: `search-${label.id}`,\n      onChange: (event, value) => {\n        setSearchValue(value);\n        handleSearch(value);\n      },\n      placeholder,\n      value: searchValue,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: () => apply({ [urlParam]: undefined, offset: 0 }),\n    key: urlParam,\n    category: chipLabel,\n    chips: [\n      {\n        name: value,\n      },\n    ],\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default useTextFilter;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport {\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n  ExpandableRowContent,\n  SortByDirection,\n} from '@patternfly/react-table';\nimport SkeletonTable from '@redhat-cloud-services/frontend-components/SkeletonTable/SkeletonTable';\nimport { TableVariant } from '@patternfly/react-table';\n\nconst BaseTableBody = ({\n  isLoading,\n  columns,\n  rows,\n  isExpandable = false,\n  emptyState,\n  sortParam,\n  perPage,\n  apply,\n}) => {\n  const [expandedRows, setExpandedRows] = useState([]);\n\n  const setRowExpanded = (row, isExpanding) =>\n    setExpandedRows((prevExpanded) => {\n      const otherExpandedRows = prevExpanded.filter((r) => r !== row);\n      return isExpanding ? [...otherExpandedRows, row] : otherExpandedRows;\n    });\n\n  const isRowExpanded = (row) => expandedRows.includes(row);\n\n  const createSortBy = (columns, sortParam) => {\n    if (rows.length === 0) {\n      return {};\n    }\n\n    const direction =\n      sortParam[0] === '-' ? SortByDirection.desc : SortByDirection.asc;\n    sortParam = sortParam.replace(/^(-|\\+)/, '').split(',')[0];\n    const index = columns.findIndex((item) => item.sortParam === sortParam);\n\n    return {\n      index,\n      direction,\n      defaultDirection: SortByDirection.desc,\n    };\n  };\n\n  const getSortParams = (columnIndex) => ({\n    sortBy: createSortBy(columns, sortParam),\n    onSort: (event, index, direction) => {\n      let columnName = columns[columnIndex].sortParam;\n\n      if (direction === SortByDirection.desc) {\n        columnName = '-' + columnName;\n      }\n\n      rows.length > 0 && apply({ sort: columnName });\n    },\n    columnIndex,\n  });\n\n  return isLoading ? (\n    <SkeletonTable\n      colSize={columns.length}\n      rowSize={perPage || 20}\n      variant={TableVariant.compact}\n    />\n  ) : (\n    <TableComposable variant={TableVariant.compact} isStickyHeader>\n      <Thead>\n        <Tr>\n          {isExpandable && <Th />}\n          {columns.map((column, index) => (\n            <Th\n              key={column.title}\n              sort={column.sortParam && getSortParams(index)}\n            >\n              {column.title}\n            </Th>\n          ))}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {rows.length === 0 ? (\n          <Tr>\n            <Td colSpan={100}>{emptyState}</Td>\n          </Tr>\n        ) : (\n          rows.map((row, rowIndex) => (\n            <Fragment key={rowIndex}>\n              <Tr>\n                {isExpandable && (\n                  <Td\n                    expand={{\n                      rowIndex,\n                      isExpanded: isRowExpanded(row.key),\n                      onToggle: () =>\n                        setRowExpanded(row.key, !isRowExpanded(row.key)),\n                    }}\n                  />\n                )}\n                {row.cells.map((cell, cellIndex) => (\n                  <Td key={cellIndex} dataLabel={columns[cellIndex].title}>\n                    {cell}\n                  </Td>\n                ))}\n              </Tr>\n              {isExpandable && (\n                <Tr isExpanded={isRowExpanded(row.key)}>\n                  <Td colSpan={100}>\n                    <ExpandableRowContent>\n                      {row.expandableContent}\n                    </ExpandableRowContent>\n                  </Td>\n                </Tr>\n              )}\n            </Fragment>\n          ))\n        )}\n      </Tbody>\n    </TableComposable>\n  );\n};\n\nBaseTableBody.propTypes = {\n  isLoading: propTypes.bool.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node.isRequired,\n      sortParam: propTypes.string,\n    })\n  ).isRequired,\n  rows: propTypes.arrayOf(\n    propTypes.shape({\n      key: propTypes.string.isRequired,\n      cells: propTypes.arrayOf(propTypes.node).isRequired,\n      expandableContent: propTypes.node,\n    })\n  ).isRequired,\n  isExpandable: propTypes.bool,\n  emptyState: propTypes.node.isRequired,\n  sortParam: propTypes.string,\n  perPage: propTypes.number,\n  apply: propTypes.func,\n};\n\nexport default BaseTableBody;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\n\nconst BaseToolbar = ({\n  page,\n  perPage,\n  itemCount,\n  apply,\n  filterConfig,\n  activeFiltersConfig,\n}) => {\n  return (\n    <PrimaryToolbar\n      pagination={{\n        isDisabled: itemCount === 0,\n        itemCount,\n        page,\n        perPage,\n        ouiaId: 'pagination-top',\n        onSetPage: (event, page, limit, offset) => apply({ limit, offset }),\n        onPerPageSelect: (event, limit) => apply({ limit, offset: 0 }),\n      }}\n      filterConfig={filterConfig}\n      activeFiltersConfig={activeFiltersConfig}\n    />\n  );\n};\n\nBaseToolbar.propTypes = {\n  page: propTypes.number,\n  perPage: propTypes.number,\n  itemCount: propTypes.number,\n  apply: propTypes.func,\n  filterConfig: propTypes.shape({\n    items: propTypes.array,\n  }),\n  activeFiltersConfig: propTypes.shape({\n    filters: propTypes.array,\n  }),\n};\n\nexport default BaseToolbar;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\n\nconst BottomPagination = ({ page, perPage, itemCount, apply }) => {\n  return (\n    <Pagination\n      page={page}\n      itemCount={itemCount}\n      perPage={perPage}\n      variant={PaginationVariant.bottom}\n      ouiaId=\"pagination-bottom\"\n      isDisabled={itemCount === 0}\n      onSetPage={(event, page, limit, offset) => apply({ limit, offset })}\n      onPerPageSelect={(event, limit) => apply({ limit, offset: 0 })}\n    />\n  );\n};\n\nBottomPagination.propTypes = {\n  page: propTypes.number,\n  perPage: propTypes.number,\n  itemCount: propTypes.number,\n  apply: propTypes.func,\n};\n\nexport default BottomPagination;\n","import React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport BaseTableBody from '../Generic/BaseTableBody';\nimport BaseToolbar from '../Generic/BaseToolbar';\nimport BottomPagination from '../../PresentationalComponents/BottomPagination';\nimport { setupFilters } from '../../../Helpers/miscHelper';\n\nconst BaseTable = ({\n  isLoading,\n  isExpandable,\n  rows,\n  columns,\n  filters = [],\n  meta,\n  emptyState,\n  apply,\n}) => {\n  const { offset, limit, total_items, sort } = meta;\n\n  const [filterConfig, activeFiltersConfig] = setupFilters(filters);\n\n  return (\n    <Fragment>\n      <BaseToolbar\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n        filterConfig={filterConfig}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      <BaseTableBody\n        isLoading={isLoading}\n        columns={columns}\n        rows={rows}\n        isExpandable={isExpandable}\n        emptyState={emptyState}\n        sortParam={sort}\n        perPage={limit}\n        apply={apply}\n      />\n      <BottomPagination\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n      />\n    </Fragment>\n  );\n};\n\nBaseTable.propTypes = {\n  isLoading: propTypes.bool.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node.isRequired,\n      sortParam: propTypes.string,\n    })\n  ).isRequired,\n  rows: propTypes.arrayOf(\n    propTypes.shape({\n      key: propTypes.string.isRequired,\n      cells: propTypes.arrayOf(propTypes.node).isRequired,\n      expandableContent: propTypes.node,\n    })\n  ).isRequired,\n  isExpandable: propTypes.bool,\n  emptyState: propTypes.node.isRequired,\n  sortParam: propTypes.string,\n  filters: propTypes.array,\n  meta: propTypes.shape({\n    offset: propTypes.number,\n    limit: propTypes.number,\n    total_items: propTypes.number,\n    sort: propTypes.string,\n  }),\n  apply: propTypes.func,\n};\n\nexport default BaseTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SEVERITY_OPTIONS } from '../../Helpers/constants';\nimport { SecurityIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { Tooltip } from '@patternfly/react-core';\n\n// TODO: Setup link to navigate to Cluster detail page with severity filter applied\nconst ShieldSet = ({ count, linkTo }) => {\n  const DISABLED_COLOR = 'var(--pf-global--disabled-color--200)';\n\n  return (\n    <div className=\"shield-set\">\n      {SEVERITY_OPTIONS.map((severityOption) => (\n        <Tooltip\n          key={severityOption.value}\n          content={`${severityOption.label} severity`}\n        >\n          {severityOption.hasIcon &&\n            (count[severityOption.value] === 0 ? (\n              <a className=\"disabled-shield\">\n                <SecurityIcon style={{ color: DISABLED_COLOR }} />\n                <span>0</span>\n              </a>\n            ) : (\n              <Link\n                key={severityOption.value}\n                to={`${linkTo}?severity=${severityOption.value}`}\n                style={{ whiteSpace: 'nowrap' }}\n              >\n                <SecurityIcon style={{ color: severityOption.iconColor }} />\n                <span>{count[severityOption.value]}</span>\n              </Link>\n            ))}\n        </Tooltip>\n      ))}\n    </div>\n  );\n};\n\nShieldSet.propTypes = {\n  count: PropTypes.shape({\n    critical: PropTypes.number,\n    important: PropTypes.number,\n    moderate: PropTypes.number,\n    low: PropTypes.number,\n  }).isRequired,\n  linkTo: PropTypes.string,\n};\n\nexport default ShieldSet;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport parseCvssScore from '@redhat-cloud-services/frontend-components-utilities/parseCvssScore';\nimport { Shield } from '@redhat-cloud-services/frontend-components/Shield';\nimport ShieldSet from '../Components/PresentationalComponents/ShieldSet';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { subtractDays, subtractYears } from './miscHelper';\n\nexport const HEADER_ALERT_DISMISSED_KEY = 'vuln4shift:header-alert-dismissed';\n\n/* FILTER OPTIONS */\n\nexport const PUBLISHED_OPTIONS = [\n  {\n    value: 'all',\n    label: 'All',\n  },\n  {\n    value: 'last7days',\n    label: 'Last 7 days',\n    from: subtractDays(new Date(), 7),\n  },\n  {\n    value: 'last30days',\n    label: 'Last 30 days',\n    from: subtractDays(new Date(), 30),\n  },\n  {\n    value: 'last90days',\n    label: 'Last 90 days',\n    from: subtractDays(new Date(), 90),\n  },\n  {\n    value: 'lastYear',\n    label: 'Last year',\n    from: subtractYears(new Date(), 1),\n  },\n  {\n    value: 'moreThanYear',\n    label: 'More than 1 year ago',\n    to: subtractYears(new Date(), 1),\n  },\n];\n\nexport const SEVERITY_OPTIONS = [\n  {\n    value: 'critical',\n    label: 'Critical',\n    iconColor: 'var(--pf-global--danger-color--100)',\n    textColor: 'var(--pf-global--danger-color--100)',\n    hasIcon: true,\n  },\n  {\n    value: 'important',\n    label: 'Important',\n    iconColor: 'var(--pf-global--palette--orange-300)',\n    textColor: 'var(--pf-global--palette--orange-400)',\n    hasIcon: true,\n  },\n  {\n    value: 'moderate',\n    label: 'Moderate',\n    iconColor: 'var(--pf-global--warning-color--100)',\n    textColor: 'var(--pf-global--warning-color--200)',\n    hasIcon: true,\n  },\n  {\n    value: 'low',\n    label: 'Low',\n    iconColor: 'var(--pf-global--Color--200)',\n    textColor: 'var(--pf-global--default-color--300)',\n    hasIcon: true,\n  },\n  {\n    value: 'none',\n    label: 'Unknown',\n  },\n];\n\nexport const EXPOSED_CLUSTERS_OPTIONS = [\n  {\n    value: 'true',\n    label: '1 or more',\n  },\n  {\n    value: 'false',\n    label: 'None',\n  },\n];\n\n/* TABLE COLUMNS */\n\nexport const CVE_LIST_TABLE_COLUMNS = [\n  {\n    title: 'CVE ID',\n    sortParam: 'synopsis',\n  },\n  {\n    title: 'Publish date',\n    sortParam: 'publish_date',\n  },\n  {\n    title: 'Severity',\n    sortParam: 'severity',\n  },\n  {\n    title: 'CVSS base score',\n    sortParam: 'cvss_score',\n  },\n  {\n    title: 'Clusters exposed',\n    sortParam: 'clusters_exposed',\n  },\n  {\n    title: 'Images exposed',\n    sortParam: 'images_exposed',\n  },\n];\n\nexport const CLUSTER_LIST_TABLE_COLUMNS = [\n  {\n    title: 'Name',\n    /* TODO: Readd after endpoint integration: sortParam: 'display_name', */\n  },\n  {\n    title: 'Status',\n  },\n  {\n    title: 'Type',\n  },\n  {\n    title: 'Version',\n  },\n  {\n    title: 'CVEs severity',\n  },\n  {\n    title: 'Provider',\n    /* TODO: Readd after endpoint integration: sortParam: 'provider', */\n  },\n  {\n    title: 'Last seen',\n    sortParam: 'last_seen',\n  },\n];\n\nexport const CVE_DETAIL_TABLE_COLUMNS = [\n  {\n    title: 'Name',\n    /* TODO: Readd after endpoint integration: sortParam: 'display_name', */\n  },\n  {\n    title: 'Status',\n  },\n  {\n    title: 'Type',\n  },\n  {\n    title: 'Version',\n  },\n  {\n    title: 'Provider',\n    /* TODO: Readd after endpoint integration: sortParam: 'provider', */\n  },\n  {\n    title: 'Last seen',\n    sortParam: 'last_seen',\n  },\n];\n\nexport const CLUSTER_DETAIL_TABLE_COLUMNS = [\n  {\n    title: 'CVE ID',\n    sortParam: 'synopsis',\n  },\n  {\n    title: 'Publish date',\n    sortParam: 'publish_date',\n  },\n  {\n    title: 'Severity',\n    sortParam: 'severity',\n  },\n  {\n    title: 'CVSS base score',\n    sortParam: 'cvss_score',\n  },\n  {\n    title: 'Images exposed',\n    sortParam: 'images_exposed',\n  },\n];\n\n/* TABLE ROW MAPPERS */\n\nconst createCveDescription = (row) => (\n  <Fragment>\n    <TextContent>\n      <Text component={TextVariants.h6} style={{ fontSize: 14 }}>\n        CVE description\n      </Text>\n    </TextContent>\n    {row.description}\n    <Link\n      to={'/cves/' + row.synopsis}\n      className=\"pf-u-mt-md pf-u-display-block\"\n    >\n      View more information about this CVE\n    </Link>\n  </Fragment>\n);\n\nexport const CVE_LIST_TABLE_MAPPER = (row) => ({\n  key: row.synopsis,\n  cells: [\n    <Link to={'/cves/' + row.synopsis} key={row.synopsis}>\n      {row.synopsis}\n    </Link>,\n    processDate(row.publish_date),\n    <Shield hasLabel impact={row.severity} key={row.synopsis} />,\n    parseCvssScore(row.cvss2_score, row.cvss3_score, true),\n    <Link to={'/cves/' + row.synopsis} key={row.synopsis}>\n      {row.clusters_exposed}\n    </Link>,\n    row.images_exposed,\n  ],\n  expandableContent: createCveDescription(row),\n});\n\nexport const CLUSTER_LIST_TABLE_MAPPER = (row) => ({\n  key: row.id,\n  cells: [\n    <Link to={'/clusters/' + row.id} key={row.id}>\n      {row.display_name}\n    </Link>,\n    row.status_text,\n    row.type,\n    row.version,\n    <ShieldSet\n      key={row.id}\n      count={{ ...row.cves_severity }}\n      linkTo={`/clusters/${row.id}`}\n    />,\n    row.provider,\n    <DateFormat key={row.id} date={row.last_seen} type=\"relative\" />,\n  ],\n});\n\nexport const CVE_DETAIL_TABLE_MAPPER = (row) => ({\n  key: row.id,\n  cells: [\n    <Link to={'/clusters/' + row.id} key={row.id}>\n      {row.display_name}\n    </Link>,\n    row.status_text,\n    row.type,\n    row.version,\n    row.provider,\n    <DateFormat key={row.id} date={row.last_seen} type=\"relative\" />,\n  ],\n});\n\nexport const CLUSTER_DETAIL_TABLE_MAPPER = (row) => ({\n  key: row.synopsis,\n  cells: [\n    <Link to={'/cves/' + row.synopsis} key={row.synopsis}>\n      {row.synopsis}\n    </Link>,\n    processDate(row.publish_date),\n    <Shield hasLabel impact={row.severity} key={row.synopsis} />,\n    parseCvssScore(row.cvss2_score, row.cvss3_score, true),\n    row.images_exposed,\n  ],\n  expandableContent: createCveDescription(row),\n});\n\n/* ALLOWED PARAMETERS */\n\nexport const GENERIC_ALLOWED_PARAMS = ['limit', 'offset', 'sort'];\n\nexport const CVE_LIST_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'published',\n  'severity',\n  'cvss_score',\n  'affected_clusters',\n];\n\nexport const CLUSTER_LIST_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'cve_severity',\n];\n\nexport const CVE_DETAIL_ALLOWED_PARAMS = [...GENERIC_ALLOWED_PARAMS, 'search'];\n\nexport const CLUSTER_DETAIL_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'published',\n  'severity',\n  'cvss_score',\n  'images_exposed',\n];\n","import { useEffect, useState } from 'react';\nimport qs from 'query-string';\nimport { useDispatch } from 'react-redux';\nimport { PUBLISHED_OPTIONS } from './constants';\n\nexport const useLocalStorage = (key) => {\n  const [sessionValue, setSessionValue] = useState(localStorage.getItem(key));\n\n  const setValue = (newValue) => {\n    setSessionValue(newValue);\n    localStorage.setItem(key, newValue);\n  };\n\n  return [sessionValue, setValue];\n};\n\nexport function filterParams(urlParams, allowedParams) {\n  const paramsCopy = { ...urlParams };\n\n  Object.entries(paramsCopy)\n    .filter(([key, value]) => !allowedParams.includes(key) || value === '')\n    .forEach(([key]) => delete paramsCopy[key]);\n\n  return paramsCopy;\n}\n\nconst transformPublishedParam = (urlParams) => {\n  const formatDate = (timestamp) => {\n    const pad = (number) => `${`${number}`.length === 1 ? '0' : ''}${number}`;\n\n    const date = new Date(timestamp);\n\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1; // month is zero indexed\n    const day = date.getDate();\n\n    return `${year}-${pad(month)}-${pad(day)}`;\n  };\n\n  if (urlParams.published) {\n    const option = PUBLISHED_OPTIONS.find(\n      (option) => option.value === urlParams.published\n    );\n\n    urlParams.published = `${option.from ? formatDate(option.from) : ''},${\n      option.to ? formatDate(option.to) : ''\n    }`;\n  }\n\n  return urlParams;\n};\n\n// when creating additional transformer in the future\n// create a new function for it and then add the function to this array\nconst URL_TRANSFORMERS = [transformPublishedParam];\n\nconst transformUrlParamsBeforeFetching = (urlParams) => {\n  let newParams = { ...urlParams };\n\n  URL_TRANSFORMERS.forEach((transformer) => {\n    newParams = transformer(newParams);\n  });\n\n  return newParams;\n};\n\nconst NUMERICAL_URL_PARAMS = ['limit', 'offset'];\n\nexport const useUrlParams = (allowedParams) => {\n  const getUrlParams = () => {\n    const url = new URL(window.location);\n    return filterParams(qs.parse(url.search), allowedParams);\n  };\n\n  const setUrlParams = (newParams) => {\n    const url = new URL(window.location);\n    const queryParams = qs.stringify(newParams);\n\n    window.history.replaceState(\n      null,\n      null,\n      `${url.origin}${url.pathname}?${queryParams}`\n    );\n  };\n\n  return [getUrlParams, setUrlParams];\n};\n\nexport const useUrlBoundParams = ({\n  allowedParams,\n  initialParams,\n  additionalParam,\n  fetchAction,\n  changeParamsAction,\n}) => {\n  const dispatch = useDispatch();\n\n  const [getUrlParams, setUrlParams] = useUrlParams(allowedParams);\n\n  useEffect(() => {\n    const initialUrlParams = getUrlParams();\n\n    apply({ ...initialParams, ...initialUrlParams });\n  }, []);\n\n  const apply = (newParams) => {\n    const previousUrlParams = getUrlParams();\n\n    let combinedParams = { ...previousUrlParams, ...newParams };\n\n    // convert numerical params to numbers\n    for (const property in combinedParams) {\n      if (NUMERICAL_URL_PARAMS.includes(property)) {\n        combinedParams[property] = Number(combinedParams[property]);\n      }\n    }\n\n    dispatch(changeParamsAction(combinedParams));\n\n    const filteredParams = filterParams(combinedParams, allowedParams);\n\n    dispatch(\n      fetchAction(\n        transformUrlParamsBeforeFetching(filteredParams),\n        additionalParam\n      )\n    );\n\n    setUrlParams(filteredParams);\n  };\n\n  return apply;\n};\n","import axios from 'axios';\n\nexport const fetchCves = async (params) => {\n  return axios.get('/api/ocp-vulnerability/v1/cves', { params });\n};\n\nexport const fetchClusters = async (params) => {\n  return axios.get('/api/ocp-vulnerability/v1/clusters', { params });\n};\n\nexport const fetchExposedClusters = async (params, cveId) => {\n  return axios.get(`/api/ocp-vulnerability/v1/cves/${cveId}/exposed_clusters`, {\n    params,\n  });\n};\n\nexport const fetchCveDetails = async (cveId) => {\n  return axios.get(`/api/ocp-vulnerability/v1/cves/${cveId}`);\n};\n\nexport const fetchClusterCves = async (params, clusterId) => {\n  return axios.get(`/api/ocp-vulnerability/v1/clusters/${clusterId}/cves`, {\n    params,\n  });\n};\n\nexport const fetchClusterDetails = async (clusterId) => {\n  return axios.get(`/api/ocp-vulnerability/v1/clusters/${clusterId}`);\n};\n","import * as ActionTypes from '../Store/ActionTypes';\nimport * as api from '../Helpers/apiHelper';\n\n/* FETCHING DATA */\nexport const fetchCveListTable = (params) => ({\n  type: ActionTypes.FETCH_CVE_LIST_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchCves(params),\n});\n\nexport const fetchClusterListTable = (params) => ({\n  type: ActionTypes.FETCH_CLUSTER_LIST_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchClusters(params),\n});\n\nexport const fetchCveDetailTable = (cveId, params) => ({\n  type: ActionTypes.FETCH_CVE_DETAIL_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchExposedClusters(cveId, params),\n});\n\nexport const fetchCveDetails = (cveId, params) => ({\n  type: ActionTypes.FETCH_CVE_DETAILS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchCveDetails(cveId, params),\n});\n\nexport const fetchClusterDetailTable = (clusterId, params) => ({\n  type: ActionTypes.FETCH_CLUSTER_DETAIL_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchClusterCves(clusterId, params),\n});\n\nexport const fetchClusterDetails = (clusterId, params) => ({\n  type: ActionTypes.FETCH_CLUSTER_DETAILS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchClusterDetails(clusterId, params),\n});\n\n/* CHANGING TABLE PARAMS */\nexport const changeCveListTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CVE_LIST_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n\nexport const changeClusterListTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CLUSTER_LIST_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n\nexport const changeCveDetailsTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CVE_DETAIL_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n\nexport const changeClusterDetailsTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CLUSTER_DETAIL_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n"],"names":["urlParam","label","placeholder","value","apply","chipLabel","useState","searchValue","setSearchValue","debounce","newValue","handleSearch","useEffect","filterConfig","type","conditionalFilterType","key","filterValues","id","onChange","event","activeFiltersConfig","isShown","onDelete","undefined","category","chips","name","BaseTableBody","isLoading","columns","rows","isExpandable","emptyState","sortParam","perPage","expandedRows","setExpandedRows","isRowExpanded","row","includes","createSortBy","length","direction","SortByDirection","replace","split","index","findIndex","item","defaultDirection","colSize","rowSize","variant","TableVariant","TableComposable","isStickyHeader","Thead","Tr","Th","map","column","title","sort","columnIndex","sortBy","onSort","columnName","Tbody","Td","colSpan","rowIndex","Fragment","expand","isExpanded","onToggle","isExpanding","prevExpanded","otherExpandedRows","filter","r","setRowExpanded","cells","cell","cellIndex","dataLabel","ExpandableRowContent","expandableContent","propTypes","isRequired","BaseToolbar","page","itemCount","PrimaryToolbar","pagination","isDisabled","ouiaId","onSetPage","limit","offset","onPerPageSelect","items","filters","BottomPagination","Pagination","PaginationVariant","BaseTable","meta","total_items","setupFilters","ShieldSet","count","linkTo","className","SEVERITY_OPTIONS","severityOption","Tooltip","content","hasIcon","style","color","Link","to","whiteSpace","iconColor","PropTypes","critical","important","moderate","low","HEADER_ALERT_DISMISSED_KEY","PUBLISHED_OPTIONS","from","subtractDays","Date","subtractYears","textColor","EXPOSED_CLUSTERS_OPTIONS","CVE_LIST_TABLE_COLUMNS","CLUSTER_LIST_TABLE_COLUMNS","CVE_DETAIL_TABLE_COLUMNS","CLUSTER_DETAIL_TABLE_COLUMNS","createCveDescription","TextContent","Text","component","TextVariants","fontSize","description","synopsis","CVE_LIST_TABLE_MAPPER","processDate","publish_date","Shield","hasLabel","impact","severity","parseCvssScore","cvss2_score","cvss3_score","clusters_exposed","images_exposed","CLUSTER_LIST_TABLE_MAPPER","display_name","status_text","version","cves_severity","provider","DateFormat","date","last_seen","CVE_DETAIL_TABLE_MAPPER","CLUSTER_DETAIL_TABLE_MAPPER","GENERIC_ALLOWED_PARAMS","CVE_LIST_ALLOWED_PARAMS","CLUSTER_LIST_ALLOWED_PARAMS","CVE_DETAIL_ALLOWED_PARAMS","CLUSTER_DETAIL_ALLOWED_PARAMS","useLocalStorage","localStorage","getItem","sessionValue","setSessionValue","setItem","filterParams","urlParams","allowedParams","paramsCopy","Object","entries","forEach","URL_TRANSFORMERS","formatDate","timestamp","pad","number","year","getFullYear","month","getMonth","day","getDate","published","option","NUMERICAL_URL_PARAMS","useUrlBoundParams","initialParams","additionalParam","fetchAction","changeParamsAction","dispatch","useDispatch","url","URL","window","location","qs","search","newParams","queryParams","history","replaceState","origin","pathname","useUrlParams","getUrlParams","setUrlParams","initialUrlParams","combinedParams","property","Number","filteredParams","transformer","transformUrlParamsBeforeFetching","fetchCves","params","axios","fetchClusters","fetchExposedClusters","cveId","fetchCveDetails","fetchClusterCves","clusterId","fetchClusterDetails","fetchCveListTable","ActionTypes","payload","api","fetchClusterListTable","fetchCveDetailTable","fetchClusterDetailTable","changeCveListTableParams","changeClusterListTableParams","changeCveDetailsTableParams","changeClusterDetailsTableParams"],"sourceRoot":""}