{"version":3,"file":"js/5324.1658257462748.639ed9a97fe0fc09087e.js","mappings":"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","sources":["webpack:///./src/Components/PresentationalComponents/BottomPagination.js","webpack:///./src/Components/SmartComponents/BaseTable.js","webpack:///./src/Components/SmartComponents/BaseToolbar.js","webpack:///./src/Components/PresentationalComponents/ShieldSet.js","webpack:///./src/Helpers/constants.js","webpack:///./src/Helpers/apiHelper.js","webpack:///./src/Store/Actions.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\n\nconst BottomPagination = ({ page, perPage, itemCount, apply }) => {\n  return (\n    <Pagination\n      page={page}\n      itemCount={itemCount}\n      perPage={perPage}\n      variant={PaginationVariant.bottom}\n      ouiaId=\"pagination-bottom\"\n      isDisabled={itemCount === 0}\n      onSetPage={(event, page, limit, offset) => apply({ limit, offset })}\n      onPerPageSelect={(event, limit) => apply({ limit, offset: 0 })}\n    />\n  );\n};\n\nBottomPagination.propTypes = {\n  page: propTypes.number,\n  perPage: propTypes.number,\n  itemCount: propTypes.number,\n  apply: propTypes.func,\n};\n\nexport default BottomPagination;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport {\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n  ExpandableRowContent,\n  SortByDirection,\n} from '@patternfly/react-table';\nimport SkeletonTable from '@redhat-cloud-services/frontend-components/SkeletonTable/SkeletonTable';\nimport { TableVariant } from '@patternfly/react-table';\n\nconst BaseTable = ({\n  isLoading,\n  columns,\n  rows,\n  isExpandable = false,\n  emptyState,\n  sortParam,\n  apply,\n}) => {\n  const [expandedRows, setExpandedRows] = useState([]);\n\n  const setRowExpanded = (row, isExpanding) =>\n    setExpandedRows((prevExpanded) => {\n      const otherExpandedRows = prevExpanded.filter((r) => r !== row);\n      return isExpanding ? [...otherExpandedRows, row] : otherExpandedRows;\n    });\n\n  const isRowExpanded = (row) => expandedRows.includes(row);\n\n  // temporary fix by assigning a default sortParam\n  const createSortBy = (columns, sortParam = '-publish_date') => {\n    const direction =\n      sortParam[0] === '-' ? SortByDirection.desc : SortByDirection.asc;\n    sortParam = sortParam.replace(/^(-|\\+)/, '').split(',')[0];\n    const index = columns.findIndex((item) => item.sortParam === sortParam);\n\n    return {\n      index,\n      direction,\n      defaultDirection: SortByDirection.desc,\n    };\n  };\n\n  const getSortParams = (columnIndex) => ({\n    sortBy: createSortBy(columns, sortParam),\n    onSort: (event, index, direction) => {\n      let columnName = columns[columnIndex].sortParam;\n\n      if (direction === SortByDirection.desc) {\n        columnName = '-' + columnName;\n      }\n\n      apply({ sort: columnName });\n    },\n    columnIndex,\n  });\n\n  return isLoading ? (\n    <SkeletonTable\n      colSize={columns.length}\n      rowSize={20}\n      variant={TableVariant.compact}\n    />\n  ) : (\n    <TableComposable variant={TableVariant.compact} isStickyHeader>\n      <Thead>\n        <Tr>\n          {isExpandable && <Th />}\n          {columns.map((column, index) => (\n            <Th\n              key={column.title}\n              sort={column.sortParam && getSortParams(index)}\n            >\n              {column.title}\n            </Th>\n          ))}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {rows.length === 0 ? (\n          <Tr>\n            <Td colSpan={100}>{emptyState}</Td>\n          </Tr>\n        ) : (\n          rows.map((row, rowIndex) => (\n            <Fragment key={rowIndex}>\n              <Tr>\n                {isExpandable && (\n                  <Td\n                    expand={{\n                      rowIndex,\n                      isExpanded: isRowExpanded(row.key),\n                      onToggle: () =>\n                        setRowExpanded(row.key, !isRowExpanded(row.key)),\n                    }}\n                  />\n                )}\n                {row.cells.map((cell, cellIndex) => (\n                  <Td key={cellIndex} dataLabel={columns[cellIndex].title}>\n                    {cell}\n                  </Td>\n                ))}\n              </Tr>\n              {isExpandable && (\n                <Tr isExpanded={isRowExpanded(row.key)}>\n                  <Td colSpan={100}>\n                    <ExpandableRowContent>\n                      {row.expandableContent}\n                    </ExpandableRowContent>\n                  </Td>\n                </Tr>\n              )}\n            </Fragment>\n          ))\n        )}\n      </Tbody>\n    </TableComposable>\n  );\n};\n\nBaseTable.propTypes = {\n  isLoading: propTypes.bool.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node.isRequired,\n      sortParam: propTypes.string,\n    })\n  ).isRequired,\n  rows: propTypes.arrayOf(\n    propTypes.shape({\n      key: propTypes.string.isRequired,\n      cells: propTypes.arrayOf(propTypes.node).isRequired,\n      expandableContent: propTypes.node,\n    })\n  ).isRequired,\n  isExpandable: propTypes.bool,\n  emptyState: propTypes.node.isRequired,\n  sortParam: propTypes.string,\n  apply: propTypes.func,\n};\n\nexport default BaseTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\n\n// TODO: Move the page, perPage calculation to this component\nconst BaseToolbar = ({ page, perPage, itemCount, apply, filterConfig }) => {\n  return (\n    <PrimaryToolbar\n      pagination={{\n        isDisabled: itemCount === 0,\n        itemCount,\n        page,\n        perPage,\n        ouiaId: 'pagination-top',\n        onSetPage: (event, page, limit, offset) => apply({ limit, offset }),\n        onPerPageSelect: (event, limit) => apply({ limit, offset: 0 }),\n      }}\n      filterConfig={filterConfig}\n    />\n  );\n};\n\nBaseToolbar.propTypes = {\n  page: propTypes.number,\n  perPage: propTypes.number,\n  itemCount: propTypes.number,\n  apply: propTypes.func,\n  filterConfig: propTypes.shape({\n    items: propTypes.array,\n  }),\n};\n\nexport default BaseToolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SEVERITY_OPTIONS } from '../../Helpers/constants';\nimport { SecurityIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { Tooltip } from '@patternfly/react-core';\n\n// TODO: Setup link to navigate to Cluster detail page with severity filter applied\nconst ShieldSet = ({ count, linkTo }) => {\n  const DISABLED_COLOR = 'var(--pf-global--disabled-color--200)';\n\n  return (\n    <div className=\"shield-set\">\n      {Object.entries(SEVERITY_OPTIONS).map(\n        ([severityOption, severityOptionDetails]) => (\n          <Tooltip\n            key={severityOption}\n            content={`${severityOptionDetails.label} severity`}\n          >\n            {severityOptionDetails.isInShieldSet &&\n              (count[severityOption] === 0 ? (\n                <Link className=\"disabled-shield\">\n                  <SecurityIcon style={{ color: DISABLED_COLOR }} />\n                  <span>0</span>\n                </Link>\n              ) : (\n                <Link key={severityOption} to={linkTo}>\n                  <SecurityIcon\n                    style={{ color: severityOptionDetails.iconColor }}\n                  />\n                  <span>{count[severityOption]}</span>\n                </Link>\n              ))}\n          </Tooltip>\n        )\n      )}\n    </div>\n  );\n};\n\nShieldSet.propTypes = {\n  count: PropTypes.shape({\n    critical: PropTypes.number,\n    important: PropTypes.number,\n    moderate: PropTypes.number,\n    low: PropTypes.number,\n  }).isRequired,\n  linkTo: PropTypes.string,\n};\n\nexport default ShieldSet;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport parseCvssScore from '@redhat-cloud-services/frontend-components-utilities/parseCvssScore';\nimport { Shield } from '@redhat-cloud-services/frontend-components/Shield';\nimport ShieldSet from '../Components/PresentationalComponents/ShieldSet';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nexport const HEADER_ALERT_DISMISSED_KEY = 'vuln4shift:header-alert-dismissed';\n\nexport const SEVERITY_OPTIONS = {\n  critical: {\n    label: 'Critical',\n    iconColor: 'var(--pf-global--danger-color--100)',\n    textColor: 'var(--pf-global--danger-color--100)',\n    isInShieldSet: true,\n  },\n  important: {\n    label: 'Important',\n    iconColor: 'var(--pf-global--palette--orange-300)',\n    textColor: 'var(--pf-global--palette--orange-400)',\n    isInShieldSet: true,\n  },\n  moderate: {\n    label: 'Moderate',\n    iconColor: 'var(--pf-global--warning-color--100)',\n    textColor: 'var(--pf-global--warning-color--200)',\n    isInShieldSet: true,\n  },\n  low: {\n    label: 'Low',\n    iconColor: 'var(--pf-global--Color--200)',\n    textColor: 'var(--pf-global--default-color--300)',\n    isInShieldSet: true,\n  },\n  unknown: {\n    label: 'Unknown',\n  },\n};\n\nexport const CVE_LIST_TABLE_COLUMNS = [\n  {\n    title: 'CVE ID',\n    sortParam: 'synopsis',\n  },\n  {\n    title: 'Publish date',\n    sortParam: 'publish_date',\n  },\n  {\n    title: 'Severity',\n    sortParam: 'severity',\n  },\n  {\n    title: 'CVSS base score',\n    sortParam: 'cvss_score',\n  },\n  {\n    title: 'Clusters exposed',\n    sortParam: 'clusters_exposed',\n  },\n  {\n    title: 'Images exposed',\n    sortParam: 'images_exposed',\n  },\n];\n\nexport const CLUSTER_LIST_TABLE_COLUMNS = [\n  {\n    title: 'Name',\n    /* TODO: Readd after endpoint integration: sortParam: 'display_name', */\n  },\n  {\n    title: 'Status',\n  },\n  {\n    title: 'Type',\n  },\n  {\n    title: 'Version',\n  },\n  {\n    title: 'CVEs severity',\n  },\n  {\n    title: 'Provider',\n    /* TODO: Readd after endpoint integration: sortParam: 'provider', */\n  },\n  {\n    title: 'Last seen',\n    /* TODO: Readd after endpoint integration: sortParam: 'last_seen', */\n  },\n];\n\nexport const CVE_DETAIL_TABLE_COLUMNS = [\n  {\n    title: 'Name',\n    /* TODO: Readd after endpoint integration: sortParam: 'display_name', */\n  },\n  {\n    title: 'Status',\n  },\n  {\n    title: 'Type',\n  },\n  {\n    title: 'Version',\n  },\n  {\n    title: 'Provider',\n    /* TODO: Readd after endpoint integration: sortParam: 'provider', */\n  },\n  {\n    title: 'Last seen',\n    /* TODO: Readd after endpoint integration: sortParam: 'last_seen', */\n  },\n];\n\nexport const CLUSTER_DETAIL_TABLE_COLUMNS = [\n  {\n    title: 'CVE ID',\n    /* TODO: Readd after endpoint integration: sortParam: 'synopsis', */\n  },\n  {\n    title: 'Publish date',\n    /* TODO: Readd after endpoint integration: sortParam: 'publish_date', */\n  },\n  {\n    title: 'Severity',\n    /* TODO: Readd after endpoint integration: sortParam: 'severity', */\n  },\n  {\n    title: 'CVSS base score',\n    /* TODO: Readd after endpoint integration: sortParam: 'cvss_score', */\n  },\n  {\n    title: 'Images exposed',\n    /* TODO: Readd after endpoint integration: sortParam: 'images_exposed', */\n  },\n];\n\nconst createCveDescription = (row) => (\n  <Fragment>\n    <TextContent>\n      <Text component={TextVariants.h6} style={{ fontSize: 14 }}>\n        CVE description\n      </Text>\n    </TextContent>\n    {row.description}\n    <Link\n      to={'/cves/' + row.synopsis}\n      className=\"pf-u-mt-md pf-u-display-block\"\n    >\n      View more information about this CVE\n    </Link>\n  </Fragment>\n);\n\nexport const CVE_LIST_TABLE_MAPPER = (row) => ({\n  key: row.synopsis,\n  cells: [\n    <Link to={'/cves/' + row.synopsis} key={row.synopsis}>\n      {row.synopsis}\n    </Link>,\n    processDate(row.publish_date),\n    <Shield hasLabel impact={row.severity} key={row.synopsis} />,\n    parseCvssScore(row.cvss2_score, row.cvss3_score, true),\n    <Link to={'/cves/' + row.synopsis} key={row.synopsis}>\n      {row.clusters_exposed}\n    </Link>,\n    row.images_exposed,\n  ],\n  expandableContent: createCveDescription(row),\n});\n\nexport const CLUSTER_LIST_TABLE_MAPPER = (row) => ({\n  key: row.id,\n  cells: [\n    <Link to={'/clusters/' + row.id} key={row.id}>\n      {row.display_name}\n    </Link>,\n    row.status_text,\n    row.type,\n    row.version,\n    <ShieldSet\n      key={row.id}\n      count={{ ...row.cves_severity }}\n      linkTo={`/clusters/${row.id}`}\n    />,\n    row.provider,\n    <DateFormat key={row.id} date={row.last_seen} type=\"relative\" />,\n  ],\n});\n\nexport const CVE_DETAIL_TABLE_MAPPER = (row) => ({\n  key: row.id,\n  cells: [\n    <Link to={'/clusters/' + row.id} key={row.id}>\n      {row.display_name}\n    </Link>,\n    row.status_text,\n    row.type,\n    row.version,\n    row.provider,\n    <DateFormat key={row.id} date={row.last_seen} type=\"relative\" />,\n  ],\n});\n\nexport const CLUSTER_DETAIL_TABLE_MAPPER = (row) => ({\n  key: row.synopsis,\n  cells: [\n    <Link to={'/cves/' + row.synopsis} key={row.synopsis}>\n      {row.synopsis}\n    </Link>,\n    processDate(row.publish_date),\n    <Shield hasLabel impact={row.severity} key={row.synopsis} />,\n    parseCvssScore(row.cvss2_score, row.cvss3_score, true),\n    row.images_exposed,\n  ],\n  expandableContent: createCveDescription(row),\n});\n\nexport const GENERIC_ALLOWED_PARAMS = ['limit', 'offset', 'sort'];\n\nexport const CVE_LIST_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'published',\n  'severity',\n  'cvss_score',\n  'clusters_exposed',\n];\n\nexport const CLUSTER_LIST_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'cve_severity',\n];\n\nexport const CVE_DETAIL_ALLOWED_PARAMS = [...GENERIC_ALLOWED_PARAMS, 'search'];\n\nexport const CLUSTER_DETAIL_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'published',\n  'severity',\n  'cvss_score',\n  'images_exposed',\n];\n","import axios from 'axios';\n\nexport const fetchCves = async (params) => {\n  return axios.get('/api/ocp-vulnerability/v1/cves', { params });\n};\n\nexport const fetchClusters = async (params) => {\n  return axios.get('/api/ocp-vulnerability/v1/clusters', { params });\n};\n\nexport const fetchExposedClusters = async (cveId, params) => {\n  return axios.get(`/api/ocp-vulnerability/v1/cves/${cveId}/exposed_clusters`, {\n    params,\n  });\n};\n\nexport const fetchCveDetails = async (cveId, params) => {\n  return axios.get(`/api/ocp-vulnerability/v1/cves/${cveId}`, {\n    params,\n  });\n};\n\nexport const fetchClusterCves = async (clusterId, params) => {\n  return axios.get(`/api/ocp-vulnerability/v1/clusters/${clusterId}/cves`, {\n    params,\n  });\n};\n\nexport const fetchClusterDetails = async (clusterId, params) => {\n  return axios.get(`/api/ocp-vulnerability/v1/clusters/${clusterId}`, {\n    params,\n  });\n};\n","import * as ActionTypes from '../Store/ActionTypes';\nimport * as api from '../Helpers/apiHelper';\n\n/* FETCHING DATA */\nexport const fetchCveListTable = (params) => ({\n  type: ActionTypes.FETCH_CVE_LIST_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchCves(params),\n});\n\nexport const fetchClusterListTable = (params) => ({\n  type: ActionTypes.FETCH_CLUSTER_LIST_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchClusters(params),\n});\n\nexport const fetchCveDetailTable = (cveId, params) => ({\n  type: ActionTypes.FETCH_CVE_DETAIL_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchExposedClusters(cveId, params),\n});\n\nexport const fetchCveDetails = (cveId, params) => ({\n  type: ActionTypes.FETCH_CVE_DETAILS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchCveDetails(cveId, params),\n});\n\nexport const fetchClusterDetailTable = (clusterId, params) => ({\n  type: ActionTypes.FETCH_CLUSTER_DETAIL_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchClusterCves(clusterId, params),\n});\n\nexport const fetchClusterDetails = (clusterId, params) => ({\n  type: ActionTypes.FETCH_CLUSTER_DETAILS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchClusterDetails(clusterId, params),\n});\n\n/* CHANGING TABLE PARAMS */\nexport const changeCveListTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CVE_LIST_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n"],"names":["BottomPagination","page","perPage","itemCount","apply","Pagination","variant","PaginationVariant","ouiaId","isDisabled","onSetPage","event","limit","offset","onPerPageSelect","propTypes","BaseTable","isLoading","columns","rows","isExpandable","emptyState","sortParam","useState","expandedRows","setExpandedRows","isRowExpanded","row","includes","createSortBy","direction","SortByDirection","replace","split","index","findIndex","item","defaultDirection","colSize","length","rowSize","TableVariant","TableComposable","isStickyHeader","Thead","Tr","Th","map","column","key","title","sort","columnIndex","sortBy","onSort","columnName","Tbody","Td","colSpan","rowIndex","Fragment","expand","isExpanded","onToggle","isExpanding","prevExpanded","otherExpandedRows","filter","r","setRowExpanded","cells","cell","cellIndex","dataLabel","ExpandableRowContent","expandableContent","isRequired","BaseToolbar","filterConfig","pagination","items","ShieldSet","count","linkTo","className","Object","entries","SEVERITY_OPTIONS","severityOption","severityOptionDetails","Tooltip","content","label","isInShieldSet","Link","style","color","to","iconColor","PropTypes","critical","important","moderate","low","HEADER_ALERT_DISMISSED_KEY","textColor","unknown","CVE_LIST_TABLE_COLUMNS","CLUSTER_LIST_TABLE_COLUMNS","CVE_DETAIL_TABLE_COLUMNS","CLUSTER_DETAIL_TABLE_COLUMNS","createCveDescription","TextContent","Text","component","TextVariants","fontSize","description","synopsis","CVE_LIST_TABLE_MAPPER","processDate","publish_date","Shield","hasLabel","impact","severity","parseCvssScore","cvss2_score","cvss3_score","clusters_exposed","images_exposed","CLUSTER_LIST_TABLE_MAPPER","id","display_name","status_text","type","version","cves_severity","provider","DateFormat","date","last_seen","CVE_DETAIL_TABLE_MAPPER","CLUSTER_DETAIL_TABLE_MAPPER","GENERIC_ALLOWED_PARAMS","CVE_LIST_ALLOWED_PARAMS","fetchCves","params","axios","fetchClusters","fetchExposedClusters","cveId","fetchCveDetails","fetchClusterCves","clusterId","fetchClusterDetails","fetchCveListTable","ActionTypes","meta","timestamp","Date","payload","api","fetchClusterListTable","fetchCveDetailTable","fetchClusterDetailTable","changeCveListTableParams"],"sourceRoot":""}