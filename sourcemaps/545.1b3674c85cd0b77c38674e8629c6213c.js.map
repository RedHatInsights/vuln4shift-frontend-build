{"version":3,"file":"js/545.df9f1623a2bdc3c76ddf.js","mappings":"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","sources":["webpack:///./src/Components/PresentationalComponents/ErrorHandler.js","webpack:///./src/Components/SmartComponents/Filters/CheckboxFilter.js","webpack:///./src/Components/SmartComponents/Filters/TextFilter.js","webpack:///./src/Components/SmartComponents/Generic/BaseTableBody.js","webpack:///./src/Components/SmartComponents/Generic/BaseToolbar.js","webpack:///./src/Components/PresentationalComponents/BottomPagination.js","webpack:///./src/Components/SmartComponents/Generic/BaseTable.js","webpack:///./src/Helpers/apiHelper.js","webpack:///./src/Helpers/hooks.js","webpack:///./src/Store/Actions.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { InvalidObject } from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nconst ErrorHandler = ({ error, children }) => {\n  if (!error) {\n    return children;\n  }\n\n  const parsedCode = parseInt(error?.status);\n\n  switch (parsedCode) {\n    case 403:\n      return <NotAuthorized serviceName=\"Vulnerability for OpenShift\" />;\n\n    case 404:\n      return <InvalidObject />;\n\n    case 500:\n    case 502:\n    case 503:\n      return <Unavailable />;\n\n    default:\n      return <ErrorState />;\n  }\n};\n\nErrorHandler.propTypes = {\n  error: propTypes.shape({\n    status: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  }),\n  children: propTypes.node,\n};\n\nexport default ErrorHandler;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst checkboxFilter = ({\n  urlParam,\n  label,\n  value,\n  placeholder,\n  items,\n  apply,\n  chipLabel,\n}) => {\n  const onValuesChanged = (values) => {\n    apply({\n      [urlParam]: values.join(','),\n      offset: 0,\n    });\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.checkbox,\n    urlParam,\n    key: urlParam,\n    filterValues: {\n      onChange: (event, value) => {\n        onValuesChanged(value);\n      },\n      items,\n      value: value ? value.split(',') : [],\n      placeholder,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: (chips) => {\n      const itemsToRemove = chips.map((chip) => chip.value);\n\n      const newValue = value\n        .split(',')\n        .filter((value) => !itemsToRemove.includes(value));\n\n      onValuesChanged(newValue);\n    },\n    key: urlParam,\n    category: chipLabel,\n    chips: items\n      .filter((item) => value?.split(',').includes(item.value))\n      .map((item) => ({ name: item.label, value: item.value })),\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default checkboxFilter;\n","import { useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst useTextFilter = ({\n  urlParam,\n  label,\n  placeholder,\n  value,\n  apply,\n  chipLabel,\n}) => {\n  const [searchValue, setSearchValue] = useState();\n  const [handleSearch] = useState(() =>\n    debounce((newValue) => {\n      apply({ [urlParam]: newValue, offset: 0 });\n    }, 400)\n  );\n\n  useEffect(() => setSearchValue(value), [value]);\n\n  const filterConfig = {\n    type: conditionalFilterType.text,\n    label: label,\n    key: urlParam,\n    filterValues: {\n      'aria-label': 'search-field',\n      id: `text-filter-${urlParam}`,\n      onChange: (event, value) => {\n        setSearchValue(value);\n        handleSearch(value);\n      },\n      placeholder,\n      value: searchValue,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: () => apply({ [urlParam]: undefined, offset: 0 }),\n    key: urlParam,\n    category: chipLabel,\n    chips: [\n      {\n        name: value,\n      },\n    ],\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default useTextFilter;\n","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport {\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n  ExpandableRowContent,\n  SortByDirection,\n  sortable,\n} from '@patternfly/react-table';\nimport SkeletonTable from '@redhat-cloud-services/frontend-components/SkeletonTable/SkeletonTable';\nimport { TableVariant } from '@patternfly/react-table';\nimport { DEFAULT_LIMIT } from '../../../Helpers/constants';\n\nconst BaseTableBody = ({\n  isLoading,\n  columns,\n  rows,\n  isExpandable = false,\n  emptyState,\n  sortParam,\n  perPage,\n  apply,\n}) => {\n  const [expandedRows, setExpandedRows] = useState([]);\n  const [areAllRowsExpanded, setAreAllRowsExpanded] = useState(false);\n\n  useEffect(() => {\n    setAreAllRowsExpanded(\n      rows.length > 0 && rows.length === expandedRows.length\n    );\n  }, [expandedRows]);\n\n  useEffect(() => {\n    areAllRowsExpanded && setExpandedRows(rows.map((row) => row.key));\n  }, [rows]);\n\n  const onExpandRow = (row, isExpanding) =>\n    setExpandedRows((prevExpanded) => {\n      const otherExpandedRows = prevExpanded.filter((r) => r !== row);\n      return isExpanding ? [...otherExpandedRows, row] : otherExpandedRows;\n    });\n\n  const isRowExpanded = (row) => expandedRows.includes(row);\n\n  const createSortBy = (columns, sortParam, columnIndex) => {\n    if (rows.length === 0 || !sortParam) {\n      return {};\n    }\n\n    const direction =\n      sortParam[0] === '-' ? SortByDirection.desc : SortByDirection.asc;\n\n    sortParam = sortParam.replace(/^(-|\\+)/, '').split(',')[0];\n\n    const selectedColumnIndex = columns.findIndex(\n      (item) => item.sortParam === sortParam\n    );\n\n    return {\n      index: selectedColumnIndex,\n      direction,\n      defaultDirection:\n        columns[columnIndex]?.sortDefaultDirection ?? SortByDirection.desc,\n    };\n  };\n\n  const getSortParams = (columnIndex) => ({\n    sortBy: createSortBy(columns, sortParam, columnIndex),\n    onSort: (event, index, direction) => {\n      let columnName = columns[columnIndex].sortParam;\n\n      if (direction === SortByDirection.desc) {\n        columnName = '-' + columnName;\n      }\n\n      rows.length > 0 && apply({ sort: columnName });\n    },\n    columnIndex,\n  });\n\n  return isLoading ? (\n    <SkeletonTable\n      colSize={columns.length}\n      rowSize={perPage || DEFAULT_LIMIT}\n      variant={TableVariant.compact}\n      columns={columns.map((column) =>\n        column.sortParam ? { ...column, transforms: [sortable] } : column\n      )}\n      sortBy={createSortBy(columns, sortParam)}\n    />\n  ) : (\n    <TableComposable variant={TableVariant.compact} isStickyHeader>\n      <Thead>\n        <Tr>\n          {isExpandable && rows.length > 0 && (\n            <Th\n              expand={{\n                onToggle: () =>\n                  setExpandedRows(\n                    areAllRowsExpanded ? [] : rows.map((row) => row.key)\n                  ),\n                // looks like Patternfly has this condition reversed\n                areAllExpanded: !areAllRowsExpanded,\n              }}\n              ouiaId=\"expand-all\"\n            />\n          )}\n          {columns.map((column, index) => (\n            <Th\n              key={column.title}\n              sort={column.sortParam && getSortParams(index)}\n            >\n              {column.title}\n            </Th>\n          ))}\n        </Tr>\n      </Thead>\n      {rows.length === 0 ? (\n        <Tbody>\n          <Tr>\n            <Td colSpan={100}>{emptyState}</Td>\n          </Tr>\n        </Tbody>\n      ) : (\n        rows.map((row, rowIndex) => (\n          <Tbody key={rowIndex} isExpanded={isRowExpanded(row.key)}>\n            <Tr>\n              {isExpandable && (\n                <Td\n                  expand={{\n                    rowIndex,\n                    isExpanded: isRowExpanded(row.key),\n                    onToggle: () =>\n                      onExpandRow(row.key, !isRowExpanded(row.key)),\n                  }}\n                />\n              )}\n              {row.cells.map((cell, cellIndex) => (\n                <Td key={cellIndex} dataLabel={columns[cellIndex].title}>\n                  {cell}\n                </Td>\n              ))}\n            </Tr>\n            {isExpandable && (\n              <Tr isExpanded={isRowExpanded(row.key)}>\n                <Td colSpan={100}>\n                  <ExpandableRowContent>\n                    {row.expandableContent}\n                  </ExpandableRowContent>\n                </Td>\n              </Tr>\n            )}\n          </Tbody>\n        ))\n      )}\n    </TableComposable>\n  );\n};\n\nBaseTableBody.propTypes = {\n  isLoading: propTypes.bool.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node.isRequired,\n      sortParam: propTypes.string,\n      sortDefaultDirection: propTypes.oneOf([undefined, 'asc', 'desc']),\n    })\n  ).isRequired,\n  rows: propTypes.arrayOf(\n    propTypes.shape({\n      key: propTypes.string.isRequired,\n      cells: propTypes.arrayOf(propTypes.node).isRequired,\n      expandableContent: propTypes.node,\n    })\n  ).isRequired,\n  isExpandable: propTypes.bool,\n  emptyState: propTypes.node.isRequired,\n  sortParam: propTypes.string,\n  perPage: propTypes.number,\n  apply: propTypes.func,\n};\n\nexport default BaseTableBody;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { Skeleton } from '@patternfly/react-core';\n\nconst BaseToolbar = ({\n  isLoading,\n  page,\n  perPage,\n  itemCount,\n  apply,\n  filterConfig,\n  activeFiltersConfig,\n  onExport,\n}) => {\n  return (\n    <PrimaryToolbar\n      pagination={\n        isLoading ? (\n          <Skeleton fontSize=\"xl\" width=\"200px\" style={{ margin: 10 }} />\n        ) : (\n          {\n            isDisabled: itemCount === 0,\n            itemCount,\n            page,\n            perPage,\n            ouiaId: 'pagination-top',\n            onSetPage: (event, page, limit, offset) => apply({ limit, offset }),\n            onPerPageSelect: (event, limit) => apply({ limit, offset: 0 }),\n          }\n        )\n      }\n      filterConfig={filterConfig}\n      activeFiltersConfig={activeFiltersConfig}\n      exportConfig={\n        onExport && {\n          isDisabled: itemCount === 0,\n          onSelect: (e, format) => onExport(format),\n        }\n      }\n    />\n  );\n};\n\nBaseToolbar.propTypes = {\n  isLoading: propTypes.bool,\n  page: propTypes.number,\n  perPage: propTypes.number,\n  itemCount: propTypes.number,\n  apply: propTypes.func,\n  filterConfig: propTypes.shape({\n    items: propTypes.array,\n  }),\n  activeFiltersConfig: propTypes.shape({\n    filters: propTypes.array,\n  }),\n  onExport: propTypes.func,\n};\n\nexport default BaseToolbar;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Pagination,\n  PaginationVariant,\n  Skeleton,\n} from '@patternfly/react-core';\n\nconst BottomPagination = ({ isLoading, page, perPage, itemCount, apply }) => {\n  return isLoading ? (\n    <div className=\"pf-c-pagination pf-m-bottom\">\n      <Skeleton fontSize=\"xl\" width=\"350px\" style={{ margin: 10 }} />\n    </div>\n  ) : (\n    <Pagination\n      page={page}\n      itemCount={itemCount}\n      perPage={perPage}\n      variant={PaginationVariant.bottom}\n      ouiaId=\"pagination-bottom\"\n      isDisabled={itemCount === 0}\n      onSetPage={(event, page, limit, offset) => apply({ limit, offset })}\n      onPerPageSelect={(event, limit) => apply({ limit, offset: 0 })}\n    />\n  );\n};\n\nBottomPagination.propTypes = {\n  isLoading: propTypes.bool,\n  page: propTypes.number,\n  perPage: propTypes.number,\n  itemCount: propTypes.number,\n  apply: propTypes.func,\n};\n\nexport default BottomPagination;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport BaseTableBody from '../Generic/BaseTableBody';\nimport BaseToolbar from '../Generic/BaseToolbar';\nimport BottomPagination from '../../PresentationalComponents/BottomPagination';\nimport ErrorHandler from '../../PresentationalComponents/ErrorHandler';\n\nconst BaseTable = ({\n  isLoading,\n  isExpandable,\n  rows,\n  columns,\n  filterConfig = [],\n  activeFiltersConfig = [],\n  meta,\n  error,\n  emptyState,\n  apply,\n  onExport,\n}) => {\n  const { offset, limit, total_items, sort } = meta;\n\n  return (\n    <ErrorHandler error={error}>\n      <BaseToolbar\n        isLoading={isLoading}\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n        filterConfig={filterConfig}\n        activeFiltersConfig={activeFiltersConfig}\n        onExport={onExport}\n      />\n      <BaseTableBody\n        isLoading={isLoading}\n        columns={columns}\n        rows={rows}\n        isExpandable={isExpandable}\n        emptyState={emptyState}\n        sortParam={sort}\n        perPage={limit}\n        apply={apply}\n      />\n      <BottomPagination\n        isLoading={isLoading}\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n      />\n    </ErrorHandler>\n  );\n};\n\nBaseTable.propTypes = {\n  isLoading: propTypes.bool.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node.isRequired,\n      sortParam: propTypes.string,\n    })\n  ).isRequired,\n  rows: propTypes.arrayOf(\n    propTypes.shape({\n      key: propTypes.string.isRequired,\n      cells: propTypes.arrayOf(propTypes.node).isRequired,\n      expandableContent: propTypes.node,\n    })\n  ).isRequired,\n  isExpandable: propTypes.bool,\n  emptyState: propTypes.node.isRequired,\n  sortParam: propTypes.string,\n  filterConfig: propTypes.object,\n  activeFiltersConfig: propTypes.object,\n  meta: propTypes.shape({\n    offset: propTypes.number,\n    limit: propTypes.number,\n    total_items: propTypes.number,\n    sort: propTypes.string,\n  }),\n  error: propTypes.object,\n  apply: propTypes.func,\n  onExport: propTypes.func,\n};\n\nexport default BaseTable;\n","import axios from 'axios';\n\nconst instance = axios.create();\n\nconst errorInterceptor = ({ response }) => {\n  if (!axios.isCancel(response) && response?.data?.error) {\n    throw response?.data.error;\n  }\n\n  return response;\n};\n\ninstance.interceptors.response.use(null, errorInterceptor);\n\nexport const fetchCves = async (params) => {\n  return instance.get('/api/ocp-vulnerability/v1/cves', { params });\n};\n\nexport const fetchClusters = async (params) => {\n  return instance.get('/api/ocp-vulnerability/v1/clusters', { params });\n};\n\nexport const fetchExposedClusters = async (params, cveId) => {\n  return instance.get(\n    `/api/ocp-vulnerability/v1/cves/${cveId}/exposed_clusters`,\n    {\n      params,\n    }\n  );\n};\n\nexport const fetchCveDetails = async (cveId) => {\n  return instance.get(`/api/ocp-vulnerability/v1/cves/${cveId}`);\n};\n\nexport const fetchClusterCves = async (params, clusterId) => {\n  return instance.get(`/api/ocp-vulnerability/v1/clusters/${clusterId}/cves`, {\n    params,\n  });\n};\n\nexport const fetchClusterDetails = async (clusterId) => {\n  return instance.get(`/api/ocp-vulnerability/v1/clusters/${clusterId}`);\n};\n","import { useEffect, useState } from 'react';\nimport qs from 'query-string';\nimport { useDispatch } from 'react-redux';\nimport { EXPOSED_CLUSTERS_OPTIONS, PUBLISHED_OPTIONS } from './constants';\nimport {\n  addNotification,\n  clearNotifications,\n} from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\n\n// TODO: Consider moving some of these non-hook functions to constants.js or miscHelper.js\n\nexport const useLocalStorage = (key) => {\n  const [sessionValue, setSessionValue] = useState(localStorage.getItem(key));\n\n  const setValue = (newValue) => {\n    setSessionValue(newValue);\n    localStorage.setItem(key, newValue);\n  };\n\n  return [sessionValue, setValue];\n};\n\nexport function filterParams(urlParams, allowedParams) {\n  const paramsCopy = { ...urlParams };\n\n  Object.entries(paramsCopy)\n    .filter(([key, value]) => !allowedParams.includes(key) || value === '')\n    .forEach(([key]) => delete paramsCopy[key]);\n\n  return paramsCopy;\n}\n\nconst transformPublishedParam = (urlParams) => {\n  const formatDate = (timestamp) => {\n    const pad = (number) => `${`${number}`.length === 1 ? '0' : ''}${number}`;\n\n    const date = new Date(timestamp);\n\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1; // month is zero indexed\n    const day = date.getDate();\n\n    return `${year}-${pad(month)}-${pad(day)}`;\n  };\n\n  if (urlParams.published) {\n    const option = PUBLISHED_OPTIONS.find(\n      (option) => option.value === urlParams.published\n    );\n\n    urlParams.published = `${option.from ? formatDate(option.from) : ''},${\n      option.to ? formatDate(option.to) : ''\n    }`;\n  }\n\n  return urlParams;\n};\n\nconst transformExposedClustersParam = (urlParams) => {\n  if (urlParams.affected_clusters) {\n    urlParams.affected_clusters = EXPOSED_CLUSTERS_OPTIONS.map((item) =>\n      urlParams.affected_clusters.split(',').includes(item.value)\n        ? 'true'\n        : 'false'\n    ).join(',');\n  }\n\n  return urlParams;\n};\n\nconst transformClusterSeverityParam = (urlParams) => {\n  if (urlParams.cluster_severity) {\n    if (urlParams.cluster_severity.split(',').includes('any')) {\n      urlParams.cluster_severity = undefined;\n    }\n  } else {\n    urlParams.cluster_severity = 'low,moderate,important,critical';\n  }\n\n  return urlParams;\n};\n\n// when creating additional transformer in the future\n// create a new function for it and then add the function to this array\nconst URL_TRANSFORMERS = [\n  transformPublishedParam,\n  transformExposedClustersParam,\n  transformClusterSeverityParam,\n];\n\nconst transformUrlParamsBeforeFetching = (urlParams) => {\n  let newParams = { ...urlParams, total_items: undefined };\n\n  URL_TRANSFORMERS.forEach((transformer) => {\n    newParams = transformer(newParams);\n  });\n\n  return newParams;\n};\n\nconst NUMERICAL_URL_PARAMS = ['limit', 'offset'];\n\nexport const useUrlParams = (allowedParams) => {\n  const getUrlParams = () => {\n    const url = new URL(window.location);\n    return filterParams(qs.parse(url.search), allowedParams);\n  };\n\n  const setUrlParams = (newParams) => {\n    const url = new URL(window.location);\n    const queryParams = qs.stringify(newParams);\n\n    window.history.replaceState(\n      null,\n      null,\n      `${url.origin}${url.pathname}?${queryParams}`\n    );\n  };\n\n  return [getUrlParams, setUrlParams];\n};\n\nexport const useUrlBoundParams = ({\n  allowedParams,\n  initialParams,\n  additionalParam,\n  fetchAction,\n  changeParamsAction,\n}) => {\n  const dispatch = useDispatch();\n\n  const [getUrlParams, setUrlParams] = useUrlParams(allowedParams);\n\n  useEffect(() => {\n    if (window.location.search === '') {\n      apply({ ...initialParams });\n    }\n  }, [window.location.search]);\n\n  useEffect(() => {\n    const initialUrlParams = getUrlParams();\n\n    apply({ ...initialParams, ...initialUrlParams });\n  }, []);\n\n  const apply = (newParams, isReset = false) => {\n    const previousUrlParams = getUrlParams();\n\n    let combinedParams = isReset\n      ? { ...newParams }\n      : { ...previousUrlParams, ...newParams };\n\n    // convert numerical params to numbers\n    for (const property in combinedParams) {\n      if (NUMERICAL_URL_PARAMS.includes(property)) {\n        combinedParams[property] = Number(combinedParams[property]);\n      }\n    }\n\n    dispatch(changeParamsAction(combinedParams));\n\n    const filteredParams = filterParams(combinedParams, allowedParams);\n\n    dispatch(\n      fetchAction(\n        transformUrlParamsBeforeFetching(filteredParams),\n        additionalParam\n      )\n    );\n\n    setUrlParams(filteredParams);\n  };\n\n  return apply;\n};\n\nexport const useExport = ({\n  filenamePrefix,\n  fetchAction,\n  fetchActionParam,\n  allowedParams,\n}) => {\n  const dispatch = useDispatch();\n\n  const DEFAULT_PARAMS = {\n    report: true,\n  };\n\n  const onExport = async (format, params) => {\n    dispatch(\n      addNotification({\n        variant: 'info',\n        title:\n          'Preparing export. Once complete, your download will start automatically.',\n      })\n    );\n\n    const formattedDate =\n      new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc';\n\n    const filteredParams = filterParams(params, allowedParams);\n\n    const payload = await fetchAction(\n      {\n        ...transformUrlParamsBeforeFetching(filteredParams),\n        ...DEFAULT_PARAMS,\n        data_format: format,\n      },\n      fetchActionParam\n    );\n\n    let data =\n      format === 'json' ? JSON.stringify(payload.data.data) : payload.data.data;\n\n    downloadFile(data, filenamePrefix + formattedDate, format);\n\n    dispatch(clearNotifications());\n\n    dispatch(\n      addNotification({\n        variant: 'success',\n        title: 'Downloading export',\n      })\n    );\n  };\n\n  return onExport;\n};\n","import * as ActionTypes from '../Store/ActionTypes';\nimport * as api from '../Helpers/apiHelper';\n\n// TODO: Consider adding prefix to distinguish from API functions\n\n/* FETCHING DATA */\nexport const fetchCveListTable = (params) => ({\n  type: ActionTypes.FETCH_CVE_LIST_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchCves(params),\n});\n\nexport const fetchClusterListTable = (params) => ({\n  type: ActionTypes.FETCH_CLUSTER_LIST_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchClusters(params),\n});\n\nexport const fetchCveDetailTable = (cveId, params) => ({\n  type: ActionTypes.FETCH_CVE_DETAIL_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchExposedClusters(cveId, params),\n});\n\nexport const fetchCveDetails = (cveId, params) => ({\n  type: ActionTypes.FETCH_CVE_DETAILS,\n  meta: {\n    timestamp: new Date(),\n    noNotificationOnError: true,\n  },\n  payload: () => api.fetchCveDetails(cveId, params),\n});\n\nexport const fetchClusterDetailTable = (clusterId, params) => ({\n  type: ActionTypes.FETCH_CLUSTER_DETAIL_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchClusterCves(clusterId, params),\n});\n\nexport const fetchClusterDetails = (clusterId, params) => ({\n  type: ActionTypes.FETCH_CLUSTER_DETAILS,\n  meta: {\n    timestamp: new Date(),\n    noNotificationOnError: true,\n  },\n  payload: () => api.fetchClusterDetails(clusterId, params),\n});\n\n/* CHANGING TABLE PARAMS */\nexport const changeCveListTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CVE_LIST_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n\nexport const changeClusterListTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CLUSTER_LIST_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n\nexport const changeCveDetailsTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CVE_DETAIL_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n\nexport const changeClusterDetailsTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CLUSTER_DETAIL_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n"],"names":["ErrorHandler","_ref","error","children","parseInt","status","React","NotAuthorized","serviceName","InvalidObject","Unavailable","ErrorState","propTypes","urlParam","label","value","placeholder","items","apply","chipLabel","onValuesChanged","values","_apply","_defineProperty","join","filterConfig","type","conditionalFilterType","key","filterValues","onChange","event","split","activeFiltersConfig","isShown","onDelete","chips","itemsToRemove","map","chip","newValue","filter","includes","category","item","name","_useState","useState","_useState2","_slicedToArray","searchValue","setSearchValue","_useState3","debounce","handleSearch","useEffect","id","concat","_apply2","undefined","BaseTableBody","isLoading","columns","rows","_ref$isExpandable","isExpandable","emptyState","sortParam","perPage","expandedRows","setExpandedRows","_useState4","areAllRowsExpanded","setAreAllRowsExpanded","length","row","isRowExpanded","createSortBy","columnIndex","_columns$columnIndex$","_columns$columnIndex","direction","SortByDirection","replace","index","findIndex","defaultDirection","sortDefaultDirection","SkeletonTable","colSize","rowSize","DEFAULT_LIMIT","variant","TableVariant","column","_objectSpread","transforms","sortable","sortBy","TableComposable","isStickyHeader","Thead","Tr","Th","expand","onToggle","areAllExpanded","ouiaId","title","sort","onSort","columnName","Tbody","Td","colSpan","rowIndex","isExpanded","isExpanding","prevExpanded","otherExpandedRows","r","_toConsumableArray","onExpandRow","cells","cell","cellIndex","dataLabel","ExpandableRowContent","expandableContent","isRequired","BaseToolbar","page","itemCount","onExport","PrimaryToolbar","pagination","Skeleton","fontSize","width","style","margin","isDisabled","onSetPage","limit","offset","onPerPageSelect","exportConfig","onSelect","e","format","filters","BottomPagination","className","Pagination","PaginationVariant","BaseTable","_ref$filterConfig","_ref$activeFiltersCon","meta","total_items","instance","axios","interceptors","response","use","_response$data","data","fetchCves","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","params","_context","prev","next","abrupt","get","stop","_x","arguments","fetchClusters","_ref3","_callee2","_context2","_x2","fetchExposedClusters","_ref4","_callee3","cveId","_context3","_x3","_x4","fetchCveDetails","_ref5","_callee4","_context4","_x5","fetchClusterCves","_ref6","_callee5","clusterId","_context5","_x6","_x7","fetchClusterDetails","_ref7","_callee6","_context6","_x8","useLocalStorage","localStorage","getItem","sessionValue","setSessionValue","setItem","filterParams","urlParams","allowedParams","paramsCopy","Object","entries","forEach","URL_TRANSFORMERS","formatDate","timestamp","pad","number","date","Date","year","getFullYear","month","getMonth","day","getDate","published","option","PUBLISHED_OPTIONS","from","to","affected_clusters","EXPOSED_CLUSTERS_OPTIONS","cluster_severity","transformUrlParamsBeforeFetching","newParams","transformer","NUMERICAL_URL_PARAMS","useUrlBoundParams","initialParams","additionalParam","fetchAction","changeParamsAction","dispatch","useDispatch","_useUrlParams","url","URL","window","location","qs","search","queryParams","history","replaceState","origin","pathname","useUrlParams","_useUrlParams2","getUrlParams","setUrlParams","initialUrlParams","isReset","previousUrlParams","combinedParams","property","Number","filteredParams","useExport","filenamePrefix","fetchActionParam","DEFAULT_PARAMS","report","formattedDate","payload","addNotification","toISOString","data_format","sent","JSON","stringify","downloadFile","clearNotifications","fetchCveListTable","ActionTypes","api","fetchClusterListTable","fetchCveDetailTable","noNotificationOnError","fetchClusterDetailTable","changeCveListTableParams","changeClusterListTableParams","changeCveDetailsTableParams","changeClusterDetailsTableParams"],"sourceRoot":""}