{"version":3,"file":"js/545.1669904976476.82936f1e3e535514e550.js","mappings":"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","sources":["webpack:///./src/Components/PresentationalComponents/ErrorHandler.js","webpack:///./src/Components/SmartComponents/Filters/CheckboxFilter.js","webpack:///./src/Components/SmartComponents/Filters/TextFilter.js","webpack:///./src/Components/SmartComponents/Generic/BaseTableBody.js","webpack:///./src/Components/SmartComponents/Generic/BaseToolbar.js","webpack:///./src/Components/PresentationalComponents/BottomPagination.js","webpack:///./src/Components/SmartComponents/Generic/BaseTable.js","webpack:///./src/Helpers/apiHelper.js","webpack:///./src/Helpers/hooks.js","webpack:///./src/Store/Actions.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { InvalidObject } from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nconst ErrorHandler = ({ error, children }) => {\n  if (!error) {\n    return children;\n  }\n\n  const parsedCode = parseInt(error?.status);\n\n  switch (parsedCode) {\n    case 403:\n      return <NotAuthorized />;\n\n    case 404:\n      return <InvalidObject />;\n\n    case 500:\n    case 502:\n    case 503:\n      return <Unavailable />;\n\n    default:\n      return <ErrorState />;\n  }\n};\n\nErrorHandler.propTypes = {\n  error: propTypes.shape({\n    status: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  }),\n  children: propTypes.node,\n};\n\nexport default ErrorHandler;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst checkboxFilter = ({\n  urlParam,\n  label,\n  value,\n  placeholder,\n  items,\n  apply,\n  chipLabel,\n}) => {\n  const onValuesChanged = (values) => {\n    apply({\n      [urlParam]: values.join(','),\n      offset: 0,\n    });\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.checkbox,\n    urlParam,\n    key: urlParam,\n    filterValues: {\n      onChange: (event, value) => {\n        onValuesChanged(value);\n      },\n      items,\n      value: value ? value.split(',') : [],\n      placeholder,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: (chips) => {\n      const itemsToRemove = chips.map((chip) => chip.value);\n\n      const newValue = value\n        .split(',')\n        .filter((value) => !itemsToRemove.includes(value));\n\n      onValuesChanged(newValue);\n    },\n    key: urlParam,\n    category: chipLabel,\n    chips: items\n      .filter((item) => value?.split(',').includes(item.value))\n      .map((item) => ({ name: item.label, value: item.value })),\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default checkboxFilter;\n","import { useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst useTextFilter = ({\n  urlParam,\n  label,\n  placeholder,\n  value,\n  apply,\n  chipLabel,\n}) => {\n  const [searchValue, setSearchValue] = useState();\n  const [handleSearch] = useState(() =>\n    debounce((newValue) => {\n      apply({ [urlParam]: newValue, offset: 0 });\n    }, 400)\n  );\n\n  useEffect(() => setSearchValue(value), [value]);\n\n  const filterConfig = {\n    type: conditionalFilterType.text,\n    label: label,\n    key: urlParam,\n    filterValues: {\n      'aria-label': 'search-field',\n      id: `text-filter-${urlParam}`,\n      onChange: (event, value) => {\n        setSearchValue(value);\n        handleSearch(value);\n      },\n      placeholder,\n      value: searchValue,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: () => apply({ [urlParam]: undefined, offset: 0 }),\n    key: urlParam,\n    category: chipLabel,\n    chips: [\n      {\n        name: value,\n      },\n    ],\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default useTextFilter;\n","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport {\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n  ExpandableRowContent,\n  SortByDirection,\n  sortable,\n} from '@patternfly/react-table';\nimport SkeletonTable from '@redhat-cloud-services/frontend-components/SkeletonTable/SkeletonTable';\nimport { TableVariant } from '@patternfly/react-table';\nimport { DEFAULT_LIMIT } from '../../../Helpers/constants';\n\nconst BaseTableBody = ({\n  isLoading,\n  columns,\n  rows,\n  isExpandable = false,\n  emptyState,\n  sortParam,\n  perPage,\n  apply,\n}) => {\n  const [expandedRows, setExpandedRows] = useState([]);\n  const [areAllRowsExpanded, setAreAllRowsExpanded] = useState(false);\n\n  useEffect(() => {\n    setAreAllRowsExpanded(\n      rows.length > 0 && rows.length === expandedRows.length\n    );\n  }, [expandedRows]);\n\n  useEffect(() => {\n    areAllRowsExpanded && setExpandedRows(rows.map((row) => row.key));\n  }, [rows]);\n\n  const onExpandRow = (row, isExpanding) =>\n    setExpandedRows((prevExpanded) => {\n      const otherExpandedRows = prevExpanded.filter((r) => r !== row);\n      return isExpanding ? [...otherExpandedRows, row] : otherExpandedRows;\n    });\n\n  const isRowExpanded = (row) => expandedRows.includes(row);\n\n  const createSortBy = (columns, sortParam, columnIndex) => {\n    if (rows.length === 0 || !sortParam) {\n      return {};\n    }\n\n    const direction =\n      sortParam[0] === '-' ? SortByDirection.desc : SortByDirection.asc;\n\n    sortParam = sortParam.replace(/^(-|\\+)/, '').split(',')[0];\n\n    const selectedColumnIndex = columns.findIndex(\n      (item) => item.sortParam === sortParam\n    );\n\n    return {\n      index: selectedColumnIndex,\n      direction,\n      defaultDirection:\n        columns[columnIndex]?.sortDefaultDirection ?? SortByDirection.desc,\n    };\n  };\n\n  const getSortParams = (columnIndex) => ({\n    sortBy: createSortBy(columns, sortParam, columnIndex),\n    onSort: (event, index, direction) => {\n      let columnName = columns[columnIndex].sortParam;\n\n      if (direction === SortByDirection.desc) {\n        columnName = '-' + columnName;\n      }\n\n      rows.length > 0 && apply({ sort: columnName });\n    },\n    columnIndex,\n  });\n\n  return isLoading ? (\n    <SkeletonTable\n      colSize={columns.length}\n      rowSize={perPage || DEFAULT_LIMIT}\n      variant={TableVariant.compact}\n      columns={columns.map((column) =>\n        column.sortParam ? { ...column, transforms: [sortable] } : column\n      )}\n      sortBy={createSortBy(columns, sortParam)}\n    />\n  ) : (\n    <TableComposable variant={TableVariant.compact} isStickyHeader>\n      <Thead>\n        <Tr>\n          {isExpandable && rows.length > 0 && (\n            <Th\n              expand={{\n                onToggle: () =>\n                  setExpandedRows(\n                    areAllRowsExpanded ? [] : rows.map((row) => row.key)\n                  ),\n                // looks like Patternfly has this condition reversed\n                areAllExpanded: !areAllRowsExpanded,\n              }}\n              ouiaId=\"expand-all\"\n            />\n          )}\n          {columns.map((column, index) => (\n            <Th\n              key={column.title}\n              sort={column.sortParam && getSortParams(index)}\n            >\n              {column.title}\n            </Th>\n          ))}\n        </Tr>\n      </Thead>\n      {rows.length === 0 ? (\n        <Tbody>\n          <Tr>\n            <Td colSpan={100}>{emptyState}</Td>\n          </Tr>\n        </Tbody>\n      ) : (\n        rows.map((row, rowIndex) => (\n          <Tbody key={rowIndex} isExpanded={isRowExpanded(row.key)}>\n            <Tr>\n              {isExpandable && (\n                <Td\n                  expand={{\n                    rowIndex,\n                    isExpanded: isRowExpanded(row.key),\n                    onToggle: () =>\n                      onExpandRow(row.key, !isRowExpanded(row.key)),\n                  }}\n                />\n              )}\n              {row.cells.map((cell, cellIndex) => (\n                <Td key={cellIndex} dataLabel={columns[cellIndex].title}>\n                  {cell}\n                </Td>\n              ))}\n            </Tr>\n            {isExpandable && (\n              <Tr isExpanded={isRowExpanded(row.key)}>\n                <Td colSpan={100}>\n                  <ExpandableRowContent>\n                    {row.expandableContent}\n                  </ExpandableRowContent>\n                </Td>\n              </Tr>\n            )}\n          </Tbody>\n        ))\n      )}\n    </TableComposable>\n  );\n};\n\nBaseTableBody.propTypes = {\n  isLoading: propTypes.bool.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node.isRequired,\n      sortParam: propTypes.string,\n      sortDefaultDirection: propTypes.oneOf([undefined, 'asc', 'desc']),\n    })\n  ).isRequired,\n  rows: propTypes.arrayOf(\n    propTypes.shape({\n      key: propTypes.string.isRequired,\n      cells: propTypes.arrayOf(propTypes.node).isRequired,\n      expandableContent: propTypes.node,\n    })\n  ).isRequired,\n  isExpandable: propTypes.bool,\n  emptyState: propTypes.node.isRequired,\n  sortParam: propTypes.string,\n  perPage: propTypes.number,\n  apply: propTypes.func,\n};\n\nexport default BaseTableBody;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { Skeleton } from '@patternfly/react-core';\n\nconst BaseToolbar = ({\n  isLoading,\n  page,\n  perPage,\n  itemCount,\n  apply,\n  filterConfig,\n  activeFiltersConfig,\n  onExport,\n}) => {\n  return (\n    <PrimaryToolbar\n      pagination={\n        isLoading ? (\n          <Skeleton fontSize=\"xl\" width=\"200px\" style={{ margin: 10 }} />\n        ) : (\n          {\n            isDisabled: itemCount === 0,\n            itemCount,\n            page,\n            perPage,\n            ouiaId: 'pagination-top',\n            onSetPage: (event, page, limit, offset) => apply({ limit, offset }),\n            onPerPageSelect: (event, limit) => apply({ limit, offset: 0 }),\n          }\n        )\n      }\n      filterConfig={filterConfig}\n      activeFiltersConfig={activeFiltersConfig}\n      exportConfig={\n        onExport && {\n          isDisabled: itemCount === 0,\n          onSelect: (e, format) => onExport(format),\n        }\n      }\n    />\n  );\n};\n\nBaseToolbar.propTypes = {\n  isLoading: propTypes.bool,\n  page: propTypes.number,\n  perPage: propTypes.number,\n  itemCount: propTypes.number,\n  apply: propTypes.func,\n  filterConfig: propTypes.shape({\n    items: propTypes.array,\n  }),\n  activeFiltersConfig: propTypes.shape({\n    filters: propTypes.array,\n  }),\n  onExport: propTypes.func,\n};\n\nexport default BaseToolbar;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Pagination,\n  PaginationVariant,\n  Skeleton,\n} from '@patternfly/react-core';\n\nconst BottomPagination = ({ isLoading, page, perPage, itemCount, apply }) => {\n  return isLoading ? (\n    <div className=\"pf-c-pagination pf-m-bottom\">\n      <Skeleton fontSize=\"xl\" width=\"350px\" style={{ margin: 10 }} />\n    </div>\n  ) : (\n    <Pagination\n      page={page}\n      itemCount={itemCount}\n      perPage={perPage}\n      variant={PaginationVariant.bottom}\n      ouiaId=\"pagination-bottom\"\n      isDisabled={itemCount === 0}\n      onSetPage={(event, page, limit, offset) => apply({ limit, offset })}\n      onPerPageSelect={(event, limit) => apply({ limit, offset: 0 })}\n    />\n  );\n};\n\nBottomPagination.propTypes = {\n  isLoading: propTypes.bool,\n  page: propTypes.number,\n  perPage: propTypes.number,\n  itemCount: propTypes.number,\n  apply: propTypes.func,\n};\n\nexport default BottomPagination;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport BaseTableBody from '../Generic/BaseTableBody';\nimport BaseToolbar from '../Generic/BaseToolbar';\nimport BottomPagination from '../../PresentationalComponents/BottomPagination';\nimport ErrorHandler from '../../PresentationalComponents/ErrorHandler';\n\nconst BaseTable = ({\n  isLoading,\n  isExpandable,\n  rows,\n  columns,\n  filterConfig = [],\n  activeFiltersConfig = [],\n  meta,\n  error,\n  emptyState,\n  apply,\n  onExport,\n}) => {\n  const { offset, limit, total_items, sort } = meta;\n\n  return (\n    <ErrorHandler error={error}>\n      <BaseToolbar\n        isLoading={isLoading}\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n        filterConfig={filterConfig}\n        activeFiltersConfig={activeFiltersConfig}\n        onExport={onExport}\n      />\n      <BaseTableBody\n        isLoading={isLoading}\n        columns={columns}\n        rows={rows}\n        isExpandable={isExpandable}\n        emptyState={emptyState}\n        sortParam={sort}\n        perPage={limit}\n        apply={apply}\n      />\n      <BottomPagination\n        isLoading={isLoading}\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n      />\n    </ErrorHandler>\n  );\n};\n\nBaseTable.propTypes = {\n  isLoading: propTypes.bool.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node.isRequired,\n      sortParam: propTypes.string,\n    })\n  ).isRequired,\n  rows: propTypes.arrayOf(\n    propTypes.shape({\n      key: propTypes.string.isRequired,\n      cells: propTypes.arrayOf(propTypes.node).isRequired,\n      expandableContent: propTypes.node,\n    })\n  ).isRequired,\n  isExpandable: propTypes.bool,\n  emptyState: propTypes.node.isRequired,\n  sortParam: propTypes.string,\n  filterConfig: propTypes.object,\n  activeFiltersConfig: propTypes.object,\n  meta: propTypes.shape({\n    offset: propTypes.number,\n    limit: propTypes.number,\n    total_items: propTypes.number,\n    sort: propTypes.string,\n  }),\n  error: propTypes.object,\n  apply: propTypes.func,\n  onExport: propTypes.func,\n};\n\nexport default BaseTable;\n","import axios from 'axios';\n\nconst instance = axios.create();\n\nconst errorInterceptor = ({ response }) => {\n  if (!axios.isCancel(response) && response?.data?.error) {\n    throw response?.data.error;\n  }\n\n  return response;\n};\n\ninstance.interceptors.response.use(null, errorInterceptor);\n\nexport const fetchCves = async (params) => {\n  return instance.get('/api/ocp-vulnerability/v1/cves', { params });\n};\n\nexport const fetchClusters = async (params) => {\n  return instance.get('/api/ocp-vulnerability/v1/clusters', { params });\n};\n\nexport const fetchExposedClusters = async (params, cveId) => {\n  return instance.get(\n    `/api/ocp-vulnerability/v1/cves/${cveId}/exposed_clusters`,\n    {\n      params,\n    }\n  );\n};\n\nexport const fetchCveDetails = async (cveId) => {\n  return instance.get(`/api/ocp-vulnerability/v1/cves/${cveId}`);\n};\n\nexport const fetchClusterCves = async (params, clusterId) => {\n  return instance.get(`/api/ocp-vulnerability/v1/clusters/${clusterId}/cves`, {\n    params,\n  });\n};\n\nexport const fetchClusterDetails = async (clusterId) => {\n  return instance.get(`/api/ocp-vulnerability/v1/clusters/${clusterId}`);\n};\n","import { useEffect, useState } from 'react';\nimport qs from 'query-string';\nimport { useDispatch } from 'react-redux';\nimport { EXPOSED_CLUSTERS_OPTIONS, PUBLISHED_OPTIONS } from './constants';\nimport {\n  addNotification,\n  clearNotifications,\n} from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\n\n// TODO: Consider moving some of these non-hook functions to constants.js or miscHelper.js\n\nexport const useLocalStorage = (key) => {\n  const [sessionValue, setSessionValue] = useState(localStorage.getItem(key));\n\n  const setValue = (newValue) => {\n    setSessionValue(newValue);\n    localStorage.setItem(key, newValue);\n  };\n\n  return [sessionValue, setValue];\n};\n\nexport function filterParams(urlParams, allowedParams) {\n  const paramsCopy = { ...urlParams };\n\n  Object.entries(paramsCopy)\n    .filter(([key, value]) => !allowedParams.includes(key) || value === '')\n    .forEach(([key]) => delete paramsCopy[key]);\n\n  return paramsCopy;\n}\n\nconst transformPublishedParam = (urlParams) => {\n  const formatDate = (timestamp) => {\n    const pad = (number) => `${`${number}`.length === 1 ? '0' : ''}${number}`;\n\n    const date = new Date(timestamp);\n\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1; // month is zero indexed\n    const day = date.getDate();\n\n    return `${year}-${pad(month)}-${pad(day)}`;\n  };\n\n  if (urlParams.published) {\n    const option = PUBLISHED_OPTIONS.find(\n      (option) => option.value === urlParams.published\n    );\n\n    urlParams.published = `${option.from ? formatDate(option.from) : ''},${\n      option.to ? formatDate(option.to) : ''\n    }`;\n  }\n\n  return urlParams;\n};\n\nconst transformExposedClustersParam = (urlParams) => {\n  if (urlParams.affected_clusters) {\n    urlParams.affected_clusters = EXPOSED_CLUSTERS_OPTIONS.map((item) =>\n      urlParams.affected_clusters.split(',').includes(item.value)\n        ? 'true'\n        : 'false'\n    ).join(',');\n  }\n\n  return urlParams;\n};\n\nconst transformClusterSeverityParam = (urlParams) => {\n  if (urlParams.cluster_severity) {\n    if (urlParams.cluster_severity.split(',').includes('any')) {\n      urlParams.cluster_severity = undefined;\n    }\n  } else {\n    urlParams.cluster_severity = 'low,moderate,important,critical';\n  }\n\n  return urlParams;\n};\n\n// when creating additional transformer in the future\n// create a new function for it and then add the function to this array\nconst URL_TRANSFORMERS = [\n  transformPublishedParam,\n  transformExposedClustersParam,\n  transformClusterSeverityParam,\n];\n\nconst transformUrlParamsBeforeFetching = (urlParams) => {\n  let newParams = { ...urlParams, total_items: undefined };\n\n  URL_TRANSFORMERS.forEach((transformer) => {\n    newParams = transformer(newParams);\n  });\n\n  return newParams;\n};\n\nconst NUMERICAL_URL_PARAMS = ['limit', 'offset'];\n\nexport const useUrlParams = (allowedParams) => {\n  const getUrlParams = () => {\n    const url = new URL(window.location);\n    return filterParams(qs.parse(url.search), allowedParams);\n  };\n\n  const setUrlParams = (newParams) => {\n    const url = new URL(window.location);\n    const queryParams = qs.stringify(newParams);\n\n    window.history.replaceState(\n      null,\n      null,\n      `${url.origin}${url.pathname}?${queryParams}`\n    );\n  };\n\n  return [getUrlParams, setUrlParams];\n};\n\nexport const useUrlBoundParams = ({\n  allowedParams,\n  initialParams,\n  additionalParam,\n  fetchAction,\n  changeParamsAction,\n}) => {\n  const dispatch = useDispatch();\n\n  const [getUrlParams, setUrlParams] = useUrlParams(allowedParams);\n\n  useEffect(() => {\n    if (window.location.search === '') {\n      apply({ ...initialParams });\n    }\n  }, [window.location.search]);\n\n  useEffect(() => {\n    const initialUrlParams = getUrlParams();\n\n    apply({ ...initialParams, ...initialUrlParams });\n  }, []);\n\n  const apply = (newParams, isReset = false) => {\n    const previousUrlParams = getUrlParams();\n\n    let combinedParams = isReset\n      ? { ...newParams }\n      : { ...previousUrlParams, ...newParams };\n\n    // convert numerical params to numbers\n    for (const property in combinedParams) {\n      if (NUMERICAL_URL_PARAMS.includes(property)) {\n        combinedParams[property] = Number(combinedParams[property]);\n      }\n    }\n\n    dispatch(changeParamsAction(combinedParams));\n\n    const filteredParams = filterParams(combinedParams, allowedParams);\n\n    dispatch(\n      fetchAction(\n        transformUrlParamsBeforeFetching(filteredParams),\n        additionalParam\n      )\n    );\n\n    setUrlParams(filteredParams);\n  };\n\n  return apply;\n};\n\nexport const useExport = ({\n  filenamePrefix,\n  fetchAction,\n  fetchActionParam,\n  allowedParams,\n}) => {\n  const dispatch = useDispatch();\n\n  const DEFAULT_PARAMS = {\n    report: true,\n  };\n\n  const onExport = async (format, params) => {\n    dispatch(\n      addNotification({\n        variant: 'info',\n        title:\n          'Preparing export. Once complete, your download will start automatically.',\n      })\n    );\n\n    const formattedDate =\n      new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc';\n\n    const filteredParams = filterParams(params, allowedParams);\n\n    const payload = await fetchAction(\n      {\n        ...transformUrlParamsBeforeFetching(filteredParams),\n        ...DEFAULT_PARAMS,\n        data_format: format,\n      },\n      fetchActionParam\n    );\n\n    let data =\n      format === 'json' ? JSON.stringify(payload.data.data) : payload.data.data;\n\n    downloadFile(data, filenamePrefix + formattedDate, format);\n\n    dispatch(clearNotifications());\n\n    dispatch(\n      addNotification({\n        variant: 'success',\n        title: 'Downloading export',\n      })\n    );\n  };\n\n  return onExport;\n};\n","import * as ActionTypes from '../Store/ActionTypes';\nimport * as api from '../Helpers/apiHelper';\n\n// TODO: Consider adding prefix to distinguish from API functions\n\n/* FETCHING DATA */\nexport const fetchCveListTable = (params) => ({\n  type: ActionTypes.FETCH_CVE_LIST_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchCves(params),\n});\n\nexport const fetchClusterListTable = (params) => ({\n  type: ActionTypes.FETCH_CLUSTER_LIST_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchClusters(params),\n});\n\nexport const fetchCveDetailTable = (cveId, params) => ({\n  type: ActionTypes.FETCH_CVE_DETAIL_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchExposedClusters(cveId, params),\n});\n\nexport const fetchCveDetails = (cveId, params) => ({\n  type: ActionTypes.FETCH_CVE_DETAILS,\n  meta: {\n    timestamp: new Date(),\n    noNotificationOnError: true,\n  },\n  payload: () => api.fetchCveDetails(cveId, params),\n});\n\nexport const fetchClusterDetailTable = (clusterId, params) => ({\n  type: ActionTypes.FETCH_CLUSTER_DETAIL_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchClusterCves(clusterId, params),\n});\n\nexport const fetchClusterDetails = (clusterId, params) => ({\n  type: ActionTypes.FETCH_CLUSTER_DETAILS,\n  meta: {\n    timestamp: new Date(),\n    noNotificationOnError: true,\n  },\n  payload: () => api.fetchClusterDetails(clusterId, params),\n});\n\n/* CHANGING TABLE PARAMS */\nexport const changeCveListTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CVE_LIST_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n\nexport const changeClusterListTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CLUSTER_LIST_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n\nexport const changeCveDetailsTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CVE_DETAIL_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n\nexport const changeClusterDetailsTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CLUSTER_DETAIL_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n"],"names":["ErrorHandler","error","children","parseInt","status","propTypes","urlParam","label","value","placeholder","items","apply","chipLabel","onValuesChanged","values","join","filterConfig","type","conditionalFilterType","key","filterValues","onChange","event","split","activeFiltersConfig","isShown","onDelete","chips","itemsToRemove","map","chip","newValue","filter","includes","category","item","name","useState","searchValue","setSearchValue","debounce","handleSearch","useEffect","id","undefined","BaseTableBody","isLoading","columns","rows","isExpandable","emptyState","sortParam","perPage","expandedRows","setExpandedRows","areAllRowsExpanded","setAreAllRowsExpanded","length","row","isRowExpanded","createSortBy","columnIndex","direction","SortByDirection","replace","index","findIndex","defaultDirection","sortDefaultDirection","colSize","rowSize","DEFAULT_LIMIT","variant","TableVariant","column","transforms","sortable","sortBy","TableComposable","isStickyHeader","Thead","Tr","Th","expand","onToggle","areAllExpanded","ouiaId","title","sort","onSort","columnName","Tbody","Td","colSpan","rowIndex","isExpanded","isExpanding","prevExpanded","otherExpandedRows","r","onExpandRow","cells","cell","cellIndex","dataLabel","ExpandableRowContent","expandableContent","isRequired","BaseToolbar","page","itemCount","onExport","PrimaryToolbar","pagination","Skeleton","fontSize","width","style","margin","isDisabled","onSetPage","limit","offset","onPerPageSelect","exportConfig","onSelect","e","format","filters","BottomPagination","className","Pagination","PaginationVariant","BaseTable","meta","total_items","instance","axios","interceptors","response","use","data","fetchCves","params","get","fetchClusters","fetchExposedClusters","cveId","fetchCveDetails","fetchClusterCves","clusterId","fetchClusterDetails","useLocalStorage","localStorage","getItem","sessionValue","setSessionValue","setItem","filterParams","urlParams","allowedParams","paramsCopy","Object","entries","forEach","URL_TRANSFORMERS","formatDate","timestamp","pad","number","date","Date","year","getFullYear","month","getMonth","day","getDate","published","option","PUBLISHED_OPTIONS","from","to","affected_clusters","EXPOSED_CLUSTERS_OPTIONS","cluster_severity","transformUrlParamsBeforeFetching","newParams","transformer","NUMERICAL_URL_PARAMS","useUrlBoundParams","initialParams","additionalParam","fetchAction","changeParamsAction","dispatch","useDispatch","url","URL","window","location","qs","search","queryParams","history","replaceState","origin","pathname","useUrlParams","getUrlParams","setUrlParams","initialUrlParams","isReset","previousUrlParams","combinedParams","property","Number","filteredParams","useExport","filenamePrefix","fetchActionParam","DEFAULT_PARAMS","report","addNotification","formattedDate","toISOString","data_format","payload","JSON","stringify","downloadFile","clearNotifications","fetchCveListTable","ActionTypes","api","fetchClusterListTable","fetchCveDetailTable","noNotificationOnError","fetchClusterDetailTable","changeCveListTableParams","changeClusterListTableParams","changeCveDetailsTableParams","changeClusterDetailsTableParams"],"sourceRoot":""}