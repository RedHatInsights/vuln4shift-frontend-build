{"version":3,"file":"js/6043.35f17329e382e0afa296.js","mappings":";2LACA,QAEiB,kBAFjB,EAGiB,kBAHjB,EAIW,WAJX,EAKe,gBALf,EAMgB,iBANhB,EAOc,cAPd,EAQkB,mBARlB,EASmB,oBATnB,EAUY,YAVZ,EAWe,gBAXf,EAYkB,mBAZlB,EAaa,aAbb,EAcgB,iBAdhB,EAemB,oBAfnB,EAgBc,cAhBd,EAiBe,eAjBf,EAkBe,eAlBf,EAmBc,cAnBd,EAoBY,2BCpBL,MAAMA,EAAiB,gBAAoB,CAAC,GCGtCC,EAAkBC,IAC3B,IAAI,UAAEC,EAAY,KAAI,SAAEC,GAAaF,EAAIG,GAAQ,QAAOH,EAAI,CAAC,YAAa,aAC1E,OAAQ,gBAAoB,MAAOI,OAAOC,OAAO,CAAEJ,WAAW,OFqB9C,2BErByEA,IAAcE,GAAQD,EAAU,EAE7HH,EAAeO,YAAc,iBCJtB,MAAMC,EAAeP,IACxB,IAAI,SAAEE,EAAQ,GAAEM,EAAE,UAAEP,GAAcD,EAAIG,GAAQ,QAAOH,EAAI,CAAC,WAAY,KAAM,cAC5E,OAAQ,gBAAoB,MAAOI,OAAOC,OAAO,CAAEJ,WAAW,OHmBjD,wBGnByEA,GAAYO,GAAIA,GAAML,GAAQD,EAAU,EAElIK,EAAYD,YAAc,cCJnB,MAAMG,EAAqBT,IAC9B,IAAI,SAAEE,EAAQ,UAAED,GAAcD,EAAIG,GAAQ,QAAOH,EAAI,CAAC,WAAY,cAClE,OAAQ,gBAAoB,OAAQI,OAAOC,OAAO,CAAEJ,WAAW,OJyB7C,8BIzB0EA,IAAcE,GAAQD,EAAU,EAEhIO,EAAkBH,YAAc,oBCJzB,MAAMI,EAAqBV,IAC9B,IAAI,SAAEE,EAAQ,UAAED,EAAS,aAAEU,GAAiBX,EAAIG,GAAQ,QAAOH,EAAI,CAAC,WAAY,YAAa,iBAC7F,MAAMY,EAAeD,EACrB,OAAQ,gBAAoBC,EAAcR,OAAOC,OAAO,CAAEJ,WAAW,OLyBnD,8BKzBgFA,IAAcE,GAAQD,EAAU,EAEtIQ,EAAkBJ,YAAc,oBCHzB,MAAMO,EAAiBb,IAC1B,IAAI,SAAEE,EAAQ,KAAEY,EAAI,UAAEb,EAAS,kBAAEc,EAAoB,KAAI,qBAAEC,EAAoB,GAAER,EAAE,8BAAES,GAAkCjB,EAAIG,GAAQ,QAAOH,EAAI,CAAC,WAAY,OAAQ,YAAa,oBAAqB,uBAAwB,KAAM,kCACnO,OAAQ,gBAAoB,SAAUI,OAAOC,OAAO,CAAEJ,WAAW,ONqBlD,0BMrB4EA,IAAcE,GACrG,gBAAoB,MAAO,CAAEF,WAAW,ONqB9B,0BMrBwDO,GAAIA,GAClEM,GAAQ,gBAAoBL,EAAmB,KAAMK,GACrD,gBAAoBJ,EAAmB,CAAEC,aAAcI,GACnDC,GAAwBC,GAAkC,gBAAoB,OAAQ,CAAEhB,UAAW,uBAAyBgB,GAC5Hf,IAAY,EAE5BW,EAAcP,YAAc,gBCXrB,MAAMY,EAAiBlB,IAC1B,IAAI,SAAEE,EAAQ,UAAED,EAAY,IAAOD,EAAIG,GAAQ,QAAOH,EAAI,CAAC,WAAY,cACvE,OAAQ,gBAAoB,SAAUI,OAAOC,OAAO,CAAEJ,WAAW,OPsBlD,0BOtB4EA,IAAcE,GAAQD,EAAU,EAE/HgB,EAAcZ,YAAc,0CCFrB,MAAMa,EAAsBnB,IAC/B,IAAI,QAAEoB,EAAU,MAAgB,IAAIpB,EAAIG,GAAQ,QAAOH,EAAI,CAAC,YAC5D,OAAQ,gBAAoB,MAAO,CAAEC,WAAW,ORkBlC,2BQjBV,gBAAoBoB,EAAA,GAAQjB,OAAOC,OAAO,CAAEiB,QAASF,EAASG,QAAS,QAAS,cAAc,GAAQpB,EAAO,CAAEqB,MAAO,CAAEC,cAAe,UACnI,gBAAoB,KAAW,OAAQ,EAEnDN,EAAmBb,YAAc,qBCR1B,MAAMoB,EAAgB1B,IACzB,IAAI,UAAEC,EAAY,IAAOD,EAAIG,GAAQ,QAAOH,EAAI,CAAC,cACjD,OAAO,gBAAoB,MAAOI,OAAOC,OAAO,CAAEJ,WAAW,OTkB/C,yBSlBwEA,IAAcE,GAAO,EAE/GuB,EAAapB,YAAc,eCRpB,MAKP,EALkC,CAChC,KAAQ,8BACR,MAAS,OACT,IAAO,oCCET,EALkC,CAChC,KAAQ,8BACR,MAAS,OACT,IAAO,wCCeEqB,oCACX,SAAWA,GACPA,EAAsB,KAAI,OAC1BA,EAAqB,IAAI,MACzBA,EAAwB,OAAI,SAC5BA,EAAsB,KAAI,OAC1BA,EAAuB,MAAI,QAC3BA,EAA0B,SAAI,YAC9BA,EAAwB,OAAI,UAC5BA,EAA6B,YAAI,eACjCA,EAA2B,UAAI,aAC/BA,EAA2B,UAAI,aAC/BA,EAAyB,QAAI,WAC7BA,EAA4B,WAAI,cAChCA,EAA0B,SAAI,WACjC,CAdD,CAcGA,IAAoBA,EAAkB,CAAC,IAC1C,MAAMC,EAAa,CACfC,OAAQ,EACRC,KAAM,EACNC,QAAS,EACTC,QAAS,EACTC,OAAQ,GAECC,EAAWlC,IACpB,IAAI,SAAEE,EAAQ,SAAEiC,EAAW,MAAK,WAAEC,GAAa,EAAI,UAAEnC,EAAY,GAAE,UAAEoC,EAAY,KAAI,YAAEC,EAAc,KAAM,MAAI,WAAEC,EAAa,KAAM,MAAM,aAAcC,EAAY,GAAE,YAAEC,EAAW,cAAEC,EAAgB,KAAI,gBAAEC,EAAkB,KAAI,WAAEC,EAAa,KAAI,qBAAE5B,EAAoB,8BAAEC,EAA6B,cAAE4B,EAAgB,KAAI,SAAEC,EAAW,KAAMC,SAASC,MAAI,mBAAEC,GAAqB,EAAI,OAAEC,EAAS,KAAM,MAAI,SAAEC,EAAW,KAAM,MAAI,OAAEC,EAAS,KAAM,MAAI,QAAEC,EAAU,KAAM,MAAI,QAAEC,EAAU,KAAM,MAAI,OAAEC,GAAS,KAAI,cAAEC,GAAgB,QAAO,SAAEC,GAAW,GAAmB,EAAgBC,MAAK,SAAEC,GAAW,GAAmB,EAAgBD,MAAK,kBAAEE,GAAoB,QAAO,UAAEC,IAAY,EAAI,SAAEC,GAAW,GAAE,aAAEC,GAAe,CACpsB,MACA,SACA,OACA,QACA,YACA,UACA,eACA,aACA,aACA,WACA,cACA,aACH,kBAAEC,GAAoB,IAAG,GAAExD,GAAIyD,cAAeC,GAAiB,WAAEC,GAAU,aAAEC,IAAe,EAAK,aAAEC,IAAe,EAAK,eAAEC,IAAmBtE,EAAIuE,IAAO,QAAOvE,EAAI,CAAC,WAAY,WAAY,aAAc,YAAa,YAAa,cAAe,aAAc,aAAc,cAAe,gBAAiB,kBAAmB,aAAc,uBAAwB,gCAAiC,gBAAiB,WAAY,qBAAsB,SAAU,WAAY,SAAU,UAAW,UAAW,SAAU,gBAAiB,WAAY,WAAY,oBAAqB,YAAa,WAAY,eAAgB,oBAAqB,KAAM,gBAAiB,aAAc,eAAgB,eAAgB,mBAG7rB,MAAMwE,GAAWhE,KAAM,UACjBiE,GAAgC,OAAdpC,GACjBqC,GAASC,IAAc,YAAe,IACtCC,GAAiBC,IAAsB,WAAeC,QAAQZ,KAC/Da,GAAa,SAAa,MAChC,aAAgB,KACZzB,GAAS,GACV,IACH,aAAgB,KACRmB,KACIpC,EACA2C,QAAKC,GAAW,GAGhBC,KAER,GACD,CAAC7C,EAAWoC,KACf,MAAMO,GAAO,CAACG,EAAOlB,KACjBkB,GAAS/B,EAAO+B,GAChBR,IAAW,IACW,IAAtBT,IAA+BD,GAAiBY,IAAmB,EAAK,EAEtEK,GAAQC,IACVA,GAASjC,EAAOiC,GAChBR,IAAW,EAAM,EAEfS,GAAoB,CACtBC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACP,YAAa,EACb,UAAW,EACX,eAAgB,EAChB,aAAc,EACd,aAAc,EACd,WAAY,EACZ,cAAe,EACf,YAAa,GAEXC,GAAoBhC,KAAa,EAAgBC,MACjDgC,GAAoB/B,KAAa,EAAgBD,MAkDjDiC,GAAgBR,IACdV,GACAlC,EAAW4C,EAAOH,IAGlBA,GAAKG,GAAO,EAChB,EAEES,GAAgBT,IACdV,GACAnC,EAAY6C,EAAOD,IAGnBA,GAAKC,EACT,EA2BEU,GAAW,gBAAoBC,EAAA,EAAW1F,OAAOC,OAAO,CAAE0F,IAAKhB,GAAYiB,OAAQpB,GAAiBqB,iBAAkB,CACpHC,yBAAyB,EACzBC,yBAAyB,EAGzBC,aAAc9B,SAAkBW,EAChCoB,kBAAoBC,GAAe,IAAIC,SAASC,IAC5C,MAAMC,EAAWC,aAAY,KACrBJ,EAAWK,OAAOC,GAAyD,WAA3CC,iBAAiBD,GAAWE,eAC5DN,IACAO,cAAcN,GAClB,GACD,GAAG,IAEVO,gBAAiB,CAAEC,aAAc,QACjCC,cAAe,KAKX,IAAIC,EAAO,KAIX,OAHIpE,UAAYA,SAASqE,gBACrBD,EAAOpE,SAASqE,eAEbD,CAAI,GAEhBE,2BAA2B,EAAMpH,WAAW,OZlM1C,kBYkM8De,GAAwBY,EAAWZ,GAAuBoD,IAAgB,EAA4BC,IAAgB,EAA4BpE,GAAYqH,KAAM,SAAU,aAAc,OAAQ,aAAc5E,OAAgBuC,EAAYzC,EAAW,kBAAmBE,EAAgB,WAAW8B,iBAAoBS,EAAW,mBAAoB,WAAWT,UAAiB+C,YAxEla,KACnB3C,IACAC,IAAmB,EACvB,EAqE0drD,MAAO,CAC7diC,SAAUgC,GAAoBhC,GAAW,KACzCE,SAAU+B,GAAoB/B,GAAW,OACxCY,IACL,gBAAoB7C,EAAc,MAClC,gBAAoB3B,EAAgB,KAChC8D,IAA+B,UAAlBL,IAA8B,gBAAoBrC,EAAoB,CAAEC,QAzCvE+D,IAClBA,EAAMqC,kBACF/C,GACAnC,EAAY6C,EAAOD,IAGnBA,GAAKC,EACT,EAkCgH,aAAcvB,KAC1HlB,GAAkB,gBAAoB7B,EAAe,CAAEL,GAAI,WAAWgE,YAAmB1D,KAAM8B,EAAY5B,qBAAsBA,EAAsBC,8BAA+BA,GAAiC,GAAGD,WAA+BD,kBAAmB4B,GAA4C,mBAAlBD,EAA+BA,EAAcwC,IAAQxC,GAC3V,gBAAoBnC,EAAa,CAAEC,GAAI,WAAWgE,WAA0C,mBAAhB/B,EAA6BA,EAAYyC,IAAQzC,GAC7HI,GAAkB,gBAAoB3B,EAAe,CAAEV,GAAI,WAAWgE,aAA8C,mBAAlB3B,EAA+BA,EAAcqC,IAAQrC,KAC/J,OAAQ,gBAAoB/C,EAAe2H,SAAU,CAAE/D,MAAO,CAAEf,oBAC5D,gBAAoB+E,EAAAA,OAAQ,CAAEC,QAASzH,EAAUiE,WAAYA,GAAYyD,OAAQ/B,GAASgC,UAAW9C,GAAYtB,SAAUA,GAAUX,SAAUA,EAAUT,UAAWqC,GAASiB,aAAgC,UAAlBnC,IAA6BmC,GAAcC,aAAgC,UAAlBpC,IAA6BoC,GAAckC,mBAAsC,UAAlBtE,IAA6BmC,GAAcoC,mBAAsC,UAAlBvE,IAA6BoC,GAAcoC,QAA2B,UAAlBxE,IA9D1Z,CAAC2B,IACTV,GACAlC,EAAW4C,EAAOH,IAGlBA,GAAKG,GAAO,EAChB,GAwD4c8C,OAA0B,UAAlBzE,IAtDzc,CAAC2B,IACRV,GACAnC,EAAY6C,EAAOD,IAGnBA,GAAKC,EACT,GAgDyfC,kBAAmBA,GAAmBtB,SAAUA,GAAUoE,UAAW/F,EAAUgG,eAAkC,UAAlB3E,IArGrkB,CAAC2B,IAChBV,GACIC,GACApC,EAAY6C,EAAOD,IAGnB3C,EAAW4C,EAAOH,IAIlBN,GACAQ,GAAKC,GAGLH,GAAKG,GAAO,EAEpB,GAqFqoBiD,gBArHjnB,CAACjD,EAAOkD,EAAgBC,KAC5C,GAAIrF,GAAsByB,GAAS,CAG/B,GADgB4D,GAAiBA,EAAcC,SAASpD,EAAMqD,QAG1D,OAEA/D,GACAnC,EAAY6C,EAAOD,IAGnBA,GAAKC,EAEb,GAuGuqBsD,kBA/HhpBtD,IACnBA,EAAMuD,MAAQ,KAASC,QAAUjE,KAC7BD,GACAnC,EAAY6C,EAAOD,IAGnBA,GAAKC,GAEb,EAuH6sB/C,WAAYA,EAAYmB,OAAQA,GAAQQ,aAAcA,GAAcC,kBAAmBA,GAAmBb,SAAUA,EAAUE,QAASA,EAASH,OAAQ,IAAM2B,IAAmB,KAAW,EAEj5B3C,EAAQ5B,YAAc,2DC7NlBsI,EAAqB,CAAC,qBAAsB,sBAAuB,wBAAyB,uBAAwB,sBAAuB,oCAAqC,+BAAgC,+BAAgC,gEAAiE,6CAA8C,wBAC/VC,EAAmCD,EAAmBE,KAAK,KAC3DC,EAA+B,oBAAZC,QACnBC,EAAUF,EAAY,WAAa,EAAIC,QAAQE,UAAUD,SAAWD,QAAQE,UAAUC,mBAAqBH,QAAQE,UAAUE,sBAC7HC,GAAeN,GAAaC,QAAQE,UAAUG,YAAc,SAAUC,GACxE,IAAIC,EACJ,OAAOD,SAAmG,QAAhDC,EAAuBD,EAAQD,mBAAkD,IAAzBE,OAAlE,EAA6GA,EAAqBC,KAAKF,EACzL,EAAI,SAAUA,GACZ,OAAOA,aAAyC,EAASA,EAAQG,aACnE,EAUIC,EAAU,SAASA,EAAQvC,EAAMwC,GACnC,IAAIC,OACW,IAAXD,IACFA,GAAS,GAKX,IAAIE,EAAW1C,SAAyF,QAA5CyC,EAAqBzC,EAAK2C,oBAAiD,IAAvBF,OAA9D,EAAuGA,EAAmBJ,KAAKrC,EAAM,SAUvL,MATyB,KAAb0C,GAAgC,SAAbA,GAOTF,GAAUxC,GAAQuC,EAAQvC,EAAK4C,WAGvD,EAsBIC,EAAgB,SAAuBC,EAAIC,EAAkBC,GAG/D,GAAIT,EAAQO,GACV,MAAO,GAET,IAAIG,EAAaC,MAAMnB,UAAUoB,MAAMC,MAAMN,EAAGO,iBAAiB3B,IAKjE,OAJIqB,GAAoBjB,EAAQO,KAAKS,EAAIpB,IACvCuB,EAAWK,QAAQR,GAERG,EAAWD,OAAOA,EAEjC,EAoCIO,EAA2B,SAASA,EAAyBC,EAAUT,EAAkBU,GAG3F,IAFA,IAAIR,EAAa,GACbS,EAAkBR,MAAMS,KAAKH,GAC1BE,EAAgBE,QAAQ,CAC7B,IAAIzB,EAAUuB,EAAgBG,QAC9B,IAAItB,EAAQJ,GAAS,GAKrB,GAAwB,SAApBA,EAAQ2B,QAAoB,CAE9B,IAAIC,EAAW5B,EAAQ6B,mBAEnBC,EAAmBV,EADTQ,EAASH,OAASG,EAAW5B,EAAQpJ,UACM,EAAM0K,GAC3DA,EAAQS,QACVjB,EAAWkB,KAAKf,MAAMH,EAAYgB,GAElChB,EAAWkB,KAAK,CACdC,YAAajC,EACbc,WAAYgB,GAGlB,KAAO,CAEgBnC,EAAQO,KAAKF,EAAST,IACrB+B,EAAQT,OAAOb,KAAaY,IAAqBS,EAASa,SAASlC,KACvFc,EAAWkB,KAAKhC,GAIlB,IAAImC,EAAanC,EAAQmC,YAEQ,mBAA1Bb,EAAQc,eAAgCd,EAAQc,cAAcpC,GAKjEqC,GAAmBjC,EAAQ+B,GAAY,MAAYb,EAAQgB,kBAAoBhB,EAAQgB,iBAAiBtC,IAC5G,GAAImC,GAAcE,EAAiB,CAOjC,IAAIE,EAAoBnB,GAAwC,IAAfe,EAAsBnC,EAAQpJ,SAAWuL,EAAWvL,UAAU,EAAM0K,GACjHA,EAAQS,QACVjB,EAAWkB,KAAKf,MAAMH,EAAYyB,GAElCzB,EAAWkB,KAAK,CACdC,YAAajC,EACbc,WAAYyB,GAGlB,MAGEhB,EAAgBJ,QAAQF,MAAMM,EAAiBvB,EAAQpJ,SAE3D,CACF,CACA,OAAOkK,CACT,EAQI0B,EAAc,SAAqB3E,GACrC,OAAQ4E,MAAMC,SAAS7E,EAAK2C,aAAa,YAAa,IACxD,EAQImC,EAAc,SAAqB9E,GACrC,IAAKA,EACH,MAAM,IAAI+E,MAAM,oBAElB,OAAI/E,EAAKgF,SAAW,IAQb,0BAA0BC,KAAKjF,EAAK8D,UA5JrB,SAA2B9D,GACjD,IAAIkF,EAIAC,EAAWnF,SAA0F,QAA7CkF,EAAsBlF,EAAK2C,oBAAkD,IAAxBuC,OAA/D,EAAyGA,EAAoB7C,KAAKrC,EAAM,mBAC1L,MAAoB,KAAbmF,GAAgC,SAAbA,CAC5B,CAqJyDC,CAAkBpF,MAAW2E,EAAY3E,GACrF,EAGJA,EAAKgF,QACd,EAiBIK,EAAuB,SAA8BC,EAAGC,GAC1D,OAAOD,EAAEN,WAAaO,EAAEP,SAAWM,EAAEE,cAAgBD,EAAEC,cAAgBF,EAAEN,SAAWO,EAAEP,QACxF,EACIS,EAAU,SAAiBzF,GAC7B,MAAwB,UAAjBA,EAAK8D,OACd,EA8FI4B,EAAa,SAAoB1F,GACnC,IAAI2F,EAAwB3F,EAAK4F,wBAC/BC,EAAQF,EAAsBE,MAC9BC,EAASH,EAAsBG,OACjC,OAAiB,IAAVD,GAA0B,IAAXC,CACxB,EA6HIC,EAAkC,SAAyCtC,EAASzD,GACtF,QAAIA,EAAKgG,UAITzD,EAAQvC,IApOU,SAAuBA,GACzC,OAAOyF,EAAQzF,IAAuB,WAAdA,EAAKiG,IAC/B,CAkOmBC,CAAclG,IAjIlB,SAAkBA,EAAMmG,GACrC,IAAIrG,EAAeqG,EAAKrG,aACtByE,EAAgB4B,EAAK5B,cAMvB,GAA0C,WAAtC7E,iBAAiBM,GAAML,WACzB,OAAO,EAET,IACIyG,EADkBtE,EAAQO,KAAKrC,EAAM,iCACAA,EAAKqG,cAAgBrG,EAC9D,GAAI8B,EAAQO,KAAK+D,EAAkB,yBACjC,OAAO,EAET,GAAKtG,GAAiC,SAAjBA,GAA4C,gBAAjBA,GAgEzC,GAAqB,kBAAjBA,EAMT,OAAO4F,EAAW1F,OAtE4D,CAC9E,GAA6B,mBAAlBuE,EAA8B,CAIvC,IADA,IAAI+B,EAAetG,EACZA,GAAM,CACX,IAAIqG,EAAgBrG,EAAKqG,cACrBE,EAAWrE,EAAYlC,GAC3B,GAAIqG,IAAkBA,EAAc/B,aAA+C,IAAjCC,EAAc8B,GAI9D,OAAOX,EAAW1F,GAGlBA,EAFSA,EAAKwG,aAEPxG,EAAKwG,aACFH,GAAiBE,IAAavG,EAAKsC,cAKtC+D,EAHAE,EAASE,IAKpB,CACAzG,EAAOsG,CACT,CAWA,GAxGiB,SAAwBtG,GAC3C,IAAI0G,EA+BEC,EAAeC,EAAuBC,EAPxCC,EAAW9G,GAAQkC,EAAYlC,GAC/B+G,EAA0C,QAA1BL,EAAYI,SAAoC,IAAdJ,OAAuB,EAASA,EAAUD,KAI5FO,GAAW,EACf,GAAIF,GAAYA,IAAa9G,EAG3B,IADAgH,KAAiD,QAAlCL,EAAgBI,SAA4C,IAAlBJ,GAAsF,QAAzDC,EAAwBD,EAAcrE,qBAAqD,IAA1BsE,GAAoCA,EAAsBxF,SAAS2F,IAAiB/G,SAAmF,QAA9C6G,EAAsB7G,EAAKsC,qBAAmD,IAAxBuE,GAAkCA,EAAoBzF,SAASpB,KAC7XgH,GAAYD,GAAc,CAChC,IAAIE,EAAYC,EAAgBC,EAMhCH,IAAkD,QAAnCE,EADfH,EAA2C,QAA3BE,EADhBH,EAAW5E,EAAY6E,UAC2C,IAAfE,OAAwB,EAASA,EAAWR,YAClB,IAAnBS,GAAwF,QAA1DC,EAAwBD,EAAe5E,qBAAqD,IAA1B6E,IAAoCA,EAAsB/F,SAAS2F,GAC/N,CAEF,OAAOC,CACT,CA2DQI,CAAepH,GAKjB,OAAQA,EAAKqH,iBAAiBzD,OAmBhC,GAAqB,gBAAjB9D,EACF,OAAO,CAGX,CAWA,OAAO,CACT,CAqC0CwH,CAAStH,EAAMyD,IAjO9B,SAA8BzD,GAIvD,MAHyB,YAAjBA,EAAK8D,SAAyBZ,MAAMnB,UAAUoB,MAAMC,MAAMpD,EAAKjH,UAAUwO,MAAK,SAAUC,GAC9F,MAAyB,YAAlBA,EAAM1D,OACf,GAEF,CA8NE2D,CAAqBzH,IAlCM,SAAgCA,GAC3D,GAAI,mCAAmCiF,KAAKjF,EAAK8D,SAG/C,IAFA,IAAIlB,EAAa5C,EAAKqG,cAEfzD,GAAY,CACjB,GAA2B,aAAvBA,EAAWkB,SAA0BlB,EAAWoD,SAAU,CAE5D,IAAK,IAAI0B,EAAI,EAAGA,EAAI9E,EAAW7J,SAAS6K,OAAQ8D,IAAK,CACnD,IAAIF,EAAQ5E,EAAW7J,SAAS4O,KAAKD,GAErC,GAAsB,WAAlBF,EAAM1D,QAGR,QAAOhC,EAAQO,KAAKO,EAAY,0BAAkC4E,EAAMpG,SAASpB,EAErF,CAEA,OAAO,CACT,CACA4C,EAAaA,EAAWyD,aAC1B,CAKF,OAAO,CACT,CAQgCuB,CAAuB5H,GAIvD,EACI6H,EAAiC,SAAwCpE,EAASzD,GACpF,QAlMuB,SAA4BA,GACnD,OAJY,SAAiBA,GAC7B,OAAOyF,EAAQzF,IAAuB,UAAdA,EAAKiG,IAC/B,CAES6B,CAAQ9H,KA3BK,SAAyBA,GAC7C,IAAKA,EAAK+H,KACR,OAAO,EAET,IAIIC,EAJAC,EAAajI,EAAKkI,MAAQhG,EAAYlC,GACtCmI,EAAc,SAAqBJ,GACrC,OAAOE,EAAW5E,iBAAiB,6BAA+B0E,EAAO,KAC3E,EAEA,GAAsB,oBAAXK,aAAgD,IAAfA,OAAOC,KAAoD,mBAAtBD,OAAOC,IAAIC,OAC1FN,EAAWG,EAAYC,OAAOC,IAAIC,OAAOtI,EAAK+H,YAE9C,IACEC,EAAWG,EAAYnI,EAAK+H,KAC9B,CAAE,MAAOQ,GAGP,OADAC,QAAQC,MAAM,2IAA4IF,EAAIG,UACvJ,CACT,CAEF,IAAIC,EA3BgB,SAAyBC,EAAOV,GACpD,IAAK,IAAIR,EAAI,EAAGA,EAAIkB,EAAMhF,OAAQ8D,IAChC,GAAIkB,EAAMlB,GAAGiB,SAAWC,EAAMlB,GAAGQ,OAASA,EACxC,OAAOU,EAAMlB,EAGnB,CAqBgBmB,CAAgBb,EAAUhI,EAAKkI,MAC7C,OAAQS,GAAWA,IAAY3I,CACjC,CAK2B8I,CAAgB9I,EAC3C,CAgMM+I,CAAmB/I,IAAS8E,EAAY9E,GAAQ,IAAM+F,EAAgCtC,EAASzD,GAIrG,EACIgJ,EAA4B,SAAmCC,GACjE,IAAIjE,EAAWH,SAASoE,EAAetG,aAAa,YAAa,IACjE,SAAIiC,MAAMI,IAAaA,GAAY,EAMrC,EAMIkE,EAAc,SAASA,EAAYjG,GACrC,IAAIkG,EAAmB,GACnBC,EAAmB,GAkBvB,OAjBAnG,EAAWoG,SAAQ,SAAU1B,EAAMD,GACjC,IAAI4B,IAAY3B,EAAKvD,YACjBjC,EAAUmH,EAAU3B,EAAKvD,YAAcuD,EACvC4B,EAlRmB,SAA8BvJ,EAAMsJ,GAC7D,IAAItE,EAAWF,EAAY9E,GAC3B,OAAIgF,EAAW,GAAKsE,IAAY3E,EAAY3E,GACnC,EAEFgF,CACT,CA4Q4BwE,CAAqBrH,EAASmH,GAClD9F,EAAW8F,EAAUJ,EAAYvB,EAAK1E,YAAcd,EAC9B,IAAtBoH,EACFD,EAAUH,EAAiBhF,KAAKf,MAAM+F,EAAkB3F,GAAY2F,EAAiBhF,KAAKhC,GAE1FiH,EAAiBjF,KAAK,CACpBqB,cAAekC,EACf1C,SAAUuE,EACV5B,KAAMA,EACN2B,QAASA,EACT5K,QAAS8E,GAGf,IACO4F,EAAiBK,KAAKpE,GAAsBqE,QAAO,SAAUC,EAAKC,GAEvE,OADAA,EAASN,QAAUK,EAAIxF,KAAKf,MAAMuG,EAAKC,EAASlL,SAAWiL,EAAIxF,KAAKyF,EAASlL,SACtEiL,CACT,GAAG,IAAIE,OAAOV,EAChB,EA8BIW,EAAa,SAAoB9J,EAAMyD,GAEzC,GADAA,EAAUA,GAAW,CAAC,GACjBzD,EACH,MAAM,IAAI+E,MAAM,oBAElB,OAA8C,IAA1CjD,EAAQO,KAAKrC,EAAM0B,IAGhBmG,EAA+BpE,EAASzD,EACjD,EACI+J,EAA4CtI,EAAmBoI,OAAO,UAAUlI,KAAK,KACrFqI,EAAc,SAAqBhK,EAAMyD,GAE3C,GADAA,EAAUA,GAAW,CAAC,GACjBzD,EACH,MAAM,IAAI+E,MAAM,oBAElB,OAAuD,IAAnDjD,EAAQO,KAAKrC,EAAM+J,IAGhBhE,EAAgCtC,EAASzD,EAClD,ECjjBA,SAASiK,EAAQC,EAAQC,GACvB,IAAIC,EAAOnR,OAAOmR,KAAKF,GACvB,GAAIjR,OAAOoR,sBAAuB,CAChC,IAAIC,EAAUrR,OAAOoR,sBAAsBH,GAC3CC,IAAmBG,EAAUA,EAAQtH,QAAO,SAAUuH,GACpD,OAAOtR,OAAOuR,yBAAyBN,EAAQK,GAAKE,UACtD,KAAKL,EAAKjG,KAAKf,MAAMgH,EAAME,EAC7B,CACA,OAAOF,CACT,CACA,SAASM,EAAerJ,GACtB,IAAK,IAAIqG,EAAI,EAAGA,EAAIiD,UAAU/G,OAAQ8D,IAAK,CACzC,IAAIkD,EAAS,MAAQD,UAAUjD,GAAKiD,UAAUjD,GAAK,CAAC,EACpDA,EAAI,EAAIuC,EAAQhR,OAAO2R,IAAS,GAAIvB,SAAQ,SAAU9H,GACpDsJ,EAAgBxJ,EAAQE,EAAKqJ,EAAOrJ,GACtC,IAAKtI,OAAO6R,0BAA4B7R,OAAO8R,iBAAiB1J,EAAQpI,OAAO6R,0BAA0BF,IAAWX,EAAQhR,OAAO2R,IAASvB,SAAQ,SAAU9H,GAC5JtI,OAAO+R,eAAe3J,EAAQE,EAAKtI,OAAOuR,yBAAyBI,EAAQrJ,GAC7E,GACF,CACA,OAAOF,CACT,CACA,SAASwJ,EAAgBI,EAAK1J,EAAKhF,GAYjC,OAXAgF,EAuBF,SAAwB2J,GACtB,IAAI3J,EAXN,SAAsB4J,EAAOC,GAC3B,GAAqB,iBAAVD,GAAgC,OAAVA,EAAgB,OAAOA,EACxD,IAAIE,EAAOF,EAAMG,OAAOC,aACxB,QAAazN,IAATuN,EAAoB,CACtB,IAAIG,EAAMH,EAAKhJ,KAAK8I,EAAOC,UAC3B,GAAmB,iBAARI,EAAkB,OAAOA,EACpC,MAAM,IAAIC,UAAU,+CACtB,CACA,OAA4BC,OAAiBP,EAC/C,CAEYQ,CAAaT,GACvB,MAAsB,iBAAR3J,EAAmBA,EAAMmK,OAAOnK,EAChD,CA1BQqK,CAAerK,MACV0J,EACThS,OAAO+R,eAAeC,EAAK1J,EAAK,CAC9BhF,MAAOA,EACPkO,YAAY,EACZoB,cAAc,EACdC,UAAU,IAGZb,EAAI1J,GAAOhF,EAEN0O,CACT,CAgBA,IAiCIc,EAAa,SAAoBC,GACnC,MAAyD,SAAjDA,aAA6B,EAASA,EAAEzK,MAAwE,KAArDyK,aAA6B,EAASA,EAAEC,QAC7G,EAGIC,EAAe,SAAsBF,GACvC,OAAOD,EAAWC,KAAOA,EAAEG,QAC7B,EAGIC,EAAgB,SAAuBJ,GACzC,OAAOD,EAAWC,IAAMA,EAAEG,QAC5B,EACIE,EAAQ,SAAeC,GACzB,OAAOC,WAAWD,EAAI,EACxB,EAIIE,EAAY,SAAmBC,EAAKH,GACtC,IAAII,GAAO,EAUX,OATAD,EAAIjN,OAAM,SAAUjD,EAAOmL,GACzB,OAAI4E,EAAG/P,KACLmQ,EAAMhF,GACC,EAIX,IAEOgF,CACT,EASIC,EAAiB,SAAwBpQ,GAC3C,IAAK,IAAIqQ,EAAOjC,UAAU/G,OAAQiJ,EAAS,IAAI3J,MAAM0J,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpGD,EAAOC,EAAO,GAAKnC,UAAUmC,GAE/B,MAAwB,mBAAVvQ,EAAuBA,EAAM6G,WAAM,EAAQyJ,GAAUtQ,CACrE,EACIwQ,EAAkB,SAAyB/O,GAQ7C,OAAOA,EAAMqD,OAAOiD,YAA4C,mBAAvBtG,EAAMgP,aAA8BhP,EAAMgP,eAAe,GAAKhP,EAAMqD,MAC/G,EAII4L,EAAoB,GACpBC,EAAkB,SAAyB1J,EAAU2J,GAGvD,IA+CIC,EA/CAC,GAAOF,aAAiD,EAASA,EAAYvR,WAAaA,SAC1F0R,GAAaH,aAAiD,EAASA,EAAYG,YAAcL,EACjGM,EAAS7C,EAAe,CAC1B3L,yBAAyB,EACzByO,mBAAmB,EACnBC,mBAAmB,EACnBvB,aAAcA,EACdE,cAAeA,GACde,GACCO,EAAQ,CAGVvO,WAAY,GAiBZwO,gBAAiB,GAOjBC,eAAgB,GAChBC,4BAA6B,KAC7BC,wBAAyB,KACzBjP,QAAQ,EACRkP,QAAQ,EAGRC,4BAAwBlQ,EAExBmQ,oBAAgBnQ,GAYdoQ,EAAY,SAAmBC,EAAuBC,EAAYC,GACpE,OAAOF,QAA+DrQ,IAAtCqQ,EAAsBC,GAA4BD,EAAsBC,GAAcb,EAAOc,GAAoBD,EACnJ,EAYIE,EAAqB,SAA4BnM,EAASnE,GAC5D,IAAIgP,EAA6F,mBAAtEhP,aAAqC,EAASA,EAAMgP,cAA+BhP,EAAMgP,oBAAiBlP,EAIrI,OAAO4P,EAAMC,gBAAgBnB,WAAU,SAAUrG,GAC/C,IAAI1G,EAAY0G,EAAK1G,UACnB8O,EAAgBpI,EAAKoI,cACvB,OAAO9O,EAAU2B,SAASe,KAI1B6K,aAAmD,EAASA,EAAa3I,SAAS5E,KAAe8O,EAAcC,MAAK,SAAUxO,GAC5H,OAAOA,IAASmC,CAClB,GACF,GACF,EAeIsM,EAAmB,SAA0BL,GAC/C,IAAIM,EAAcnB,EAAOa,GACzB,GAA2B,mBAAhBM,EAA4B,CACrC,IAAK,IAAIC,EAAQhE,UAAU/G,OAAQiJ,EAAS,IAAI3J,MAAMyL,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC1G/B,EAAO+B,EAAQ,GAAKjE,UAAUiE,GAEhCF,EAAcA,EAAYtL,WAAM,EAAQyJ,EAC1C,CAKA,IAJoB,IAAhB6B,IACFA,OAAc5Q,IAGX4Q,EAAa,CAChB,QAAoB5Q,IAAhB4Q,IAA6C,IAAhBA,EAC/B,OAAOA,EAIT,MAAM,IAAI3J,MAAM,IAAI8E,OAAOuE,EAAY,gEACzC,CACA,IAAIpO,EAAO0O,EAEX,GAA2B,iBAAhBA,KACT1O,EAAOqN,EAAIwB,cAAcH,IAEvB,MAAM,IAAI3J,MAAM,IAAI8E,OAAOuE,EAAY,0CAG3C,OAAOpO,CACT,EACI8O,EAAsB,WACxB,IAAI9O,EAAOyO,EAAiB,gBAG5B,IAAa,IAATzO,EACF,OAAO,EAET,QAAalC,IAATkC,IAAuBgK,EAAYhK,EAAMuN,EAAO1N,iBAElD,GAAIyO,EAAmBjB,EAAIpN,gBAAkB,EAC3CD,EAAOqN,EAAIpN,kBACN,CACL,IAAI8O,EAAqBrB,EAAME,eAAe,GAI9C5N,EAHwB+O,GAAsBA,EAAmBC,mBAGrCP,EAAiB,gBAC/C,CAEF,IAAKzO,EACH,MAAM,IAAI+E,MAAM,gEAElB,OAAO/E,CACT,EACIiP,EAAsB,WA4ExB,GA3EAvB,EAAMC,gBAAkBD,EAAMvO,WAAW+P,KAAI,SAAUzP,GACrD,IAAI8O,EDgNK,SAAkB9O,EAAWgE,GAE1C,IAAIR,EAWJ,OATEA,GAHFQ,EAAUA,GAAW,CAAC,GAEVc,cACGhB,EAAyB,CAAC9D,GAAYgE,EAAQV,iBAAkB,CAC3EC,OAAQ6E,EAA+BsH,KAAK,KAAM1L,GAClDS,SAAS,EACTK,cAAed,EAAQc,cACvBE,iBAAkBuE,IAGPnG,EAAcpD,EAAWgE,EAAQV,iBAAkB8E,EAA+BsH,KAAK,KAAM1L,IAErGyF,EAAYjG,EACrB,CC9N0BmM,CAAS3P,EAAW8N,EAAO1N,iBAK3CwP,ED0NM,SAAmB5P,EAAWgE,GAY5C,OAXAA,EAAUA,GAAW,CAAC,GAEVc,cACGhB,EAAyB,CAAC9D,GAAYgE,EAAQV,iBAAkB,CAC3EC,OAAQ+C,EAAgCoJ,KAAK,KAAM1L,GACnDS,SAAS,EACTK,cAAed,EAAQc,gBAGZ1B,EAAcpD,EAAWgE,EAAQV,iBAAkBgD,EAAgCoJ,KAAK,KAAM1L,GAG/G,CCvO2B6L,CAAU7P,EAAW8N,EAAO1N,iBAC7CmP,EAAoBT,EAAc3K,OAAS,EAAI2K,EAAc,QAAKzQ,EAClEyR,EAAmBhB,EAAc3K,OAAS,EAAI2K,EAAcA,EAAc3K,OAAS,QAAK9F,EACxF0R,EAAuBH,EAAeb,MAAK,SAAUxO,GACvD,OAAO8J,EAAW9J,EACpB,IACIyP,EAAsBJ,EAAelM,QAAQuM,UAAUlB,MAAK,SAAUxO,GACxE,OAAO8J,EAAW9J,EACpB,IACI2P,IAAuBpB,EAAcC,MAAK,SAAUxO,GACtD,OAAO8E,EAAY9E,GAAQ,CAC7B,IACA,MAAO,CACLP,UAAWA,EACX8O,cAAeA,EACfc,eAAgBA,EAEhBM,mBAAoBA,EAEpBX,kBAAmBA,EAEnBO,iBAAkBA,EASlBC,qBAAsBA,EAEtBC,oBAAqBA,EASrBG,iBAAkB,SAA0B5P,GAC1C,IAAI6P,IAAUlF,UAAU/G,OAAS,QAAsB9F,IAAjB6M,UAAU,KAAmBA,UAAU,GACzEmF,EAAUvB,EAAcwB,QAAQ/P,GACpC,OAAI8P,EAAU,EAORD,EACKR,EAAelM,MAAMkM,EAAeU,QAAQ/P,GAAQ,GAAGwO,MAAK,SAAU1L,GAC3E,OAAOgH,EAAWhH,EACpB,IAEKuM,EAAelM,MAAM,EAAGkM,EAAeU,QAAQ/P,IAAO0P,UAAUlB,MAAK,SAAU1L,GACpF,OAAOgH,EAAWhH,EACpB,IAEKyL,EAAcuB,GAAWD,EAAU,GAAK,GACjD,EAEJ,IACAnC,EAAME,eAAiBF,EAAMC,gBAAgB3K,QAAO,SAAUgN,GAC5D,OAAOA,EAAMzB,cAAc3K,OAAS,CACtC,IAGI8J,EAAME,eAAehK,QAAU,IAAM6K,EAAiB,iBAExD,MAAM,IAAI1J,MAAM,uGAUlB,GAAI2I,EAAMC,gBAAgBa,MAAK,SAAUyB,GACvC,OAAOA,EAAEN,kBACX,KAAMjC,EAAMC,gBAAgB/J,OAAS,EACnC,MAAM,IAAImB,MAAM,gLAEpB,EACImL,EAAW,SAASA,EAASlQ,IAClB,IAATA,GAGAA,IAASqN,EAAIpN,gBAGZD,GAASA,EAAKmQ,OAInBnQ,EAAKmQ,MAAM,CACTC,gBAAiB7C,EAAO6C,gBAG1B1C,EAAMI,wBAA0B9N,EA9UZ,SAA2BA,GACjD,OAAOA,EAAK8D,SAA0C,UAA/B9D,EAAK8D,QAAQuM,eAAoD,mBAAhBrQ,EAAKsQ,MAC/E,CA6UQC,CAAkBvQ,IACpBA,EAAKsQ,UATLJ,EAASpB,KAWb,EACI0B,EAAqB,SAA4BC,GACnD,IAAIzQ,EAAOyO,EAAiB,iBAAkBgC,GAC9C,OAAOzQ,IAAuB,IAATA,GAAyByQ,CAChD,EAaIC,EAAkB,SAAyBC,GAC7C,IAAItP,EAASsP,EAAMtP,OACjBrD,EAAQ2S,EAAM3S,MACd4S,EAAmBD,EAAME,WACzBA,OAAkC,IAArBD,GAAsCA,EACrDvP,EAASA,GAAU0L,EAAgB/O,GACnCiR,IACA,IAAI6B,EAAkB,KACtB,GAAIpD,EAAME,eAAehK,OAAS,EAAG,CAInC,IAAImN,EAAiBzC,EAAmBjN,EAAQrD,GAC5CgT,EAAiBD,GAAkB,EAAIrD,EAAMC,gBAAgBoD,QAAkBjT,EACnF,GAAIiT,EAAiB,EAKjBD,EAFED,EAEgBnD,EAAME,eAAeF,EAAME,eAAehK,OAAS,GAAG2L,iBAGtD7B,EAAME,eAAe,GAAGoB,uBAEvC,GAAI6B,EAAY,CAIrB,IAAII,EAAoBzE,EAAUkB,EAAME,gBAAgB,SAAUsD,GAChE,IAAIlC,EAAoBkC,EAAMlC,kBAC9B,OAAO3N,IAAW2N,CACpB,IAUA,GATIiC,EAAoB,IAAMD,EAAevR,YAAc4B,GAAU2I,EAAY3I,EAAQkM,EAAO1N,mBAAqBiK,EAAWzI,EAAQkM,EAAO1N,mBAAqBmR,EAAepB,iBAAiBvO,GAAQ,MAO1M4P,EAAoBF,GAElBE,GAAqB,EAAG,CAI1B,IAAIE,EAA8C,IAAtBF,EAA0BvD,EAAME,eAAehK,OAAS,EAAIqN,EAAoB,EACxGG,EAAmB1D,EAAME,eAAeuD,GAC5CL,EAAkBhM,EAAYzD,IAAW,EAAI+P,EAAiB7B,iBAAmB6B,EAAiB3B,mBACpG,MAAY1D,EAAW/N,KAGrB8S,EAAkBE,EAAepB,iBAAiBvO,GAAQ,GAE9D,KAAO,CAIL,IAAIgQ,EAAmB7E,EAAUkB,EAAME,gBAAgB,SAAU0D,GAC/D,IAAI/B,EAAmB+B,EAAM/B,iBAC7B,OAAOlO,IAAWkO,CACpB,IAUA,GATI8B,EAAmB,IAAML,EAAevR,YAAc4B,GAAU2I,EAAY3I,EAAQkM,EAAO1N,mBAAqBiK,EAAWzI,EAAQkM,EAAO1N,mBAAqBmR,EAAepB,iBAAiBvO,MAOjMgQ,EAAmBN,GAEjBM,GAAoB,EAAG,CAIzB,IAAIE,EAAyBF,IAAqB3D,EAAME,eAAehK,OAAS,EAAI,EAAIyN,EAAmB,EACvGG,EAAoB9D,EAAME,eAAe2D,GAC7CT,EAAkBhM,EAAYzD,IAAW,EAAImQ,EAAkBxC,kBAAoBwC,EAAkBhC,oBACvG,MAAYzD,EAAW/N,KAGrB8S,EAAkBE,EAAepB,iBAAiBvO,GAEtD,CACF,MAGEyP,EAAkBrC,EAAiB,iBAErC,OAAOqC,CACT,EAIIW,EAAmB,SAA0BzF,GAC/C,IAAI3K,EAAS0L,EAAgBf,GACzBsC,EAAmBjN,EAAQ2K,IAAM,IAIjCW,EAAeY,EAAOvO,wBAAyBgN,GAEjDoB,EAAKsE,WAAW,CAOdC,YAAapE,EAAOxO,0BAQpB4N,EAAeY,EAAOqE,kBAAmB5F,IAM7CA,EAAE6F,iBACJ,EAMIC,EAAe,SAAsB9T,GACvC,IAAIqD,EAAS0L,EAAgB/O,GACzB+T,EAAkBzD,EAAmBjN,EAAQrD,IAAU,EAG3D,GAAI+T,GAAmB1Q,aAAkB2Q,SACnCD,IACFrE,EAAMI,wBAA0BzM,OAE7B,CAOL,IAAI4Q,EALJjU,EAAMkU,2BAMN,IAAIC,GAAsB,EAC1B,GAAIzE,EAAMI,wBACR,GAAIhJ,EAAY4I,EAAMI,yBAA2B,EAAG,CAElD,IAAIsE,EAAkB9D,EAAmBZ,EAAMI,yBAK3CS,EAAgBb,EAAMC,gBAAgByE,GAAiB7D,cAC3D,GAAIA,EAAc3K,OAAS,EAAG,CAE5B,IAAIyO,EAAY9D,EAAc/B,WAAU,SAAUxM,GAChD,OAAOA,IAAS0N,EAAMI,uBACxB,IACIuE,GAAa,IACX9E,EAAOrB,aAAawB,EAAMO,gBACxBoE,EAAY,EAAI9D,EAAc3K,SAChCqO,EAAW1D,EAAc8D,EAAY,GACrCF,GAAsB,GAKpBE,EAAY,GAAK,IACnBJ,EAAW1D,EAAc8D,EAAY,GACrCF,GAAsB,GAO9B,CAKF,MAKOzE,EAAMC,gBAAgBpG,MAAK,SAAU0I,GACxC,OAAOA,EAAE1B,cAAchH,MAAK,SAAU+K,GACpC,OAAOxN,EAAYwN,GAAK,CAC1B,GACF,MAIEH,GAAsB,QAQ1BA,GAAsB,EAEpBA,IACFF,EAAWvB,EAAgB,CAGzBrP,OAAQqM,EAAMI,wBACd+C,WAAYtD,EAAOnB,cAAcsB,EAAMO,mBAIzCiC,EADE+B,GAGOvE,EAAMI,yBAA2BgB,IAE9C,CACApB,EAAMO,oBAAiBnQ,CACzB,EA0BIyU,EAAW,SAAkBvU,GAC/B,IAxlBuD,YAAjDgO,OADiCA,EAylBrBhO,QAxlBiB,EAASgO,EAAEzK,MAAuE,SAAjDyK,aAA6B,EAASA,EAAEzK,MAAwE,MAArDyK,aAA6B,EAASA,EAAEC,YAwlBvF,IAApDU,EAAeY,EAAOC,kBAAmBxP,GAGnE,OAFAA,EAAM6T,sBACNzE,EAAKsE,aA3lBS,IAAuB1F,GA8lBnCuB,EAAOrB,aAAalO,IAAUuP,EAAOnB,cAAcpO,KA1BvC,SAAqBA,GACrC,IAAI6S,EAAalG,UAAU/G,OAAS,QAAsB9F,IAAjB6M,UAAU,IAAmBA,UAAU,GAChF+C,EAAMO,eAAiBjQ,EACvB,IAAI8S,EAAkBJ,EAAgB,CACpC1S,MAAOA,EACP6S,WAAYA,IAEVC,IACE/E,EAAW/N,IAKbA,EAAM6T,iBAER3B,EAASY,GAGb,CASI0B,CAAYxU,EAAOuP,EAAOnB,cAAcpO,GAE5C,EACIyU,EAAa,SAAoBzG,GACnC,IAAI3K,EAAS0L,EAAgBf,GACzBsC,EAAmBjN,EAAQ2K,IAAM,GAGjCW,EAAeY,EAAOvO,wBAAyBgN,IAG/CW,EAAeY,EAAOqE,kBAAmB5F,KAG7CA,EAAE6F,iBACF7F,EAAEkG,2BACJ,EAMIQ,EAAe,WACjB,GAAKhF,EAAM7O,OA6BX,OAhrBY,SAAsByO,EAAWF,GAC7C,GAAIE,EAAU1J,OAAS,EAAG,CACxB,IAAI+O,EAAarF,EAAUA,EAAU1J,OAAS,GAC1C+O,IAAevF,GACjBuF,EAAWC,OAEf,CACA,IAAIC,EAAYvF,EAAUyC,QAAQ3C,IACf,IAAfyF,GAIFvF,EAAUwF,OAAOD,EAAW,GAH5BvF,EAAUnJ,KAAKiJ,EAMnB,CAyoBE2F,CAA8BzF,EAAWF,GAIzCM,EAAMM,uBAAyBT,EAAOE,kBAAoBpB,GAAM,WAC9D6D,EAASpB,IACX,IAAKoB,EAASpB,KACdzB,EAAI2F,iBAAiB,UAAWlB,GAAc,GAC9CzE,EAAI2F,iBAAiB,YAAavB,EAAkB,CAClDwB,SAAS,EACTC,SAAS,IAEX7F,EAAI2F,iBAAiB,aAAcvB,EAAkB,CACnDwB,SAAS,EACTC,SAAS,IAEX7F,EAAI2F,iBAAiB,QAASP,EAAY,CACxCQ,SAAS,EACTC,SAAS,IAEX7F,EAAI2F,iBAAiB,UAAWT,EAAU,CACxCU,SAAS,EACTC,SAAS,IAEJ9F,CACT,EACI+F,EAAkB,WACpB,GAAKzF,EAAM7O,OAQX,OALAwO,EAAI+F,oBAAoB,UAAWtB,GAAc,GACjDzE,EAAI+F,oBAAoB,YAAa3B,GAAkB,GACvDpE,EAAI+F,oBAAoB,aAAc3B,GAAkB,GACxDpE,EAAI+F,oBAAoB,QAASX,GAAY,GAC7CpF,EAAI+F,oBAAoB,UAAWb,GAAU,GACtCnF,CACT,EAuBIiG,EAAqC,oBAAXjL,QAA0B,qBAAsBA,OAAS,IAAIkL,kBAjBrE,SAAyBC,GAClBA,EAAUhM,MAAK,SAAUiM,GAElD,OADmBtQ,MAAMS,KAAK6P,EAASC,cACnBlM,MAAK,SAAUvH,GACjC,OAAOA,IAAS0N,EAAMI,uBACxB,GACF,KAKEoC,EAASpB,IAEb,SAI+HhR,EAC3H4V,EAAsB,WACnBL,IAGLA,EAAiBM,aACbjG,EAAM7O,SAAW6O,EAAMK,QACzBL,EAAMvO,WAAW+P,KAAI,SAAUzP,GAC7B4T,EAAiBO,QAAQnU,EAAW,CAClCoU,SAAS,EACTC,WAAW,GAEf,IAEJ,EAwHA,OAlHA1G,EAAO,CACDvO,aACF,OAAO6O,EAAM7O,MACf,EACIkP,aACF,OAAOL,EAAMK,MACf,EACAgG,SAAU,SAAkBC,GAC1B,GAAItG,EAAM7O,OACR,OAAOoV,KAET,IAAIC,EAAahG,EAAU8F,EAAiB,cACxCG,EAAiBjG,EAAU8F,EAAiB,kBAC5C9U,EAAoBgP,EAAU8F,EAAiB,qBAC9C9U,GACH+P,IAEFvB,EAAM7O,QAAS,EACf6O,EAAMK,QAAS,EACfL,EAAMG,4BAA8BR,EAAIpN,cACxCiU,SAAwDA,IACxD,IAAIE,EAAmB,WACjBlV,GACF+P,IAEFyD,IACAgB,IACAS,SAAgEA,GAClE,EACA,OAAIjV,GACFA,EAAkBwO,EAAMvO,WAAW0K,UAAUwK,KAAKD,EAAkBA,GAC7DH,OAETG,IACOH,KACT,EACAvC,WAAY,SAAoB4C,GAC9B,IAAK5G,EAAM7O,OACT,OAAOoV,KAET,IAAIxQ,EAAUiH,EAAe,CAC3B6J,aAAchH,EAAOgH,aACrBC,iBAAkBjH,EAAOiH,iBACzBC,oBAAqBlH,EAAOkH,qBAC3BH,GACHI,aAAahH,EAAMM,wBACnBN,EAAMM,4BAAyBlQ,EAC/BqV,IACAzF,EAAM7O,QAAS,EACf6O,EAAMK,QAAS,EACf2F,IAzwBY,SAAwBpG,EAAWF,GACjD,IAAIyF,EAAYvF,EAAUyC,QAAQ3C,IACf,IAAfyF,GACFvF,EAAUwF,OAAOD,EAAW,GAE1BvF,EAAU1J,OAAS,GACrB0J,EAAUA,EAAU1J,OAAS,GAAG+Q,SAEpC,CAkwBI5B,CAAgCzF,EAAWF,GAC3C,IAAImH,EAAerG,EAAUzK,EAAS,gBAClC+Q,EAAmBtG,EAAUzK,EAAS,oBACtCgR,EAAsBvG,EAAUzK,EAAS,uBACzCkO,EAAczD,EAAUzK,EAAS,cAAe,2BACpD8Q,SAA4DA,IAC5D,IAAIK,EAAqB,WACvBvI,GAAM,WACAsF,GACFzB,EAASM,EAAmB9C,EAAMG,8BAEpC2G,SAAoEA,GACtE,GACF,EACA,OAAI7C,GAAe8C,GACjBA,EAAoBjE,EAAmB9C,EAAMG,8BAA8BwG,KAAKO,EAAoBA,GAC7FX,OAETW,IACOX,KACT,EACArB,MAAO,SAAeiC,GACpB,GAAInH,EAAMK,SAAWL,EAAM7O,OACzB,OAAOoV,KAET,IAAIa,EAAU5G,EAAU2G,EAAc,WAClCE,EAAc7G,EAAU2G,EAAc,eAM1C,OALAnH,EAAMK,QAAS,EACf+G,SAAkDA,IAClD3B,IACAO,IACAqB,SAA0DA,IACnDd,IACT,EACAU,QAAS,SAAiBK,GACxB,IAAKtH,EAAMK,SAAWL,EAAM7O,OAC1B,OAAOoV,KAET,IAAIgB,EAAY/G,EAAU8G,EAAgB,aACtCE,EAAgBhH,EAAU8G,EAAgB,iBAO9C,OANAtH,EAAMK,QAAS,EACfkH,SAAsDA,IACtDhG,IACAyD,IACAgB,IACAwB,SAA8DA,IACvDjB,IACT,EACAkB,wBAAyB,SAAiCC,GACxD,IAAIC,EAAkB,GAAGxL,OAAOuL,GAAmBpS,OAAOrF,SAQ1D,OAPA+P,EAAMvO,WAAakW,EAAgBnG,KAAI,SAAU/M,GAC/C,MAA0B,iBAAZA,EAAuBkL,EAAIwB,cAAc1M,GAAWA,CACpE,IACIuL,EAAM7O,QACRoQ,IAEFyE,IACOO,IACT,IAIGkB,wBAAwB3R,GACtB4J,CACT,sBC/4BO,MAAMzO,GAAY,IAAA2W,aAAW,SAAmBzc,EAAI0c,GACvD,IAAI,OAAE1W,GAAS,EAAI,OAAEkP,GAAS,EAAK,iBAAEjP,EAAmB,CAAC,EAAC,0BAAEoB,GAA4B,GAAUrH,EAAIG,GAAQ,QAAOH,EAAI,CAAC,SAAU,SAAU,mBAAoB,8BAElK,MAAM+F,GAAM,IAAA4W,QAAO,OACnB,IAAAC,qBAAoBF,GAAc,IAAM3W,EAAI8W,UAE5C,MAAMC,GAAe,IAAAH,QAAO,OAC5B,IAAAI,YAAU,KACN,MAAMC,EAAY3I,EAAgBtO,EAAI8W,QAASzc,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG4F,GAAmB,CAAEC,yBAAyB,KAG7H,OAFA4W,EAAaD,QAAUG,EAEhB,KACHA,EAAUnE,YAAY,CACzB,GACF,KAEH,IAAAkE,YAAU,KACN,MAAMC,EAAYF,EAAaD,QAC/B7W,EAASgX,SAAsDA,EAAU9B,WAAa8B,SAAsDA,EAAUnE,YAAY,GACnK,CAAC7S,KAEJ,IAAA+W,YAAU,KACN,MAAMC,EAAYF,EAAaD,QAC/B3H,EAAS8H,SAAsDA,EAAUjD,QAAUiD,SAAsDA,EAAUlB,SAAS,GAC7J,CAAC5G,IAEJ,MAAM+H,GAAqB,IAAAN,QAA2B,oBAAb5Z,SAA2BA,SAASqE,cAAgB,MAS7F,OCnCG,SAA0B8V,GAE7B,MAAMC,GAAY,IAAAR,QAAOO,GACzBC,EAAUN,QAAUK,GAEpB,IAAAH,YAAU,IAAM,KACZI,EAAUN,SAAS,GACpB,GACP,CDoBIO,EAAiB,MACoC,IAA7CnX,EAAiBC,yBAAqC+W,EAAmBJ,mBAAmBQ,aAC5FJ,EAAmBJ,QAAQvF,MAAM,CAC7BC,cAAelQ,GAEvB,IAEG,kBAAoB,MAAOjH,OAAOC,OAAO,CAAE0F,IAAKA,GAAO5F,GAClE,IACA2F,EAAUxF,YAAc,+CEvCjB,MAWP,GAFyB,cATM,CAC7B4O,KAAM,YACNjC,OAAQ,IACRD,MAAO,IACPsQ,QAAS,kaACTC,QAAS,EACTC,QAAS","sources":["webpack:///./node_modules/@patternfly/react-styles/css/components/Popover/popover.mjs","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Popover/PopoverContext.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Popover/PopoverContent.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Popover/PopoverBody.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Popover/PopoverHeaderIcon.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Popover/PopoverHeaderText.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Popover/PopoverHeader.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Popover/PopoverFooter.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Popover/PopoverCloseButton.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Popover/PopoverArrow.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/c_popover_MaxWidth.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/c_popover_MinWidth.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Popover/Popover.js","webpack:///./node_modules/tabbable/dist/index.esm.js","webpack:///./node_modules/focus-trap/dist/focus-trap.esm.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/FocusTrap/FocusTrap.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/useUnmountEffect.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/times-icon.js"],"sourcesContent":["import './popover.css';\nexport default {\n  \"modifiers\": {\n    \"noPadding\": \"pf-m-no-padding\",\n    \"widthAuto\": \"pf-m-width-auto\",\n    \"top\": \"pf-m-top\",\n    \"topLeft\": \"pf-m-top-left\",\n    \"topRight\": \"pf-m-top-right\",\n    \"bottom\": \"pf-m-bottom\",\n    \"bottomLeft\": \"pf-m-bottom-left\",\n    \"bottomRight\": \"pf-m-bottom-right\",\n    \"left\": \"pf-m-left\",\n    \"leftTop\": \"pf-m-left-top\",\n    \"leftBottom\": \"pf-m-left-bottom\",\n    \"right\": \"pf-m-right\",\n    \"rightTop\": \"pf-m-right-top\",\n    \"rightBottom\": \"pf-m-right-bottom\",\n    \"danger\": \"pf-m-danger\",\n    \"warning\": \"pf-m-warning\",\n    \"success\": \"pf-m-success\",\n    \"custom\": \"pf-m-custom\",\n    \"info\": \"pf-m-info\"\n  },\n  \"popover\": \"pf-v5-c-popover\",\n  \"popoverArrow\": \"pf-v5-c-popover__arrow\",\n  \"popoverBody\": \"pf-v5-c-popover__body\",\n  \"popoverClose\": \"pf-v5-c-popover__close\",\n  \"popoverContent\": \"pf-v5-c-popover__content\",\n  \"popoverFooter\": \"pf-v5-c-popover__footer\",\n  \"popoverHeader\": \"pf-v5-c-popover__header\",\n  \"popoverTitle\": \"pf-v5-c-popover__title\",\n  \"popoverTitleIcon\": \"pf-v5-c-popover__title-icon\",\n  \"popoverTitleText\": \"pf-v5-c-popover__title-text\",\n  \"themeDark\": \"pf-v5-theme-dark\"\n};","import * as React from 'react';\nexport const PopoverContext = React.createContext({});\n//# sourceMappingURL=PopoverContext.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { css } from '@patternfly/react-styles';\nexport const PopoverContent = (_a) => {\n    var { className = null, children } = _a, props = __rest(_a, [\"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.popoverContent, className) }, props), children));\n};\nPopoverContent.displayName = 'PopoverContent';\n//# sourceMappingURL=PopoverContent.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { css } from '@patternfly/react-styles';\nexport const PopoverBody = (_a) => {\n    var { children, id, className } = _a, props = __rest(_a, [\"children\", \"id\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.popoverBody, className), id: id }, props), children));\n};\nPopoverBody.displayName = 'PopoverBody';\n//# sourceMappingURL=PopoverBody.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nexport const PopoverHeaderIcon = (_a) => {\n    var { children, className } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"span\", Object.assign({ className: css(styles.popoverTitleIcon, className) }, props), children));\n};\nPopoverHeaderIcon.displayName = 'PopoverHeaderIcon';\n//# sourceMappingURL=PopoverHeaderIcon.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nexport const PopoverHeaderText = (_a) => {\n    var { children, className, headingLevel } = _a, props = __rest(_a, [\"children\", \"className\", \"headingLevel\"]);\n    const HeadingLevel = headingLevel;\n    return (React.createElement(HeadingLevel, Object.assign({ className: css(styles.popoverTitleText, className) }, props), children));\n};\nPopoverHeaderText.displayName = 'PopoverHeaderText';\n//# sourceMappingURL=PopoverHeaderText.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { PopoverHeaderIcon } from './PopoverHeaderIcon';\nimport { PopoverHeaderText } from './PopoverHeaderText';\nexport const PopoverHeader = (_a) => {\n    var { children, icon, className, titleHeadingLevel = 'h6', alertSeverityVariant, id, alertSeverityScreenReaderText } = _a, props = __rest(_a, [\"children\", \"icon\", \"className\", \"titleHeadingLevel\", \"alertSeverityVariant\", \"id\", \"alertSeverityScreenReaderText\"]);\n    return (React.createElement(\"header\", Object.assign({ className: css(styles.popoverHeader, className) }, props),\n        React.createElement(\"div\", { className: css(styles.popoverTitle), id: id },\n            icon && React.createElement(PopoverHeaderIcon, null, icon),\n            React.createElement(PopoverHeaderText, { headingLevel: titleHeadingLevel },\n                alertSeverityVariant && alertSeverityScreenReaderText && (React.createElement(\"span\", { className: \"pf-v5-screen-reader\" }, alertSeverityScreenReaderText)),\n                children))));\n};\nPopoverHeader.displayName = 'PopoverHeader';\n//# sourceMappingURL=PopoverHeader.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { css } from '@patternfly/react-styles';\nexport const PopoverFooter = (_a) => {\n    var { children, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"footer\", Object.assign({ className: css(styles.popoverFooter, className) }, props), children));\n};\nPopoverFooter.displayName = 'PopoverFooter';\n//# sourceMappingURL=PopoverFooter.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { Button } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nexport const PopoverCloseButton = (_a) => {\n    var { onClose = () => undefined } = _a, props = __rest(_a, [\"onClose\"]);\n    return (React.createElement(\"div\", { className: css(styles.popoverClose) },\n        React.createElement(Button, Object.assign({ onClick: onClose, variant: \"plain\", \"aria-label\": true }, props, { style: { pointerEvents: 'auto' } }),\n            React.createElement(TimesIcon, null))));\n};\nPopoverCloseButton.displayName = 'PopoverCloseButton';\n//# sourceMappingURL=PopoverCloseButton.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { css } from '@patternfly/react-styles';\nexport const PopoverArrow = (_a) => {\n    var { className = '' } = _a, props = __rest(_a, [\"className\"]);\n    return React.createElement(\"div\", Object.assign({ className: css(styles.popoverArrow, className) }, props));\n};\nPopoverArrow.displayName = 'PopoverArrow';\n//# sourceMappingURL=PopoverArrow.js.map","export const c_popover_MaxWidth = {\n  \"name\": \"--pf-v5-c-popover--MaxWidth\",\n  \"value\": \"none\",\n  \"var\": \"var(--pf-v5-c-popover--MaxWidth)\"\n};\nexport default c_popover_MaxWidth;","export const c_popover_MinWidth = {\n  \"name\": \"--pf-v5-c-popover--MinWidth\",\n  \"value\": \"auto\",\n  \"var\": \"var(--pf-v5-c-popover--MinWidth)\"\n};\nexport default c_popover_MinWidth;","import { __rest } from \"tslib\";\n/* eslint-disable no-console */\nimport * as React from 'react';\nimport { KeyTypes } from '../../helpers/constants';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { css } from '@patternfly/react-styles';\nimport { PopoverContext } from './PopoverContext';\nimport { PopoverContent } from './PopoverContent';\nimport { PopoverBody } from './PopoverBody';\nimport { PopoverHeader } from './PopoverHeader';\nimport { PopoverFooter } from './PopoverFooter';\nimport { PopoverCloseButton } from './PopoverCloseButton';\nimport { PopoverArrow } from './PopoverArrow';\nimport popoverMaxWidth from '@patternfly/react-tokens/dist/esm/c_popover_MaxWidth';\nimport popoverMinWidth from '@patternfly/react-tokens/dist/esm/c_popover_MinWidth';\nimport { FocusTrap } from '../../helpers';\nimport { Popper } from '../../helpers/Popper/Popper';\nimport { getUniqueId } from '../../helpers/util';\nexport var PopoverPosition;\n(function (PopoverPosition) {\n    PopoverPosition[\"auto\"] = \"auto\";\n    PopoverPosition[\"top\"] = \"top\";\n    PopoverPosition[\"bottom\"] = \"bottom\";\n    PopoverPosition[\"left\"] = \"left\";\n    PopoverPosition[\"right\"] = \"right\";\n    PopoverPosition[\"topStart\"] = \"top-start\";\n    PopoverPosition[\"topEnd\"] = \"top-end\";\n    PopoverPosition[\"bottomStart\"] = \"bottom-start\";\n    PopoverPosition[\"bottomEnd\"] = \"bottom-end\";\n    PopoverPosition[\"leftStart\"] = \"left-start\";\n    PopoverPosition[\"leftEnd\"] = \"left-end\";\n    PopoverPosition[\"rightStart\"] = \"right-start\";\n    PopoverPosition[\"rightEnd\"] = \"right-end\";\n})(PopoverPosition || (PopoverPosition = {}));\nconst alertStyle = {\n    custom: styles.modifiers.custom,\n    info: styles.modifiers.info,\n    success: styles.modifiers.success,\n    warning: styles.modifiers.warning,\n    danger: styles.modifiers.danger\n};\nexport const Popover = (_a) => {\n    var { children, position = 'top', enableFlip = true, className = '', isVisible = null, shouldClose = () => null, shouldOpen = () => null, 'aria-label': ariaLabel = '', bodyContent, headerContent = null, headerComponent = 'h6', headerIcon = null, alertSeverityVariant, alertSeverityScreenReaderText, footerContent = null, appendTo = () => document.body, hideOnOutsideClick = true, onHide = () => null, onHidden = () => null, onShow = () => null, onShown = () => null, onMount = () => null, zIndex = 9999, triggerAction = 'click', minWidth = popoverMinWidth && popoverMinWidth.value, maxWidth = popoverMaxWidth && popoverMaxWidth.value, closeBtnAriaLabel = 'Close', showClose = true, distance = 25, flipBehavior = [\n        'top',\n        'bottom',\n        'left',\n        'right',\n        'top-start',\n        'top-end',\n        'bottom-start',\n        'bottom-end',\n        'left-start',\n        'left-end',\n        'right-start',\n        'right-end'\n    ], animationDuration = 300, id, withFocusTrap: propWithFocusTrap, triggerRef, hasNoPadding = false, hasAutoWidth = false, elementToFocus } = _a, rest = __rest(_a, [\"children\", \"position\", \"enableFlip\", \"className\", \"isVisible\", \"shouldClose\", \"shouldOpen\", 'aria-label', \"bodyContent\", \"headerContent\", \"headerComponent\", \"headerIcon\", \"alertSeverityVariant\", \"alertSeverityScreenReaderText\", \"footerContent\", \"appendTo\", \"hideOnOutsideClick\", \"onHide\", \"onHidden\", \"onShow\", \"onShown\", \"onMount\", \"zIndex\", \"triggerAction\", \"minWidth\", \"maxWidth\", \"closeBtnAriaLabel\", \"showClose\", \"distance\", \"flipBehavior\", \"animationDuration\", \"id\", \"withFocusTrap\", \"triggerRef\", \"hasNoPadding\", \"hasAutoWidth\", \"elementToFocus\"]);\n    // could make this a prop in the future (true | false | 'toggle')\n    // const hideOnClick = true;\n    const uniqueId = id || getUniqueId();\n    const triggerManually = isVisible !== null;\n    const [visible, setVisible] = React.useState(false);\n    const [focusTrapActive, setFocusTrapActive] = React.useState(Boolean(propWithFocusTrap));\n    const popoverRef = React.useRef(null);\n    React.useEffect(() => {\n        onMount();\n    }, []);\n    React.useEffect(() => {\n        if (triggerManually) {\n            if (isVisible) {\n                show(undefined, true);\n            }\n            else {\n                hide();\n            }\n        }\n    }, [isVisible, triggerManually]);\n    const show = (event, withFocusTrap) => {\n        event && onShow(event);\n        setVisible(true);\n        propWithFocusTrap !== false && withFocusTrap && setFocusTrapActive(true);\n    };\n    const hide = (event) => {\n        event && onHide(event);\n        setVisible(false);\n    };\n    const positionModifiers = {\n        top: styles.modifiers.top,\n        bottom: styles.modifiers.bottom,\n        left: styles.modifiers.left,\n        right: styles.modifiers.right,\n        'top-start': styles.modifiers.topLeft,\n        'top-end': styles.modifiers.topRight,\n        'bottom-start': styles.modifiers.bottomLeft,\n        'bottom-end': styles.modifiers.bottomRight,\n        'left-start': styles.modifiers.leftTop,\n        'left-end': styles.modifiers.leftBottom,\n        'right-start': styles.modifiers.rightTop,\n        'right-end': styles.modifiers.rightBottom\n    };\n    const hasCustomMinWidth = minWidth !== popoverMinWidth.value;\n    const hasCustomMaxWidth = maxWidth !== popoverMaxWidth.value;\n    const onDocumentKeyDown = (event) => {\n        if (event.key === KeyTypes.Escape && visible) {\n            if (triggerManually) {\n                shouldClose(event, hide);\n            }\n            else {\n                hide(event);\n            }\n        }\n    };\n    const onDocumentClick = (event, triggerElement, popperElement) => {\n        if (hideOnOutsideClick && visible) {\n            // check if we clicked within the popper, if so don't do anything\n            const isChild = popperElement && popperElement.contains(event.target);\n            if (isChild) {\n                // clicked within the popper\n                return;\n            }\n            if (triggerManually) {\n                shouldClose(event, hide);\n            }\n            else {\n                hide(event);\n            }\n        }\n    };\n    const onTriggerClick = (event) => {\n        if (triggerManually) {\n            if (visible) {\n                shouldClose(event, hide);\n            }\n            else {\n                shouldOpen(event, show);\n            }\n        }\n        else {\n            if (visible) {\n                hide(event);\n            }\n            else {\n                show(event, true);\n            }\n        }\n    };\n    const onContentMouseDown = () => {\n        if (focusTrapActive) {\n            setFocusTrapActive(false);\n        }\n    };\n    const onMouseEnter = (event) => {\n        if (triggerManually) {\n            shouldOpen(event, show);\n        }\n        else {\n            show(event, false);\n        }\n    };\n    const onMouseLeave = (event) => {\n        if (triggerManually) {\n            shouldClose(event, hide);\n        }\n        else {\n            hide(event);\n        }\n    };\n    const onFocus = (event) => {\n        if (triggerManually) {\n            shouldOpen(event, show);\n        }\n        else {\n            show(event, false);\n        }\n    };\n    const onBlur = (event) => {\n        if (triggerManually) {\n            shouldClose(event, hide);\n        }\n        else {\n            hide(event);\n        }\n    };\n    const closePopover = (event) => {\n        event.stopPropagation();\n        if (triggerManually) {\n            shouldClose(event, hide);\n        }\n        else {\n            hide(event);\n        }\n    };\n    const content = (React.createElement(FocusTrap, Object.assign({ ref: popoverRef, active: focusTrapActive, focusTrapOptions: {\n            returnFocusOnDeactivate: true,\n            clickOutsideDeactivates: true,\n            // FocusTrap's initialFocus can accept false as a value to prevent initial focus.\n            // We want to prevent this in case false is ever passed in.\n            initialFocus: elementToFocus || undefined,\n            checkCanFocusTrap: (containers) => new Promise((resolve) => {\n                const interval = setInterval(() => {\n                    if (containers.every((container) => getComputedStyle(container).visibility !== 'hidden')) {\n                        resolve();\n                        clearInterval(interval);\n                    }\n                }, 10);\n            }),\n            tabbableOptions: { displayCheck: 'none' },\n            fallbackFocus: () => {\n                // If the popover's trigger is focused but scrolled out of view,\n                // FocusTrap will throw an error when the Enter button is used on the trigger.\n                // That is because the Popover is hidden when its trigger is out of view.\n                // Provide a fallback in that case.\n                let node = null;\n                if (document && document.activeElement) {\n                    node = document.activeElement;\n                }\n                return node;\n            }\n        }, preventScrollOnDeactivate: true, className: css(styles.popover, alertSeverityVariant && alertStyle[alertSeverityVariant], hasNoPadding && styles.modifiers.noPadding, hasAutoWidth && styles.modifiers.widthAuto, className), role: \"dialog\", \"aria-modal\": \"true\", \"aria-label\": headerContent ? undefined : ariaLabel, \"aria-labelledby\": headerContent ? `popover-${uniqueId}-header` : undefined, \"aria-describedby\": `popover-${uniqueId}-body`, onMouseDown: onContentMouseDown, style: {\n            minWidth: hasCustomMinWidth ? minWidth : null,\n            maxWidth: hasCustomMaxWidth ? maxWidth : null\n        } }, rest),\n        React.createElement(PopoverArrow, null),\n        React.createElement(PopoverContent, null,\n            showClose && triggerAction === 'click' && (React.createElement(PopoverCloseButton, { onClose: closePopover, \"aria-label\": closeBtnAriaLabel })),\n            headerContent && (React.createElement(PopoverHeader, { id: `popover-${uniqueId}-header`, icon: headerIcon, alertSeverityVariant: alertSeverityVariant, alertSeverityScreenReaderText: alertSeverityScreenReaderText || `${alertSeverityVariant} alert:`, titleHeadingLevel: headerComponent }, typeof headerContent === 'function' ? headerContent(hide) : headerContent)),\n            React.createElement(PopoverBody, { id: `popover-${uniqueId}-body` }, typeof bodyContent === 'function' ? bodyContent(hide) : bodyContent),\n            footerContent && (React.createElement(PopoverFooter, { id: `popover-${uniqueId}-footer` }, typeof footerContent === 'function' ? footerContent(hide) : footerContent)))));\n    return (React.createElement(PopoverContext.Provider, { value: { headerComponent } },\n        React.createElement(Popper, { trigger: children, triggerRef: triggerRef, popper: content, popperRef: popoverRef, minWidth: minWidth, appendTo: appendTo, isVisible: visible, onMouseEnter: triggerAction === 'hover' && onMouseEnter, onMouseLeave: triggerAction === 'hover' && onMouseLeave, onPopperMouseEnter: triggerAction === 'hover' && onMouseEnter, onPopperMouseLeave: triggerAction === 'hover' && onMouseLeave, onFocus: triggerAction === 'hover' && onFocus, onBlur: triggerAction === 'hover' && onBlur, positionModifiers: positionModifiers, distance: distance, placement: position, onTriggerClick: triggerAction === 'click' && onTriggerClick, onDocumentClick: onDocumentClick, onDocumentKeyDown: onDocumentKeyDown, enableFlip: enableFlip, zIndex: zIndex, flipBehavior: flipBehavior, animationDuration: animationDuration, onHidden: onHidden, onShown: onShown, onHide: () => setFocusTrapActive(false) })));\n};\nPopover.displayName = 'Popover';\n//# sourceMappingURL=Popover.js.map","/*!\n* tabbable 6.2.0\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\n// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nvar candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable=\"false\"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  var _element$getRootNode;\n  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);\n} : function (element) {\n  return element === null || element === void 0 ? void 0 : element.ownerDocument;\n};\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nvar isInert = function isInert(node, lookUp) {\n  var _node$getAttribute;\n  if (lookUp === void 0) {\n    lookUp = true;\n  }\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');\n  var inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  var result = inert || lookUp && node && isInert(node.parentNode); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nvar isContentEditable = function isContentEditable(node) {\n  var _node$getAttribute2;\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nvar hasTabIndex = function hasTabIndex(node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nvar getTabIndex = function getTabIndex(node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nvar getSortOrderTabIndex = function getSortOrderTabIndex(node, isScope) {\n  var tabIndex = getTabIndex(node);\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n  return tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRoot;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  var nodeRoot = node && getRootNode(node);\n  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  var attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;\n    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));\n    while (!attached && nodeRootHost) {\n      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;\n      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));\n    }\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled ||\n  // we must do an inert look up to filter out any elements inside an inert ancestor\n  //  because we're limited in the type of selectors we can use in JSDom (see related\n  //  note related to `candidateSelectors`)\n  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getSortOrderTabIndex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, getTabIndex, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n","/*!\n* focus-trap 7.5.2\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { isFocusable, tabbable, focusable, isTabbable, getTabIndex } from 'tabbable';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Escape' || (e === null || e === void 0 ? void 0 : e.key) === 'Esc' || (e === null || e === void 0 ? void 0 : e.keyCode) === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Tab' || (e === null || e === void 0 ? void 0 : e.keyCode) === 9;\n};\n\n// checks for TAB by default\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\n// Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\nvar findIndex = function findIndex(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n\n  return idx;\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  var findContainerIndex = function findContainerIndex(element, event) {\n    var composedPath = typeof (event === null || event === void 0 ? void 0 : event.composedPath) === 'function' ? event.composedPath() : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || ( // fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      composedPath === null || composedPath === void 0 ? void 0 : composedPath.includes(container)) || tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n      optionValue = optionValue.apply(void 0, params);\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus');\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined || !isFocusable(node, config.tabbableOptions)) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : undefined;\n      var firstDomTabbableNode = focusableNodes.find(function (node) {\n        return isTabbable(node);\n      });\n      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function (node) {\n        return isTabbable(node);\n      });\n      var posTabIndexesFound = !!tabbableNodes.find(function (node) {\n        return getTabIndex(node) > 0;\n      });\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound: posTabIndexesFound,\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode: firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode: lastTabbableNode,\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode: firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode: lastDomTabbableNode,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          var nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function (el) {\n                return isTabbable(el);\n              });\n            }\n            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function (el) {\n              return isTabbable(el);\n            });\n          }\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (state.containerGroups.find(function (g) {\n      return g.posTabIndexesFound;\n    }) && state.containerGroups.length > 1) {\n      throw new Error(\"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\");\n    }\n  };\n  var tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === doc.activeElement) {\n      return;\n    }\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  var findNextNavNode = function findNextNavNode(_ref2) {\n    var target = _ref2.target,\n      event = _ref2.event,\n      _ref2$isBackward = _ref2.isBackward,\n      isBackward = _ref2$isBackward === void 0 ? false : _ref2$isBackward;\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target, event);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var firstTabbableNode = _ref3.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref4) {\n          var lastTabbableNode = _ref4.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  var checkFocusIn = function checkFocusIn(event) {\n    var target = getActualTarget(event);\n    var targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      var nextNode; // next node to focus, if we find one\n      var navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            var mruTabIdx = tabbableNodes.findIndex(function (node) {\n              return node === state.mostRecentlyFocusedNode;\n            });\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (!state.containerGroups.some(function (g) {\n            return g.tabbableNodes.some(function (n) {\n              return getTabIndex(n) > 0;\n            });\n          })) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent)\n        });\n      }\n      if (nextNode) {\n        tryFocus(nextNode);\n      } else {\n        tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    state.recentNavEvent = event;\n    var destinationNode = findNextNavNode({\n      event: event,\n      isBackward: isBackward\n    });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  var checkKey = function checkKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n      return;\n    }\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      tryFocus(getInitialFocusNode());\n    }) : tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  var checkDomRemoval = function checkDomRemoval(mutations) {\n    var isFocusedNodeRemoved = mutations.some(function (mutation) {\n      var removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  var mutationObserver = typeof window !== 'undefined' && 'MutationObserver' in window ? new MutationObserver(checkDomRemoval) : undefined;\n  var updateObservedNodes = function updateObservedNodes() {\n    if (!mutationObserver) {\n      return;\n    }\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      onActivate === null || onActivate === void 0 ? void 0 : onActivate();\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate === null || onPostActivate === void 0 ? void 0 : onPostActivate();\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      onDeactivate === null || onDeactivate === void 0 ? void 0 : onDeactivate();\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate === null || onPostDeactivate === void 0 ? void 0 : onPostDeactivate();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause(pauseOptions) {\n      if (state.paused || !state.active) {\n        return this;\n      }\n      var onPause = getOption(pauseOptions, 'onPause');\n      var onPostPause = getOption(pauseOptions, 'onPostPause');\n      state.paused = true;\n      onPause === null || onPause === void 0 ? void 0 : onPause();\n      removeListeners();\n      updateObservedNodes();\n      onPostPause === null || onPostPause === void 0 ? void 0 : onPostPause();\n      return this;\n    },\n    unpause: function unpause(unpauseOptions) {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n      var onUnpause = getOption(unpauseOptions, 'onUnpause');\n      var onPostUnpause = getOption(unpauseOptions, 'onPostUnpause');\n      state.paused = false;\n      onUnpause === null || onUnpause === void 0 ? void 0 : onUnpause();\n      updateTabbableNodes();\n      addListeners();\n      updateObservedNodes();\n      onPostUnpause === null || onPostUnpause === void 0 ? void 0 : onPostUnpause();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      updateObservedNodes();\n      return this;\n    }\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","import { __rest } from \"tslib\";\nimport { createFocusTrap } from 'focus-trap';\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\nimport { useUnmountEffect } from '../useUnmountEffect';\nexport const FocusTrap = forwardRef(function FocusTrap(_a, forwardedRef) {\n    var { active = true, paused = false, focusTrapOptions = {}, preventScrollOnDeactivate = false } = _a, props = __rest(_a, [\"active\", \"paused\", \"focusTrapOptions\", \"preventScrollOnDeactivate\"]);\n    // Fall back to internal ref if no forwarded ref is provided.\n    const ref = useRef(null);\n    useImperativeHandle(forwardedRef, () => ref.current);\n    // Create focus trap instance after rendering DOM.\n    const focusTrapRef = useRef(null);\n    useEffect(() => {\n        const focusTrap = createFocusTrap(ref.current, Object.assign(Object.assign({}, focusTrapOptions), { returnFocusOnDeactivate: false }));\n        focusTrapRef.current = focusTrap;\n        // Deactivate focus trap on cleanup.\n        return () => {\n            focusTrap.deactivate();\n        };\n    }, []);\n    // Handle activation status based on 'active' prop.\n    useEffect(() => {\n        const focusTrap = focusTrapRef.current;\n        active ? focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.activate() : focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.deactivate();\n    }, [active]);\n    // Handle pause status based on 'pause' prop.\n    useEffect(() => {\n        const focusTrap = focusTrapRef.current;\n        paused ? focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.pause() : focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.unpause();\n    }, [paused]);\n    // Store the currently active element to restore focus to later.\n    const previousElementRef = useRef(typeof document !== 'undefined' ? document.activeElement : null);\n    // Restore focus to the previously active element on unmount.\n    useUnmountEffect(() => {\n        if (focusTrapOptions.returnFocusOnDeactivate !== false && previousElementRef.current instanceof HTMLElement) {\n            previousElementRef.current.focus({\n                preventScroll: preventScrollOnDeactivate\n            });\n        }\n    });\n    return React.createElement(\"div\", Object.assign({ ref: ref }, props));\n});\nFocusTrap.displayName = 'FocusTrap';\n//# sourceMappingURL=FocusTrap.js.map","import { useEffect, useRef } from 'react';\n/**\n * A `useEffect`-like hook that only triggers when a component unmounts. Does not require a dependency list, as the effect callback will always be kept up to date.\n */\nexport function useUnmountEffect(effect) {\n    // Always use the latest effect callback so that it can reference the latest props and state.\n    const effectRef = useRef(effect);\n    effectRef.current = effect;\n    // Trigger the effect callback when the component unmounts.\n    useEffect(() => () => {\n        effectRef.current();\n    }, []);\n}\n//# sourceMappingURL=useUnmountEffect.js.map","import { createIcon } from '../createIcon';\n\nexport const TimesIconConfig = {\n  name: 'TimesIcon',\n  height: 512,\n  width: 352,\n  svgPath: 'M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const TimesIcon = createIcon(TimesIconConfig);\n\nexport default TimesIcon;"],"names":["PopoverContext","PopoverContent","_a","className","children","props","Object","assign","displayName","PopoverBody","id","PopoverHeaderIcon","PopoverHeaderText","headingLevel","HeadingLevel","PopoverHeader","icon","titleHeadingLevel","alertSeverityVariant","alertSeverityScreenReaderText","PopoverFooter","PopoverCloseButton","onClose","Button","onClick","variant","style","pointerEvents","PopoverArrow","PopoverPosition","alertStyle","custom","info","success","warning","danger","Popover","position","enableFlip","isVisible","shouldClose","shouldOpen","ariaLabel","bodyContent","headerContent","headerComponent","headerIcon","footerContent","appendTo","document","body","hideOnOutsideClick","onHide","onHidden","onShow","onShown","onMount","zIndex","triggerAction","minWidth","value","maxWidth","closeBtnAriaLabel","showClose","distance","flipBehavior","animationDuration","withFocusTrap","propWithFocusTrap","triggerRef","hasNoPadding","hasAutoWidth","elementToFocus","rest","uniqueId","triggerManually","visible","setVisible","focusTrapActive","setFocusTrapActive","Boolean","popoverRef","show","undefined","hide","event","positionModifiers","top","bottom","left","right","hasCustomMinWidth","hasCustomMaxWidth","onMouseEnter","onMouseLeave","content","FocusTrap","ref","active","focusTrapOptions","returnFocusOnDeactivate","clickOutsideDeactivates","initialFocus","checkCanFocusTrap","containers","Promise","resolve","interval","setInterval","every","container","getComputedStyle","visibility","clearInterval","tabbableOptions","displayCheck","fallbackFocus","node","activeElement","preventScrollOnDeactivate","role","onMouseDown","stopPropagation","Provider","Popper","trigger","popper","popperRef","onPopperMouseEnter","onPopperMouseLeave","onFocus","onBlur","placement","onTriggerClick","onDocumentClick","triggerElement","popperElement","contains","target","onDocumentKeyDown","key","Escape","candidateSelectors","candidateSelector","join","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode","element","_element$getRootNode","call","ownerDocument","isInert","lookUp","_node$getAttribute","inertAtt","getAttribute","parentNode","getCandidates","el","includeContainer","filter","candidates","Array","slice","apply","querySelectorAll","unshift","getCandidatesIteratively","elements","options","elementsToCheck","from","length","shift","tagName","assigned","assignedElements","nestedCandidates","flatten","push","scopeParent","includes","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","_nestedCandidates","hasTabIndex","isNaN","parseInt","getTabIndex","Error","tabIndex","test","_node$getAttribute2","attValue","isContentEditable","sortOrderedTabbables","a","b","documentOrder","isInput","isZeroArea","_node$getBoundingClie","getBoundingClientRect","width","height","isNodeMatchingSelectorFocusable","disabled","type","isHiddenInput","_ref","nodeUnderDetails","parentElement","originalNode","rootNode","assignedSlot","host","_nodeRoot","_nodeRootHost","_nodeRootHost$ownerDo","_node$ownerDocument","nodeRoot","nodeRootHost","attached","_nodeRoot2","_nodeRootHost2","_nodeRootHost2$ownerD","isNodeAttached","getClientRects","isHidden","some","child","isDetailsWithSummary","i","item","isDisabledFromFieldset","isNodeMatchingSelectorTabbable","isRadio","name","radioSet","radioScope","form","queryRadios","window","CSS","escape","err","console","error","message","checked","nodes","getCheckedRadio","isTabbableRadio","isNonTabbableRadio","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","forEach","isScope","candidateTabindex","getSortOrderTabIndex","sort","reduce","acc","sortable","concat","isTabbable","focusableCandidateSelector","isFocusable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","_objectSpread2","arguments","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","arg","input","hint","prim","Symbol","toPrimitive","res","TypeError","String","_toPrimitive","_toPropertyKey","configurable","writable","isTabEvent","e","keyCode","isKeyForward","shiftKey","isKeyBackward","delay","fn","setTimeout","findIndex","arr","idx","valueOrHandler","_len","params","_key","getActualTarget","composedPath","internalTrapStack","createFocusTrap","userOptions","trap","doc","trapStack","config","escapeDeactivates","delayInitialFocus","state","containerGroups","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","paused","delayInitialFocusTimer","recentNavEvent","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","tabbableNodes","find","getNodeForOption","optionValue","_len2","_key2","querySelector","getInitialFocusNode","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","bind","tabbable","focusableNodes","focusable","lastTabbableNode","firstDomTabbableNode","lastDomTabbableNode","reverse","posTabIndexesFound","nextTabbableNode","forward","nodeIdx","indexOf","group","g","tryFocus","focus","preventScroll","toLowerCase","select","isSelectableInput","getReturnFocusNode","previousActiveElement","findNextNavNode","_ref2","_ref2$isBackward","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref3","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref4","_destinationGroupIndex","_destinationGroup","checkPointerDown","deactivate","returnFocus","allowOutsideClick","preventDefault","checkFocusIn","targetContained","Document","nextNode","stopImmediatePropagation","navAcrossContainers","mruContainerIdx","mruTabIdx","n","checkKey","checkKeyNav","checkClick","addListeners","activeTrap","pause","trapIndex","splice","activeFocusTraps","addEventListener","capture","passive","removeListeners","removeEventListener","mutationObserver","MutationObserver","mutations","mutation","removedNodes","updateObservedNodes","disconnect","observe","subtree","childList","activate","activateOptions","this","onActivate","onPostActivate","finishActivation","then","deactivateOptions","onDeactivate","onPostDeactivate","checkCanReturnFocus","clearTimeout","unpause","finishDeactivation","pauseOptions","onPause","onPostPause","unpauseOptions","onUnpause","onPostUnpause","updateContainerElements","containerElements","elementsAsArray","forwardRef","forwardedRef","useRef","useImperativeHandle","current","focusTrapRef","useEffect","focusTrap","previousElementRef","effect","effectRef","useUnmountEffect","HTMLElement","svgPath","yOffset","xOffset"],"sourceRoot":""}