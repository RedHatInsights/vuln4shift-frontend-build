{"version":3,"file":"js/6532.1662734542436.3277f728251aa5d03183.js","mappings":"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","sources":["webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/MissingMetadata.js","webpack:///./src/Components/PresentationalComponents/ShieldSet.js","webpack:///./src/Helpers/constants.js","webpack:///./src/Helpers/miscHelper.js","webpack:///./src/Store/ActionTypes.js","webpack:///./src/Store/Reducers/CveListStore.js","webpack:///./src/Store/Reducers/ClusterListStore.js","webpack:///./src/Store/Reducers/CveDetailStore.js","webpack:///./src/Store/Reducers/ClusterDetailStore.js","webpack:///./src/Store/ReducerRegistry.js"],"sourcesContent":["import React, { Suspense, lazy } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst CveListPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"CveListPage\" */ './Components/SmartComponents/CveList/CveListPage'\n  )\n);\n\nconst ClusterListPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"ClusterListPage\" */ './Components/SmartComponents/ClusterList/ClusterListPage'\n  )\n);\n\nconst CveDetailPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"CveDetailPage\" */ './Components/SmartComponents/CveDetail/CveDetailPage'\n  )\n);\n\nconst ClusterDetailPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"ClusterDetailPage\" */ './Components/SmartComponents/ClusterDetail/ClusterDetailPage'\n  )\n);\n\nexport const Routes = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <Switch>\n      <Route path=\"/cves/:cveId\" component={CveDetailPage} />\n      <Route path=\"/clusters/:clusterId\" component={ClusterDetailPage} />\n      <Route path=\"/cves\" component={CveListPage} />\n      <Route path=\"/clusters\" component={ClusterListPage} />\n      <Route>\n        <Redirect to=\"/cves\" />\n      </Route>\n    </Switch>\n  </Suspense>\n);\n","import React, { Fragment, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './App.scss';\n\nconst App = (props) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    insights.chrome.init();\n\n    insights.chrome.identifyApp('ocp-vulnerability');\n\n    const unregister = insights.chrome.on('APP_NAVIGATION', (event) =>\n      history.push(`/${event.navId}`)\n    );\n\n    return () => {\n      unregister();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <Routes childProps={props} />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  Bullseye,\n  Text,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\n\nconst MissingMetadata = ({ ...props }) => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.large} {...props}>\n      <Text>\n        <strong>No description available</strong>\n      </Text>\n      <EmptyStateBody>\n        This CVE has been published, however metadata about this CVE is not yet\n        available on Red Hat Insights. Metadata is usually available on Insights\n        within 24 hours of a CVE being published.\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nMissingMetadata.propTypes = {\n  props: propTypes.object,\n};\n\nexport default MissingMetadata;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SEVERITY_OPTIONS } from '../../Helpers/constants';\nimport { SecurityIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst ShieldSet = ({ count, linkTo }) => {\n  const DISABLED_COLOR = 'var(--pf-global--disabled-color--200)';\n\n  return (\n    <div className=\"shield-set\">\n      {SEVERITY_OPTIONS.map((severityOption) => (\n        <Tooltip\n          key={severityOption.value}\n          content={`${severityOption.label} severity`}\n        >\n          {severityOption.hasIcon &&\n            (count[severityOption.value] === 0 ? (\n              <a className=\"disabled-shield nowrap\">\n                <SecurityIcon style={{ color: DISABLED_COLOR }} />\n                <span>0</span>\n              </a>\n            ) : (\n              <Link\n                key={severityOption.value}\n                to={`${linkTo}?severity=${severityOption.value}`}\n                className=\"nowrap\"\n              >\n                <SecurityIcon style={{ color: severityOption.iconColor }} />\n                <span>{count[severityOption.value]}</span>\n              </Link>\n            ))}\n        </Tooltip>\n      ))}\n    </div>\n  );\n};\n\nShieldSet.propTypes = {\n  count: PropTypes.shape({\n    critical: PropTypes.number,\n    important: PropTypes.number,\n    moderate: PropTypes.number,\n    low: PropTypes.number,\n  }).isRequired,\n  linkTo: PropTypes.string,\n};\n\nexport default ShieldSet;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport parseCvssScore from '@redhat-cloud-services/frontend-components-utilities/parseCvssScore';\nimport { Shield } from '@redhat-cloud-services/frontend-components/Shield';\nimport ShieldSet from '../Components/PresentationalComponents/ShieldSet';\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { subtractDays, subtractYears } from './miscHelper';\nimport MissingMetadata from '../Components/PresentationalComponents/EmptyStates/MissingMetadata';\n\nexport const HEADER_ALERT_DISMISSED_KEY = 'vuln4shift:header-alert-dismissed';\n\nexport const DEFAULT_LIMIT = 20;\n\n/* FILTER OPTIONS */\n\nexport const PUBLISHED_OPTIONS = [\n  {\n    value: 'all',\n    label: 'All',\n  },\n  {\n    value: 'last7days',\n    label: 'Last 7 days',\n    from: subtractDays(new Date(), 7),\n  },\n  {\n    value: 'last30days',\n    label: 'Last 30 days',\n    from: subtractDays(new Date(), 30),\n  },\n  {\n    value: 'last90days',\n    label: 'Last 90 days',\n    from: subtractDays(new Date(), 90),\n  },\n  {\n    value: 'lastYear',\n    label: 'Last year',\n    from: subtractYears(new Date(), 1),\n  },\n  {\n    value: 'moreThanYear',\n    label: 'More than 1 year ago',\n    to: subtractYears(new Date(), 1),\n  },\n];\n\nexport const SEVERITY_OPTIONS = [\n  {\n    value: 'critical',\n    label: 'Critical',\n    iconColor: 'var(--pf-global--danger-color--100)',\n    textColor: 'var(--pf-global--danger-color--100)',\n    hasIcon: true,\n  },\n  {\n    value: 'important',\n    label: 'Important',\n    iconColor: 'var(--pf-global--palette--orange-300)',\n    textColor: 'var(--pf-global--palette--orange-400)',\n    hasIcon: true,\n  },\n  {\n    value: 'moderate',\n    label: 'Moderate',\n    iconColor: 'var(--pf-global--warning-color--100)',\n    textColor: 'var(--pf-global--warning-color--200)',\n    hasIcon: true,\n  },\n  {\n    value: 'low',\n    label: 'Low',\n    iconColor: 'var(--pf-global--Color--200)',\n    textColor: 'var(--pf-global--default-color--300)',\n    hasIcon: true,\n  },\n  {\n    value: 'none',\n    label: 'Unknown',\n  },\n];\n\nexport const CLUSTER_SEVERITY_OPTIONS = [\n  {\n    value: 'any',\n    label: 'All clusters',\n  },\n  {\n    value: 'critical',\n    label: 'Critical',\n  },\n  {\n    value: 'important',\n    label: 'Important',\n  },\n  {\n    value: 'moderate',\n    label: 'Moderate',\n  },\n  {\n    value: 'low',\n    label: 'Low',\n  },\n];\n\nexport const EXPOSED_CLUSTERS_OPTIONS = [\n  {\n    value: 'oneOrMore',\n    label: '1 or more',\n  },\n  {\n    value: 'none',\n    label: 'None',\n  },\n];\n\nexport const CLUSTER_STATUS_OPTIONS = [\n  {\n    value: 'Connected',\n    label: 'Connected',\n  },\n  {\n    value: 'Disconnected',\n    label: 'Disconnected',\n  },\n  {\n    value: 'Stale',\n    label: 'Stale',\n  },\n  {\n    value: 'N/A',\n    label: 'Unknown',\n  },\n];\n\nexport const CLUSTER_VERSION_OPTIONS = [\n  {\n    value: 'N/A',\n    label: 'Unknown',\n  },\n];\n\nexport const CLUSTER_PROVIDER_OPTIONS = [\n  {\n    value: 'N/A',\n    label: 'Unknown',\n  },\n];\n\n/* TABLE COLUMNS */\n\nexport const CVE_LIST_TABLE_COLUMNS = [\n  {\n    title: 'CVE ID',\n    sortParam: 'synopsis',\n  },\n  {\n    title: 'Publish date',\n    sortParam: 'publish_date',\n  },\n  {\n    title: 'Severity',\n    sortParam: 'severity',\n  },\n  {\n    title: 'CVSS base score',\n    sortParam: 'cvss_score',\n  },\n  {\n    title: 'Exposed clusters',\n    sortParam: 'clusters_exposed',\n  },\n  {\n    title: 'Exposed images',\n    sortParam: 'images_exposed',\n  },\n];\n\nexport const CLUSTER_LIST_TABLE_COLUMNS = [\n  {\n    title: 'Name',\n    sortParam: 'display_name',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Status',\n    sortParam: 'status',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Type',\n  },\n  {\n    title: 'Version',\n    sortParam: 'version',\n  },\n  {\n    title: 'CVEs severity',\n    sortParam: 'cluster_severity',\n  },\n  {\n    title: 'Provider',\n    sortParam: 'provider',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Last seen',\n    sortParam: 'last_seen',\n  },\n];\n\nexport const CVE_DETAIL_TABLE_COLUMNS = [\n  {\n    title: 'Name',\n    sortParam: 'display_name',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Status',\n    sortParam: 'status',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Type',\n  },\n  {\n    title: 'Version',\n    sortParam: 'version',\n  },\n  {\n    title: 'Provider',\n    sortParam: 'provider',\n    sortDefaultDirection: 'asc',\n  },\n  {\n    title: 'Last seen',\n    sortParam: 'last_seen',\n  },\n];\n\nexport const CLUSTER_DETAIL_TABLE_COLUMNS = [\n  {\n    title: 'CVE ID',\n    sortParam: 'synopsis',\n  },\n  {\n    title: 'Publish date',\n    sortParam: 'publish_date',\n  },\n  {\n    title: 'Severity',\n    sortParam: 'severity',\n  },\n  {\n    title: 'CVSS base score',\n    sortParam: 'cvss_score',\n  },\n  {\n    title: 'Exposed images',\n    sortParam: 'images_exposed',\n  },\n];\n\n/* TABLE ROW MAPPERS */\n\nconst createCveDescription = (row) => (\n  <Fragment>\n    {row.description === 'unknown' ? (\n      <MissingMetadata\n        variant={EmptyStateVariant.large}\n        style={{ padding: 0 }}\n      />\n    ) : (\n      <TextContent>\n        <Text component={TextVariants.h6} style={{ fontSize: 14 }}>\n          CVE description\n        </Text>\n        {row.description}\n      </TextContent>\n    )}\n    <Link\n      to={'/cves/' + row.synopsis}\n      className=\"pf-u-mt-md pf-u-display-block\"\n    >\n      View more information about this CVE\n    </Link>\n  </Fragment>\n);\n\nexport const CVE_LIST_TABLE_MAPPER = (row) => ({\n  key: row.synopsis,\n  cells: [\n    <Link to={'/cves/' + row.synopsis} key={row.synopsis}>\n      {row.synopsis}\n    </Link>,\n    processDate(row.publish_date),\n    <Shield hasLabel impact={row.severity} key={row.synopsis} />,\n    parseCvssScore(row.cvss2_score, row.cvss3_score, true),\n    <Link to={'/cves/' + row.synopsis} key={row.synopsis}>\n      {row.clusters_exposed}\n    </Link>,\n    row.images_exposed,\n  ],\n  expandableContent: createCveDescription(row),\n});\n\nexport const CLUSTER_LIST_TABLE_MAPPER = (row) => ({\n  key: row.id,\n  cells: [\n    <Link to={'/clusters/' + row.id} key={row.id}>\n      {row.display_name}\n    </Link>,\n    row.status,\n    row.type,\n    row.version,\n    <ShieldSet\n      key={row.id}\n      count={{ ...row.cves_severity }}\n      linkTo={`/clusters/${row.id}`}\n    />,\n    row.provider,\n    <DateFormat key={row.id} date={row.last_seen} type=\"relative\" />,\n  ],\n});\n\nexport const CVE_DETAIL_TABLE_MAPPER = (row) => ({\n  key: row.id,\n  cells: [\n    <Link to={'/clusters/' + row.id} key={row.id}>\n      {row.display_name}\n    </Link>,\n    row.status,\n    row.type,\n    row.version,\n    row.provider,\n    <DateFormat key={row.id} date={row.last_seen} type=\"relative\" />,\n  ],\n});\n\nexport const CLUSTER_DETAIL_TABLE_MAPPER = (row) => ({\n  key: row.synopsis,\n  cells: [\n    <Link to={'/cves/' + row.synopsis} key={row.synopsis}>\n      {row.synopsis}\n    </Link>,\n    processDate(row.publish_date),\n    <Shield hasLabel impact={row.severity} key={row.synopsis} />,\n    parseCvssScore(row.cvss2_score, row.cvss3_score, true),\n    row.images_exposed,\n  ],\n  expandableContent: createCveDescription(row),\n});\n\n/* ALLOWED PARAMETERS */\n\nexport const GENERIC_ALLOWED_PARAMS = ['limit', 'offset', 'sort'];\n\nexport const CVE_LIST_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'published',\n  'severity',\n  'cvss_score',\n  'affected_clusters',\n];\n\nexport const CLUSTER_LIST_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'status',\n  'version',\n  'cluster_severity',\n  'provider',\n];\n\nexport const CVE_DETAIL_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'status',\n  'version',\n  'provider',\n];\n\nexport const CLUSTER_DETAIL_ALLOWED_PARAMS = [\n  ...GENERIC_ALLOWED_PARAMS,\n  'search',\n  'published',\n  'severity',\n  'cvss_score',\n  'images_exposed',\n];\n\n/* DEFAULT FILTERS */\n\nexport const CVE_LIST_DEFAULT_FILTERS = {\n  affected_clusters: 'oneOrMore',\n};\n\nexport const CLUSTER_LIST_DEFAULT_FILTERS = {\n  cluster_severity: 'any',\n};\n\nexport const CVE_DETAIL_DEFAULT_FILTERS = {};\n\nexport const CLUSTER_DETAIL_DEFAULT_FILTERS = {};\n\n/* EXPORTS */\nexport const CVE_LIST_EXPORT_PREFIX = 'ocp-vulnerability_cves--';\nexport const CLUSTER_LIST_EXPORT_PREFIX = 'ocp-vulnerability_clusters--';\nexport const CVE_DETAIL_EXPORT_PREFIX = 'ocp-vulnerability_exposed-clusters--';\nexport const CLUSTER_DETAIL_EXPORT_PREFIX = 'ocp-vulnerability_cluster-cves--';\n","import isEqual from 'lodash/isEqual';\n\nexport const getCvssScoreFromUrlParam = (urlParam) => {\n  if (!urlParam?.includes(',')) {\n    urlParam = ',';\n  }\n\n  const urlMin = urlParam.split(',')[0];\n  const urlMax = urlParam.split(',')[1];\n\n  let min, max;\n\n  min = urlMin === '' ? 0 : Number(urlMin);\n  max = urlMax === '' ? 10 : Number(urlMax);\n\n  return [min, max];\n};\n\nexport const deepFreeze = (object) => {\n  const propNames = Object.getOwnPropertyNames(object);\n\n  for (const name of propNames) {\n    const value = object[name];\n\n    if (value && typeof value === 'object') {\n      deepFreeze(value);\n    }\n  }\n\n  return Object.freeze(object);\n};\n\nexport const subtractDays = (currentDate, toSubtract) => {\n  return currentDate.setDate(currentDate.getDate() - toSubtract);\n};\n\nexport const subtractYears = (currentDate, toSubtract) => {\n  return currentDate.setFullYear(currentDate.getFullYear() - toSubtract);\n};\n\nexport const areAnyFiltersApplied = ({\n  currentParams,\n  defaultParams,\n  filterParams,\n}) => {\n  // filter out params which have nothing to do with filtering, like page, sort, etc.\n  const reducedParams = filterParams.reduce(\n    (acc, param) => ({\n      ...acc,\n      ...(currentParams[param] && { [param]: currentParams[param] }),\n    }),\n    {}\n  );\n\n  return !isEqual(reducedParams, defaultParams);\n};\n\nexport const setupFilters = (filters, meta, defaultFilters, apply) => {\n  if (filters.length === 0) {\n    return [undefined, undefined];\n  }\n\n  const filterKeys = filters.map((item) => item.filterConfig.key);\n  const showDeleteButton = areAnyFiltersApplied({\n    currentParams: meta,\n    defaultParams: defaultFilters,\n    filterParams: filterKeys,\n  });\n\n  let filterConfig = { items: [] };\n  let activeFiltersConfig = {\n    filters: [],\n    onDelete: (_, categories, isReset) =>\n      isReset\n        ? apply({ ...defaultFilters, offset: 0, limit: meta.limit }, true)\n        : categories.forEach((category) => category.onDelete(category.chips)),\n    deleteTitle: 'Reset filter',\n    showDeleteButton,\n  };\n\n  filters.forEach((filter) => {\n    filterConfig.items.push(filter.filterConfig);\n\n    filter.activeFiltersConfig?.isShown &&\n      activeFiltersConfig.filters.push(filter.activeFiltersConfig);\n  });\n\n  return [filterConfig, activeFiltersConfig, showDeleteButton];\n};\n\nexport const isTimestampValid = (stateTimestamp, actionTimestamp) =>\n  actionTimestamp >= stateTimestamp;\n","/* eslint-disable prettier/prettier */\n\n/* FETCHING DATA */\nexport const FETCH_CVE_LIST_TABLE = 'FETCH_CVE_LIST_TABLE';\nexport const FETCH_CVE_DETAIL_TABLE = 'FETCH_CVE_DETAIL_TABLE';\nexport const FETCH_CLUSTER_LIST_TABLE = 'FETCH_CLUSTER_LIST_TABLE';\nexport const FETCH_CLUSTER_DETAIL_TABLE = 'FETCH_CLUSTER_DETAIL_TABLE';\nexport const FETCH_CVE_DETAILS = 'FETCH_CVE_DETAILS';\nexport const FETCH_CLUSTER_DETAILS = 'FETCH_CLUSTER_DETAILS';\n\n/* CHANGING TABLE PARAMS */\nexport const CHANGE_CVE_LIST_TABLE_PARAMS = 'CHANGE_CVE_LIST_TABLE_PARAMS';\nexport const CHANGE_CVE_DETAIL_TABLE_PARAMS = 'CHANGE_CVE_DETAIL_TABLE_PARAMS';\nexport const CHANGE_CLUSTER_LIST_TABLE_PARAMS = 'CHANGE_CLUSTER_LIST_TABLE_PARAMS';\nexport const CHANGE_CLUSTER_DETAIL_TABLE_PARAMS = 'CHANGE_CLUSTER_DETAIL_TABLE_PARAMS';\n","import {\n  CVE_LIST_DEFAULT_FILTERS,\n  DEFAULT_LIMIT,\n} from '../../Helpers/constants';\nimport { deepFreeze, isTimestampValid } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  cves: [],\n  isLoading: true,\n  timestamp: new Date(),\n  meta: {\n    limit: DEFAULT_LIMIT,\n    offset: 0,\n    total_items: 0,\n    sort: '-publish_date',\n    ...CVE_LIST_DEFAULT_FILTERS,\n  },\n});\n\nconst CveListStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CVE_LIST_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isLoading: true,\n        error: undefined,\n        timestamp: action.meta.timestamp,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_LIST_TABLE}_FULFILLED`: {\n      if (isTimestampValid(state.timestamp, action.meta.timestamp)) {\n        return {\n          ...state,\n          cves: action.payload.data.data,\n          meta: {\n            ...state.meta,\n            total_items: action.payload.data.meta.total_items,\n          },\n          isLoading: false,\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case `${ActionTypes.FETCH_CVE_LIST_TABLE}_REJECTED`: {\n      return {\n        ...state,\n        isLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CVE_LIST_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          total_items: state.meta.total_items,\n          sort: state.meta.sort,\n          limit: state.meta.limit,\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default CveListStore;\n","import {\n  CLUSTER_LIST_DEFAULT_FILTERS,\n  DEFAULT_LIMIT,\n} from '../../Helpers/constants';\nimport { deepFreeze, isTimestampValid } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  clusters: [],\n  isLoading: true,\n  timestamp: new Date(),\n  meta: {\n    limit: DEFAULT_LIMIT,\n    offset: 0,\n    total_items: 0,\n    sort: '-last_seen',\n    ...CLUSTER_LIST_DEFAULT_FILTERS,\n  },\n});\n\nconst ClusterListStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CLUSTER_LIST_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isLoading: true,\n        error: undefined,\n        timestamp: action.meta.timestamp,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_LIST_TABLE}_FULFILLED`: {\n      const { data, meta } = action.payload.data;\n\n      if (isTimestampValid(state.timestamp, action.meta.timestamp)) {\n        return {\n          ...state,\n          clusters: data,\n          meta: {\n            ...state.meta,\n            total_items: meta.total_items,\n            dynamic_provider_options: meta.cluster_providers_all,\n            dynamic_status_options: meta.cluster_statuses_all,\n            dynamic_version_options: meta.cluster_versions_all,\n          },\n          isLoading: false,\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_LIST_TABLE}_REJECTED`: {\n      return {\n        ...state,\n        isLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CLUSTER_LIST_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          total_items: state.meta.total_items,\n          sort: state.meta.sort,\n          limit: state.meta.limit,\n          dynamic_provider_options: state.meta.dynamic_provider_options,\n          dynamic_status_options: state.meta.dynamic_status_options,\n          dynamic_version_options: state.meta.dynamic_version_options,\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default ClusterListStore;\n","import {\n  CVE_DETAIL_DEFAULT_FILTERS,\n  DEFAULT_LIMIT,\n} from '../../Helpers/constants';\nimport { deepFreeze, isTimestampValid } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  cve: {},\n  clusters: [],\n  isDetailLoading: true,\n  isTableLoading: true,\n  timestamp: new Date(),\n  meta: {\n    limit: DEFAULT_LIMIT,\n    offset: 0,\n    total_items: 0,\n    sort: '-last_seen',\n    ...CVE_DETAIL_DEFAULT_FILTERS,\n  },\n});\n\nconst CveDetailStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CVE_DETAIL_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isTableLoading: true,\n        error: undefined,\n        timestamp: action.meta.timestamp,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAIL_TABLE}_FULFILLED`: {\n      if (isTimestampValid(state.timestamp, action.meta.timestamp)) {\n        const { data, meta } = action.payload.data;\n\n        return {\n          ...state,\n          clusters: data,\n          meta: {\n            ...state.meta,\n            total_items: meta.total_items,\n            dynamic_provider_options: meta.cluster_providers_all,\n            dynamic_status_options: meta.cluster_statuses_all,\n            dynamic_version_options: meta.cluster_versions_all,\n          },\n          isTableLoading: false,\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAIL_TABLE}_REJECTED`: {\n      return {\n        ...state,\n        isTableLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CVE_DETAIL_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          total_items: state.meta.total_items,\n          sort: state.meta.sort,\n          limit: state.meta.limit,\n          dynamic_provider_options: state.meta.dynamic_provider_options,\n          dynamic_status_options: state.meta.dynamic_status_options,\n          dynamic_version_options: state.meta.dynamic_version_options,\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAILS}_PENDING`: {\n      return {\n        ...state,\n        isDetailLoading: true,\n        error: undefined,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAILS}_FULFILLED`: {\n      return {\n        ...state,\n        cve: action.payload.data.data,\n        isDetailLoading: false,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAILS}_REJECTED`: {\n      return {\n        ...state,\n        isDetailLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default CveDetailStore;\n","import {\n  CLUSTER_DETAIL_DEFAULT_FILTERS,\n  DEFAULT_LIMIT,\n} from '../../Helpers/constants';\nimport { deepFreeze, isTimestampValid } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  cluster: {},\n  cves: [],\n  isDetailLoading: true,\n  isTableLoading: true,\n  timestamp: new Date(),\n  meta: {\n    limit: DEFAULT_LIMIT,\n    offset: 0,\n    total_items: 0,\n    sort: '-publish_date',\n    ...CLUSTER_DETAIL_DEFAULT_FILTERS,\n  },\n});\n\nconst ClusterDetailStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CLUSTER_DETAIL_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isTableLoading: true,\n        error: undefined,\n        timestamp: action.meta.timestamp,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAIL_TABLE}_FULFILLED`: {\n      if (isTimestampValid(state.timestamp, action.meta.timestamp)) {\n        return {\n          ...state,\n          cves: action.payload.data.data,\n          meta: {\n            ...state.meta,\n            total_items: action.payload.data.meta.total_items,\n          },\n          isTableLoading: false,\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAIL_TABLE}_REJECTED`: {\n      return {\n        ...state,\n        isTableLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CLUSTER_DETAIL_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          total_items: state.meta.total_items,\n          sort: state.meta.sort,\n          limit: state.meta.limit,\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAILS}_PENDING`: {\n      return {\n        ...state,\n        isDetailLoading: true,\n        error: undefined,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAILS}_FULFILLED`: {\n      return {\n        ...state,\n        cluster: action.payload.data.data,\n        isDetailLoading: false,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAILS}_REJECTED`: {\n      return {\n        ...state,\n        isDetailLoading: false,\n        error: {\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default ClusterDetailStore;\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport CveListStore from './Reducers/CveListStore';\nimport ClusterListStore from './Reducers/ClusterListStore';\nimport CveDetailStore from './Reducers/CveDetailStore';\nimport ClusterDetailStore from './Reducers/ClusterDetailStore';\n\nlet registry;\n\nconst notificationsFilterMiddleware = () => (next) => (action) => {\n  const matchRejected = (type) => type.match(new RegExp(`_REJECTED$`));\n\n  if (matchRejected(action.type) && action.meta?.noNotificationOnError) {\n    action.meta = { ...action.meta, noError: true };\n  }\n\n  next(action);\n};\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsFilterMiddleware,\n    notificationsMiddleware({\n      errorDescriptionKey: 'detail',\n      // TODO: for some reason this does not work\n      autoDismiss: false,\n    }),\n    ...middleware,\n  ]);\n\n  registry.register({ notifications: notificationsReducer });\n\n  registry.register({ CveListStore });\n  registry.register({ ClusterListStore });\n  registry.register({ CveDetailStore });\n  registry.register({ ClusterDetailStore });\n\n  return registry;\n}\n"],"names":["CveListPage","lazy","ClusterListPage","CveDetailPage","ClusterDetailPage","Routes","Suspense","fallback","Bullseye","Spinner","Switch","Route","path","component","Redirect","to","props","history","useHistory","useEffect","insights","chrome","init","identifyApp","unregister","on","event","push","navId","Fragment","childProps","MissingMetadata","EmptyState","variant","EmptyStateVariant","Text","EmptyStateBody","propTypes","ShieldSet","count","linkTo","DISABLED_COLOR","className","SEVERITY_OPTIONS","map","severityOption","Tooltip","key","value","content","label","hasIcon","style","color","Link","iconColor","PropTypes","critical","important","moderate","low","isRequired","HEADER_ALERT_DISMISSED_KEY","DEFAULT_LIMIT","PUBLISHED_OPTIONS","from","subtractDays","Date","subtractYears","textColor","CLUSTER_SEVERITY_OPTIONS","EXPOSED_CLUSTERS_OPTIONS","CLUSTER_STATUS_OPTIONS","CLUSTER_VERSION_OPTIONS","CLUSTER_PROVIDER_OPTIONS","CVE_LIST_TABLE_COLUMNS","title","sortParam","CLUSTER_LIST_TABLE_COLUMNS","sortDefaultDirection","CVE_DETAIL_TABLE_COLUMNS","CLUSTER_DETAIL_TABLE_COLUMNS","createCveDescription","row","description","padding","TextContent","TextVariants","fontSize","synopsis","CVE_LIST_TABLE_MAPPER","cells","processDate","publish_date","Shield","hasLabel","impact","severity","parseCvssScore","cvss2_score","cvss3_score","clusters_exposed","images_exposed","expandableContent","CLUSTER_LIST_TABLE_MAPPER","id","display_name","status","type","version","cves_severity","provider","DateFormat","date","last_seen","CVE_DETAIL_TABLE_MAPPER","CLUSTER_DETAIL_TABLE_MAPPER","GENERIC_ALLOWED_PARAMS","CVE_LIST_ALLOWED_PARAMS","CLUSTER_LIST_ALLOWED_PARAMS","CVE_DETAIL_ALLOWED_PARAMS","CLUSTER_DETAIL_ALLOWED_PARAMS","CVE_LIST_DEFAULT_FILTERS","affected_clusters","CLUSTER_LIST_DEFAULT_FILTERS","cluster_severity","CVE_DETAIL_DEFAULT_FILTERS","CLUSTER_DETAIL_DEFAULT_FILTERS","CVE_LIST_EXPORT_PREFIX","CLUSTER_LIST_EXPORT_PREFIX","CVE_DETAIL_EXPORT_PREFIX","CLUSTER_DETAIL_EXPORT_PREFIX","getCvssScoreFromUrlParam","urlParam","includes","min","max","urlMin","split","urlMax","Number","deepFreeze","object","propNames","Object","getOwnPropertyNames","name","freeze","currentDate","toSubtract","setDate","getDate","setFullYear","getFullYear","setupFilters","filters","meta","defaultFilters","apply","length","undefined","filterKeys","item","filterConfig","showDeleteButton","currentParams","defaultParams","filterParams","reducedParams","reduce","acc","param","isEqual","areAnyFiltersApplied","items","activeFiltersConfig","onDelete","_","categories","isReset","offset","limit","forEach","category","chips","deleteTitle","filter","isShown","isTimestampValid","stateTimestamp","actionTimestamp","FETCH_CVE_LIST_TABLE","FETCH_CVE_DETAIL_TABLE","FETCH_CLUSTER_LIST_TABLE","FETCH_CLUSTER_DETAIL_TABLE","FETCH_CVE_DETAILS","FETCH_CLUSTER_DETAILS","CHANGE_CVE_LIST_TABLE_PARAMS","CHANGE_CVE_DETAIL_TABLE_PARAMS","CHANGE_CLUSTER_LIST_TABLE_PARAMS","CHANGE_CLUSTER_DETAIL_TABLE_PARAMS","initialState","cves","isLoading","timestamp","total_items","sort","state","action","ActionTypes","error","payload","data","clusters","dynamic_provider_options","cluster_providers_all","dynamic_status_options","cluster_statuses_all","dynamic_version_options","cluster_versions_all","cve","isDetailLoading","isTableLoading","cluster","registry","notificationsFilterMiddleware","next","match","RegExp","noNotificationOnError","noError","middleware","getRegistry","promiseMiddleware","notificationsMiddleware","errorDescriptionKey","autoDismiss","register","notifications","notificationsReducer","CveListStore","ClusterListStore","CveDetailStore","ClusterDetailStore"],"sourceRoot":""}