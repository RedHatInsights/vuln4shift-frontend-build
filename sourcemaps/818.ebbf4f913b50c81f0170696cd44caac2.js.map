{"version":3,"file":"js/818.92cdbe809765ebcf53d4.js","mappings":"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","sources":["webpack:///./node_modules/@remix-run/router/dist/router.js","webpack:///./node_modules/react-router/dist/index.js","webpack:///./node_modules/react-router-dom/dist/index.js"],"sourcesContent":["/**\n * @remix-run/router v1.6.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i],\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n  return matches;\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      const starParam = params[star];\n      // Apply the splat\n      return starParam;\n    }\n    const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      if (optional === \"?\") {\n        return param == null ? \"\" : param;\n      }\n      if (param == null) {\n        invariant(false, \"Missing \\\":\" + key + \"\\\" param\");\n      }\n      return param;\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, null, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    if (error) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nclass ErrorResponse {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future = _extends({\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  let initialized =\n  // All initialMatches need to be loaded before we're ready.  If we have lazy\n  // functions around still then we'll need to run them in initialize()\n  !initialMatches.some(m => m.route.lazy) && (\n  // And we have to either have no loaders or have been provided hydrationData\n  !initialMatches.some(m => m.route.loader) || init.hydrationData != null);\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked\n            init.history.go(delta);\n          },\n          reset() {\n            deleteBlocker(blockerKey);\n            updateState({\n              blockers: new Map(router.state.blockers)\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState) {\n    var _location$state, _location$state2;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers: new Map(state.blockers)\n    }));\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          deleteBlocker(blockerKey);\n          updateState({\n            blockers: new Map(state.blockers)\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      let navigation = _extends({\n        state: \"loading\",\n        location\n      }, opts.submission);\n      loadingNavigation = navigation;\n      // Create a GET request for the loaders\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, opts) {\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = _extends({\n      state: \"submitting\",\n      location\n    }, submission);\n    updateState({\n      navigation\n    });\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename);\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n    if (!loadingNavigation) {\n      let navigation = _extends({\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      }, submission);\n      loadingNavigation = navigation;\n    }\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission ? submission || fetcherSubmission : loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {\n      formMethod: loadingNavigation.formMethod,\n      formAction: loadingNavigation.formAction,\n      formData: loadingNavigation.formData,\n      formEncType: loadingNavigation.formEncType\n    } : undefined;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}, updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      return {\n        shortCircuited: true\n      };\n    }\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(rf => {\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }));\n      return;\n    }\n    let {\n      path,\n      submission\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = _extends({\n      state: \"submitting\"\n    }, submission, {\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true\n    });\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename);\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher = _extends({\n        state: \"loading\"\n      }, submission, {\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true\n      });\n      state.fetchers.set(key, loadingFetcher);\n      updateState({\n        fetchers: new Map(state.fetchers)\n      });\n      return startRedirectNavigation(state, actionResult, {\n        submission,\n        isFetchActionRedirect: true\n      });\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = _extends({\n      state: \"loading\",\n      data: actionResult.data\n    }, submission, {\n      \" _hasFetcherDoneAnything \": true\n    });\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, {\n      [match.route.id]: actionResult.data\n    }, undefined // No need to send through errors since we short circuit above\n    );\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = {\n        state: \"loading\",\n        data: existingFetcher && existingFetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = {\n        state: \"idle\",\n        data: actionResult.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)\n      }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher = _extends({\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined\n    }, submission, {\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true\n    });\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, manifest, mapRouteProperties, basename);\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      fetchRedirectIds.add(key);\n      await startRedirectNavigation(state, result);\n      return;\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    let doneFetcher = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(state, redirect, _temp) {\n    let {\n      submission,\n      replace,\n      isFetchActionRedirect\n    } = _temp === void 0 ? {} : _temp;\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n    let redirectLocation = createLocation(state.location, redirect.location, // TODO: This can be removed once we get rid of useTransition in Remix v2\n    _extends({\n      _isRedirect: true\n    }, isFetchActionRedirect ? {\n      _isFetchActionRedirect: true\n    } : {}));\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\");\n    // Check if this an absolute external redirect that goes to a new origin\n    if (ABSOLUTE_URL_REGEX.test(redirect.location) && isBrowser) {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, basename) == null;\n      if (routerWindow.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType,\n      formData\n    } = state.navigation;\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData\n      };\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && submission && isMutationMethod(submission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, submission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined\n        },\n        fetcherSubmission: submission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename)), ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        return callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename);\n      } else {\n        let error = {\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        };\n        return error;\n      }\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    state.blockers.set(key, newBlocker);\n    updateState({\n      blockers: new Map(state.blockers)\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || (location => location.key);\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(request, _temp2) {\n    let {\n      requestContext\n    } = _temp2 === void 0 ? {} : _temp2;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(request, _temp3) {\n    let {\n      routeId,\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename, true, isRouteRequest, requestContext);\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted\");\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      });\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename, true, isRouteRequest, requestContext))]);\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted\");\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && \"formData\" in opts;\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getPathContributingMatches(contextualMatches).map(m => m.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don't already have one\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  // Create a Submission on non-GET navigations\n  let submission;\n  if (opts.formData) {\n    let formMethod = opts.formMethod || \"get\";\n    submission = {\n      formMethod: normalizeFormMethod ? formMethod.toUpperCase() : formMethod.toLowerCase(),\n      formAction: stripHashFromPath(path),\n      formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n      formData: opts.formData\n    };\n    if (isMutationMethod(submission.formMethod)) {\n      return {\n        path,\n        submission\n      };\n    }\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate:\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired ||\n      // Clicked the same link, resubmitted a GET form\n      currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some(m => m.route.id === f.routeId)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // hit a static href, so they _always_ check shouldRevalidate and the\n    // default is strictly if a revalidation is explicitly required (action\n    // submissions, useRevalidator, X-Remix-Revalidate).\n    let shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n      currentUrl,\n      currentParams: state.matches[state.matches.length - 1].params,\n      nextUrl,\n      nextParams: matches[matches.length - 1].params\n    }, submission, {\n      actionResult,\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      defaultShouldRevalidate: isRevalidationRequired\n    }));\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\nasync function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, isStaticRequest, isRouteRequest, requestContext) {\n  if (isStaticRequest === void 0) {\n    isStaticRequest = false;\n  }\n  if (isRouteRequest === void 0) {\n    isRouteRequest = false;\n  }\n  let resultType;\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([handler({\n      request,\n      params: match.params,\n      context: requestContext\n    }), abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([runHandler(handler), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            data: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  if (isResponse(result)) {\n    let status = result.status;\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location);\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null\n      };\n    }\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result\n      };\n    }\n    let data;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType,\n      formData\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    init.body = formEncType === \"application/x-www-form-urlencoded\" ? convertFormDataToSearchParams(formData) : formData;\n  }\n  // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n  return searchParams;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index];\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp4) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp4 === void 0 ? {} : _temp4;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponse(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getPathContributingMatches as UNSAFE_getPathContributingMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.13.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n  Not a true \"polyfill\" since we guard via the feature flag at runtime,\n  but close enough :)\n\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nvar startTransitionImpl = React[START_TRANSITION];\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match;\n    // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n  let blockerFunction = React.useCallback(args => {\n    return typeof shouldBlock === \"function\" ? !!shouldBlock(args) : !!shouldBlock;\n  }, [shouldBlock]);\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(() => () => router.deleteBlocker(blockerKey), [router, blockerKey]);\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, startTransitionImpl as UNSAFE_startTransitionImpl, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.13.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, UNSAFE_startTransitionImpl, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, createRouter, createBrowserHistory, createHashHistory, ErrorResponse, UNSAFE_warning, UNSAFE_invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n  return searchParams;\n}\nfunction getFormSubmissionInfo(target, options, basename) {\n  let method;\n  let action = null;\n  let encType;\n  let formData;\n  if (isFormElement(target)) {\n    let submissionTrigger = options.submissionTrigger;\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form);\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || null;\n    encType = options.encType || defaultEncType;\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n  _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\", \"preventScrollReset\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && UNSAFE_startTransitionImpl ? UNSAFE_startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && UNSAFE_startTransitionImpl ? UNSAFE_startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref3;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && UNSAFE_startTransitionImpl ? UNSAFE_startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset\n    } = _ref4,\n    rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children\n    } = _ref5,\n    rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      preventScrollReset\n    } = _ref6,\n    props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      relative,\n      preventScrollReset\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmitImpl\"] = \"useSubmitImpl\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  return useSubmitImpl();\n}\nfunction useSubmitImpl(fetcherKey, fetcherRouteId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n    let {\n      action,\n      method,\n      encType,\n      formData\n    } = getFormSubmissionInfo(target, options, basename);\n    // Base options shared between fetch() and navigate()\n    let opts = {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      formMethod: method,\n      formEncType: encType\n    };\n    if (fetcherKey) {\n      !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n      router.fetch(fetcherKey, fetcherRouteId, action, opts);\n    } else {\n      router.navigate(action, _extends({}, opts, {\n        replace: options.replace,\n        fromRouteId: currentRouteId\n      }));\n    }\n  }, [router, basename, fetcherKey, fetcherRouteId, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher() {\n  var _route$matches;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref8) {\n  let {\n    when,\n    message\n  } = _ref8;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n"],"names":["Action","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","PopStateEventType","createMemoryHistory","options","entries","initialEntries","initialIndex","v5Compat","map","entry","index","createMemoryLocation","state","undefined","clampIndex","action","Pop","listener","n","Math","min","max","getCurrentLocation","to","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","createURL","URL","encodeLocation","path","parsePath","search","hash","push","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","fn","createBrowserHistory","getUrlBasedHistory","window","globalHistory","usr","createHashHistory","substr","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","invariant","value","message","Error","cond","console","warn","e","getHistoryState","idx","current","random","toString","_ref","parsedPath","searchIndex","getLocation","validateLocation","defaultView","history","getIndex","handlePop","origin","replaceState","addEventListener","removeEventListener","historyState","pushState","error","DOMException","name","ResultType","immutableRouteKeys","Set","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","route","treePath","id","join","children","isIndexRoute","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","a","b","score","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","caseSensitive","startsWith","joinPaths","concat","computeScore","forEach","_route$path","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","generatePath","originalPath","array","keyMatch","optional","param","pattern","matcher","paramNames","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","pop","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","data","init","responseInit","status","headers","Headers","has","set","Response","AbortedDeferredError","DeferredData","constructor","reject","pendingKeysSet","subscribers","deferredKeys","Array","isArray","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","trackPromise","done","add","promise","race","then","onSettle","catch","defineProperty","get","aborted","delete","emit","settledKey","subscriber","subscribe","cancel","abort","v","k","async","resolve","size","unwrappedData","_ref2","unwrapTrackedPromise","pendingKeys","_tracked","isTrackedPromise","_error","_data","defer","redirect","ErrorResponse","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","createRouter","routerWindow","isBrowser","createElement","isServer","detectErrorBoundary","inFlightDataRoutes","dataRoutes","future","v7_normalizeFormMethod","v7_prependBasename","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","router","pendingNavigationController","initialized","m","lazy","loader","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","Map","blockers","pendingAction","pendingPreventScrollReset","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","updateState","newState","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","deleteBlocker","getSavedScrollPosition","startNavigation","opts","startUninterruptedRevalidation","userMatches","createUseMatchesMatch","saveScrollPosition","routesToUse","loadingNavigation","overrideNavigation","notFoundMatches","cancelActiveDeferreds","submission","pendingActionData","pendingError","request","createClientSideRequest","findNearestBoundary","actionOutput","interruptActiveLoads","actionMatch","getTargetMatch","callLoaderOrAction","shortCircuited","type","method","routeId","isRedirectResult","startRedirectNavigation","isErrorResult","boundaryMatch","pendingActionError","isDeferredResult","handleAction","Request","fetcherSubmission","activeSubmission","matchesToLoad","revalidatingFetchers","getMatchesToLoad","updatedFetchers","markFetchRedirectsDone","rf","fetcher","revalidatingFetcher","abortPendingFetchRevalidations","f","abortFetcher","results","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","findRedirect","processLoaderData","deferredData","didAbortFetchLoads","abortStaleFetchLoads","handleLoaders","getFetcher","_temp","isFetchActionRedirect","revalidate","redirectLocation","_isFetchActionRedirect","isDifferentBasename","redirectHistoryAction","currentMatches","fetchersToLoad","all","resolveDeferredResults","setFetcherError","deleteFetcher","markFetchersDone","doneFetcher","doneKeys","landedId","yeetedKeys","updateBlocker","newBlocker","blocker","shouldBlockNavigation","currentLocation","blockerKey","blockerFunction","predicate","cancelledRouteIds","dfd","y","initialize","enableScrollRestoration","positions","getPosition","getKey","navigate","normalizedPath","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","userReplace","fetch","requestMatches","existingFetcher","abortController","fetchRequest","actionResult","loadingFetcher","revalidationRequest","loadId","loadFetcher","staleKey","handleFetcherAction","resolveDeferredData","handleFetcherLoader","dispose","clear","getBlocker","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","prependBasename","contextualMatches","activeRouteMatch","hasNakedIndexQuery","normalizeFormMethod","isFetcher","isSubmissionNavigation","toUpperCase","stripHashFromPath","searchParams","convertFormDataToSearchParams","append","values","currentUrl","nextUrl","boundaryId","navigationMatches","boundaryMatches","findIndex","getLoaderMatchesUntilBoundary","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","currentPath","loaderMatch","arg","shouldRevalidate","routeChoice","loadLazyRouteModule","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","isPropertyStaticallyDefined","isStaticRequest","isRouteRequest","requestContext","resultType","onReject","runHandler","handler","context","body","protocol","isSameBasename","response","contentType","text","statusCode","_result$init","_result$init2","deferred","resolveData","isDeferredData","URLSearchParams","File","foundError","loaderHeaders","processRouteLoaderData","newLoaderData","mergedLoaderData","reverse","find","_temp4","errorMessage","signals","isRevalidatingLoader","unwrap","getAll","handle","pathMatches","Symbol","startTransitionImpl","DataRouterContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useHref","useInRouterContext","navigator","useResolvedPath","joinedPathname","useLocation","useNavigationType","navigationType","useMatch","useIsomorphicLayoutEffect","cb","static","useNavigate","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","useNavigateStable","dataRouterContext","routePathnamesJson","parse","useNavigateUnstable","OutletContext","useOutletContext","useOutlet","Provider","useParams","routeMatch","_temp2","useRoutes","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","DefaultErrorComponent","useRouteError","stack","preStyles","padding","backgroundColor","style","fontStyle","defaultErrorElement","RenderErrorBoundary","props","super","componentDidCatch","errorInfo","render","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","reduceRight","getChildren","Component","element","hookName","ctx","useDataRouterState","useRouteContext","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","useRevalidator","UseRevalidator","useMatches","UseMatches","useLoaderData","UseLoaderData","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","_state$errors","UseRouteError","useAsyncValue","useAsyncError","blockerId","useBlocker","shouldBlock","UseBlocker","String","args","RouterProvider","fallbackElement","setStateImpl","v7_startTransition","setState","Router","DataRoutes","MemoryRouter","_ref3","historyRef","Navigate","_ref4","jsonPath","Outlet","Route","_props","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","Await","_ref7","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","pending","renderError","success","_ref8","toRender","renderMatches","updates","createMemoryRouter","_objectWithoutPropertiesLoose","excluded","sourceKeys","defaultMethod","defaultEncType","isHtmlElement","object","tagName","createSearchParams","_excluded","_excluded2","_excluded3","createBrowserRouter","parseHydrationData","createHashRouter","_window","__staticRouterHydrationData","deserializeErrors","serialized","val","__type","BrowserRouter","HashRouter","HistoryRouter","Link","ref","absoluteHref","onClick","reloadDocument","isExternal","targetUrl","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","ariaCurrentProp","className","classNameProp","styleProp","routerState","nextLocationPathname","isActive","isPending","ariaCurrent","Form","FormImpl","forwardedRef","onSubmit","fetcherKey","submit","useSubmitImpl","useFormAction","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","storageKey","useScrollRestoration","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","locationSearch","defaultSearchParams","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","fetcherRouteId","UseSubmitImpl","currentRouteId","encType","submissionTrigger","attr","FormData","isButtonElement","isInputElement","form","getFormSubmissionInfo","fetcherId","useFetcher","_route$matches","UseFetcher","createFetcherForm","load","fetcherWithComponents","useFetchers","UseFetchers","SCROLL_RESTORATION_STORAGE_KEY","_temp3","UseScrollRestoration","scrollRestoration","callback","capture","usePageHide","scrollY","sessionStorage","setItem","sessionPositions","getItem","disableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","useBeforeUnload","usePrompt","when","confirm","setTimeout"],"sourceRoot":""}