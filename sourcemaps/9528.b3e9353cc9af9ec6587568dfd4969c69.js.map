{"version":3,"file":"js/9528.1658505477422.77e68586a8eabff79dc2.js","mappings":"4MA+BA,QAzBY,SAACA,GACX,IAAMC,GAAUC,EAAAA,EAAAA,cAgBhB,OAdAC,EAAAA,EAAAA,YAAU,WACRC,SAASC,OAAOC,OAEhBF,SAASC,OAAOE,YAAY,qBAE5B,IAAMC,EAAaJ,SAASC,OAAOI,GAAG,kBAAkB,SAACC,GAAD,OACtDT,EAAQU,KAAR,WAAiBD,EAAME,OAD+B,IAIxD,OAAO,WACLJ,GACD,CACF,GAAE,IAGD,kBAAC,EAAAK,SAAD,KACE,kBAAC,KAAD,MACA,kBAAC,IAAD,CAAQC,WAAYd,IAGzB,C,wHCdD,QARiB,kBACf,kBAAC,KAAD,CAAUe,OAAOT,EAAAA,EAAAA,KAAOU,YACtB,kBAAC,gBAAD,CAAQC,UAAUC,EAAAA,EAAAA,IAAYC,OAAOC,SAASC,SAAU,IACtD,kBAAC,IAAD,OAHW,C,+LCPV,IAAMC,EAA2B,SAACC,GAAa,MAChD,UAACA,SAAD,OAAC,EAAUC,SAAS,OACtBD,EAAW,KAGb,IAAME,EAASF,EAASG,MAAM,KAAK,GAC7BC,EAASJ,EAASG,MAAM,KAAK,GAOnC,MAAO,CAHU,KAAXD,EAAgB,EAAIG,OAAOH,GAChB,KAAXE,EAAgB,GAAKC,OAAOD,GAGnC,EAEYE,EAAa,SAAbA,EAAcC,GACzB,IADoC,I,25BAAA,CAClBC,OAAOC,oBAAoBF,IADT,IAGpC,IAAK,EAAL,qBAA8B,KACtBG,EAAQH,EADc,SAGxBG,GAA0B,YAAjB,OAAOA,IAClBJ,EAAWI,EAEd,CATmC,+BAWpC,OAAOF,OAAOG,OAAOJ,EACtB,EAEYK,EAAe,SAACC,EAAaC,GACxC,OAAOD,EAAYE,QAAQF,EAAYG,UAAYF,EACpD,EAEYG,EAAgB,SAACJ,EAAaC,GACzC,OAAOD,EAAYK,YAAYL,EAAYM,cAAgBL,EAC5D,EAEYM,EAAe,SAACC,GAC3B,GAAuB,IAAnBA,EAAQC,OACV,MAAO,MAACC,OAAWA,GAGrB,IAAIC,EAAe,CAAEC,MAAO,IACxBC,EAAsB,CACxBL,QAAS,GACTM,SAAU,SAACC,EAAGC,GAAJ,OACRA,EAAWC,SAAQ,SAACC,GAAD,OAAcA,EAASJ,SAASI,EAASC,MAAzC,GADX,EAEVC,YAAa,gBAYf,OATAZ,EAAQS,SAAQ,SAACI,GAAW,MAC1BV,EAAaC,MAAMrC,KAAK8C,EAAOV,eAE/B,UAAAU,EAAOR,2BAAP,eAA4BS,UAC1BT,EAAoBL,QAAQjC,KAAK8C,EAAOR,oBAC3C,IAEDA,EAAoBU,iBAAmBV,EAAoBL,QAAQC,OAAS,EAErE,CAACE,EAAcE,EACvB,C,2ECxDKW,GAAcC,EAAAA,EAAAA,OAAK,kBACvB,0EADuB,IAMnBC,GAAkBD,EAAAA,EAAAA,OAAK,kBAC3B,2EAD2B,IAMvBE,GAAgBF,EAAAA,EAAAA,OAAK,kBACzB,2EADyB,IAMrBG,GAAoBH,EAAAA,EAAAA,OAAK,kBAC7B,iEAD6B,IAMlBI,EAAS,kBACpB,kBAAC,EAAAC,SAAD,CACEC,SACE,kBAAC,EAAAC,SAAD,KACE,kBAAC,EAAAC,QAAD,QAIJ,kBAAC,EAAAC,OAAD,KACE,kBAAC,EAAAC,MAAD,CAAOC,KAAK,eAAeC,UAAWV,IACtC,kBAAC,EAAAQ,MAAD,CAAOC,KAAK,uBAAuBC,UAAWT,IAC9C,kBAAC,EAAAO,MAAD,CAAOC,KAAK,QAAQC,UAAWb,IAC/B,kBAAC,EAAAW,MAAD,CAAOC,KAAK,YAAYC,UAAWX,IACnC,kBAAC,EAAAS,MAAD,KACE,kBAAC,EAAAG,SAAD,CAAUC,GAAG,YAdC,C,2GC1Bf,IAAMC,EAAuB,uBACvBC,EAAyB,yBACzBC,EAA2B,2BAC3BC,EAA6B,6BAC7BC,EAAoB,oBACpBC,EAAwB,wBAGxBC,EAA+B,+BAC/BC,EAAiC,iCACjCC,EAAmC,kC,sCCJ5CC,E,wFAEG,SAAS/E,IAAoB,2BAAZgF,EAAY,yBAAZA,EAAY,gBAclC,OAbAD,GAAWE,EAAAA,EAAAA,IAAY,CAAC,EAAF,CACpBC,KACAC,EAAAA,EAAAA,IAAwB,CAAEC,oBAAqB,CAAC,SAAU,YAFtC,OAGjBJ,KAGIK,SAAS,CAAEC,cAAeC,EAAAA,KAEnCR,EAASM,SAAS,CAAEG,aAAAA,EAAAA,IACpBT,EAASM,SAAS,CAAEI,iBAAAA,EAAAA,IACpBV,EAASM,SAAS,CAAEK,eAAAA,EAAAA,IACpBX,EAASM,SAAS,CAAEM,mBAAAA,EAAAA,IAEbZ,CACR,C,yoBCvBD,IAAMa,GAAerE,EAAAA,EAAAA,IAAW,CAC9BsE,MAAO,GACPC,OAAQ,EACRC,YAAa,EACbC,KAAM,GACNC,QAAS,CAAC,EACVC,gBAAgB,EAChBC,iBAAiB,IAyCnB,QAtC2B,WAAkC,IAAjCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCAC3D,OAAQA,EAAOC,MACb,IAAK,GAAL,OAAQC,EAAAA,GAAR,YACE,OAAO,EAAP,KACKH,GADL,IAEEF,gBAAgB,IAIpB,IAAK,GAAL,OAAQK,EAAAA,GAAR,cACE,OAAO,EAAP,OACKH,GADL,IAEEJ,KAAMK,EAAOG,QAAQC,KAAKA,MACvBJ,EAAOG,QAAQC,KAAKC,MAHzB,IAIER,gBAAgB,IAIpB,IAAK,GAAL,OAAQK,EAAAA,GAAR,YACE,OAAO,EAAP,KACKH,GADL,IAEED,iBAAiB,IAIrB,IAAK,GAAL,OAAQI,EAAAA,GAAR,cACE,OAAO,EAAP,OACKH,GADL,IAEEH,QAASI,EAAOG,QAAQC,KAAKA,MAC1BJ,EAAOG,QAAQC,KAAKC,MAHzB,IAIEP,iBAAiB,IAKvB,OAAOC,CACR,C,yoBC9CD,IAAMR,GAAerE,EAAAA,EAAAA,IAAW,CAC9BoF,SAAU,GACVC,WAAW,EACXF,KAAM,CACJb,MAAO,GACPC,OAAQ,EACRC,YAAa,EACbc,KAAM,gBAuCV,QAnCyB,WAAkC,IAAjCT,EAAiC,uDAAzBR,EAAcS,EAAW,uCACzD,OAAQA,EAAOC,MACb,IAAK,GAAL,OAAQC,EAAAA,GAAR,YACE,OAAO,EAAP,KACKH,GADL,IAEEQ,WAAW,IAIf,IAAK,GAAL,OAAQL,EAAAA,GAAR,cACE,OAAO,EAAP,KACKH,GADL,IAEEO,SAAUN,EAAOG,QAAQC,KAAKA,KAC9BC,KAAM,EAAF,KACCN,EAAMM,MADP,IAEFX,YAAaM,EAAOG,QAAQC,KAAKC,KAAKX,cAExCa,WAAW,IAIf,IAAK,GAAL,OAAQL,EAAAA,IACN,OAAO,EAAP,KACKH,GADL,IAEEM,KAAM,EAAF,KACCN,EAAMM,MACNL,EAAOG,WAMlB,OAAOJ,CACR,C,yoBC5CD,IAAMR,GAAerE,EAAAA,EAAAA,IAAW,CAC9BuF,IAAK,CAAC,EACNH,SAAU,GACVR,iBAAiB,EACjBD,gBAAgB,EAChBQ,KAAM,CACJb,MAAO,GACPC,OAAQ,EACRC,YAAa,EACbc,KAAM,gBAsDV,QAlDuB,WAAkC,IAAjCT,EAAiC,uDAAzBR,EAAcS,EAAW,uCACvD,OAAQA,EAAOC,MACb,IAAK,GAAL,OAAQC,EAAAA,GAAR,YACE,OAAO,EAAP,KACKH,GADL,IAEEF,gBAAgB,IAIpB,IAAK,GAAL,OAAQK,EAAAA,GAAR,cACE,OAAO,EAAP,KACKH,GADL,IAEEO,SAAUN,EAAOG,QAAQC,KAAKA,KAC9BC,KAAM,EAAF,KACCN,EAAMM,MADP,IAEFX,YAAaM,EAAOG,QAAQC,KAAKC,KAAKX,cAExCG,gBAAgB,IAIpB,IAAK,GAAL,OAAQK,EAAAA,IACN,OAAO,EAAP,KACKH,GADL,IAEEM,KAAM,EAAF,KACCN,EAAMM,MACNL,EAAOG,WAKhB,IAAK,GAAL,OAAQD,EAAAA,GAAR,YACE,OAAO,EAAP,KACKH,GADL,IAEED,iBAAiB,IAIrB,IAAK,GAAL,OAAQI,EAAAA,GAAR,cACE,OAAO,EAAP,KACKH,GADL,IAEEU,IAAKT,EAAOG,QAAQC,KAAKA,KACzBN,iBAAiB,IAKvB,OAAOC,CACR,C,yoBC7DM,IAAMR,GAAerE,EAAAA,EAAAA,IAAW,CACrCyE,KAAM,GACNY,WAAW,EACXF,KAAM,CACJb,MAAO,GACPC,OAAQ,EACRC,YAAa,EACbc,KAAM,mBAuCV,QAnCqB,WAAkC,IAAjCT,EAAiC,uDAAzBR,EAAcS,EAAW,uCACrD,OAAQA,EAAOC,MACb,IAAK,GAAL,OAAQC,EAAAA,GAAR,YACE,OAAO,EAAP,KACKH,GADL,IAEEQ,WAAW,IAIf,IAAK,GAAL,OAAQL,EAAAA,GAAR,cACE,OAAO,EAAP,KACKH,GADL,IAEEJ,KAAMK,EAAOG,QAAQC,KAAKA,KAC1BC,KAAM,EAAF,KACCN,EAAMM,MADP,IAEFX,YAAaM,EAAOG,QAAQC,KAAKC,KAAKX,cAExCa,WAAW,IAIf,IAAK,GAAL,OAAQL,EAAAA,IACN,OAAO,EAAP,KACKH,GADL,IAEEM,KAAM,EAAF,KACCN,EAAMM,MACNL,EAAOG,WAMlB,OAAOJ,CACR,C","sources":["webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/Helpers/miscHelper.js","webpack:///./src/Routes.js","webpack:///./src/Store/ActionTypes.js","webpack:///./src/Store/ReducerRegistry.js","webpack:///./src/Store/Reducers/ClusterDetailStore.js","webpack:///./src/Store/Reducers/ClusterListStore.js","webpack:///./src/Store/Reducers/CveDetailStore.js","webpack:///./src/Store/Reducers/CveListStore.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './App.scss';\n\nconst App = (props) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    insights.chrome.init();\n\n    insights.chrome.identifyApp('ocp-vulnerability');\n\n    const unregister = insights.chrome.on('APP_NAVIGATION', (event) =>\n      history.push(`/${event.navId}`)\n    );\n\n    return () => {\n      unregister();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <Routes childProps={props} />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init } from './Store/ReducerRegistry';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\n\nconst AppEntry = () => (\n  <Provider store={init().getStore()}>\n    <Router basename={getBaseName(window.location.pathname, 3)}>\n      <App />\n    </Router>\n  </Provider>\n);\n\nexport default AppEntry;\n","export const getCvssScoreFromUrlParam = (urlParam) => {\n  if (!urlParam?.includes(',')) {\n    urlParam = ',';\n  }\n\n  const urlMin = urlParam.split(',')[0];\n  const urlMax = urlParam.split(',')[1];\n\n  let min, max;\n\n  min = urlMin === '' ? 0 : Number(urlMin);\n  max = urlMax === '' ? 10 : Number(urlMax);\n\n  return [min, max];\n};\n\nexport const deepFreeze = (object) => {\n  const propNames = Object.getOwnPropertyNames(object);\n\n  for (const name of propNames) {\n    const value = object[name];\n\n    if (value && typeof value === 'object') {\n      deepFreeze(value);\n    }\n  }\n\n  return Object.freeze(object);\n};\n\nexport const subtractDays = (currentDate, toSubtract) => {\n  return currentDate.setDate(currentDate.getDate() - toSubtract);\n};\n\nexport const subtractYears = (currentDate, toSubtract) => {\n  return currentDate.setFullYear(currentDate.getFullYear() - toSubtract);\n};\n\nexport const setupFilters = (filters) => {\n  if (filters.length === 0) {\n    return [undefined, undefined];\n  }\n\n  let filterConfig = { items: [] };\n  let activeFiltersConfig = {\n    filters: [],\n    onDelete: (_, categories) =>\n      categories.forEach((category) => category.onDelete(category.chips)),\n    deleteTitle: 'Reset filter',\n  };\n\n  filters.forEach((filter) => {\n    filterConfig.items.push(filter.filterConfig);\n\n    filter.activeFiltersConfig?.isShown &&\n      activeFiltersConfig.filters.push(filter.activeFiltersConfig);\n  });\n\n  activeFiltersConfig.showDeleteButton = activeFiltersConfig.filters.length > 0;\n\n  return [filterConfig, activeFiltersConfig];\n};\n","import React, { Suspense, lazy } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst CveListPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"CveListPage\" */ './Components/SmartComponents/CveList/CveListPage'\n  )\n);\n\nconst ClusterListPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"ClusterListPage\" */ './Components/SmartComponents/ClusterList/ClusterListPage'\n  )\n);\n\nconst CveDetailPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"CveDetailPage\" */ './Components/SmartComponents/CveDetail/CveDetailPage'\n  )\n);\n\nconst ClusterDetailPage = lazy(() =>\n  import(\n    /* webpackChunkName: \"ClusterDetailPage\" */ './Components/SmartComponents/ClusterDetail/ClusterDetailPage'\n  )\n);\n\nexport const Routes = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <Switch>\n      <Route path=\"/cves/:cveId\" component={CveDetailPage} />\n      <Route path=\"/clusters/:clusterId\" component={ClusterDetailPage} />\n      <Route path=\"/cves\" component={CveListPage} />\n      <Route path=\"/clusters\" component={ClusterListPage} />\n      <Route>\n        <Redirect to=\"/cves\" />\n      </Route>\n    </Switch>\n  </Suspense>\n);\n","/* eslint-disable prettier/prettier */\n\n/* FETCHING DATA */\nexport const FETCH_CVE_LIST_TABLE = 'FETCH_CVE_LIST_TABLE';\nexport const FETCH_CVE_DETAIL_TABLE = 'FETCH_CVE_DETAIL_TABLE';\nexport const FETCH_CLUSTER_LIST_TABLE = 'FETCH_CLUSTER_LIST_TABLE';\nexport const FETCH_CLUSTER_DETAIL_TABLE = 'FETCH_CLUSTER_DETAIL_TABLE';\nexport const FETCH_CVE_DETAILS = 'FETCH_CVE_DETAILS';\nexport const FETCH_CLUSTER_DETAILS = 'FETCH_CLUSTER_DETAILS';\n\n/* CHANGING TABLE PARAMS */\nexport const CHANGE_CVE_LIST_TABLE_PARAMS = 'CHANGE_CVE_LIST_TABLE_PARAMS';\nexport const CHANGE_CVE_DETAIL_TABLE_PARAMS = 'CHANGE_CVE_DETAIL_TABLE_PARAMS';\nexport const CHANGE_CLUSTER_LIST_TABLE_PARAMS = 'CHANGE_CLUSTER_LIST_TABLE_PARAMS';\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport CveListStore from './Reducers/CveListStore';\nimport ClusterListStore from './Reducers/ClusterListStore';\nimport CveDetailStore from './Reducers/CveDetailStore';\nimport ClusterDetailStore from './Reducers/ClusterDetailStore';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware,\n  ]);\n\n  registry.register({ notifications: notificationsReducer });\n\n  registry.register({ CveListStore });\n  registry.register({ ClusterListStore });\n  registry.register({ CveDetailStore });\n  registry.register({ ClusterDetailStore });\n\n  return registry;\n}\n","import { deepFreeze } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nconst initialState = deepFreeze({\n  limit: 20,\n  offset: 0,\n  total_items: 0,\n  cves: [],\n  cluster: {},\n  isTableLoading: true,\n  isDetailLoading: true,\n});\n\nconst ClusterDetailStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CLUSTER_DETAIL_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isTableLoading: true,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAIL_TABLE}_FULFILLED`: {\n      return {\n        ...state,\n        cves: action.payload.data.data,\n        ...action.payload.data.meta,\n        isTableLoading: false,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAILS}_PENDING`: {\n      return {\n        ...state,\n        isDetailLoading: true,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_DETAILS}_FULFILLED`: {\n      return {\n        ...state,\n        cluster: action.payload.data.data,\n        ...action.payload.data.meta,\n        isDetailLoading: false,\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default ClusterDetailStore;\n","import { deepFreeze } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nconst initialState = deepFreeze({\n  clusters: [],\n  isLoading: true,\n  meta: {\n    limit: 20,\n    offset: 0,\n    total_items: 0,\n    sort: '-last_seen',\n  },\n});\n\nconst ClusterListStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CLUSTER_LIST_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CLUSTER_LIST_TABLE}_FULFILLED`: {\n      return {\n        ...state,\n        clusters: action.payload.data.data,\n        meta: {\n          ...state.meta,\n          total_items: action.payload.data.meta.total_items,\n        },\n        isLoading: false,\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CLUSTER_LIST_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          ...state.meta,\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default ClusterListStore;\n","import { deepFreeze } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nconst initialState = deepFreeze({\n  cve: {},\n  clusters: [],\n  isDetailLoading: true,\n  isTableLoading: true,\n  meta: {\n    limit: 20,\n    offset: 0,\n    total_items: 0,\n    sort: '-last_seen',\n  },\n});\n\nconst CveDetailStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CVE_DETAIL_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isTableLoading: true,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAIL_TABLE}_FULFILLED`: {\n      return {\n        ...state,\n        clusters: action.payload.data.data,\n        meta: {\n          ...state.meta,\n          total_items: action.payload.data.meta.total_items,\n        },\n        isTableLoading: false,\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CVE_DETAIL_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          ...state.meta,\n          ...action.payload,\n        },\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAILS}_PENDING`: {\n      return {\n        ...state,\n        isDetailLoading: true,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_DETAILS}_FULFILLED`: {\n      return {\n        ...state,\n        cve: action.payload.data.data,\n        isDetailLoading: false,\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default CveDetailStore;\n","import { deepFreeze } from '../../Helpers/miscHelper';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const initialState = deepFreeze({\n  cves: [],\n  isLoading: true,\n  meta: {\n    limit: 20,\n    offset: 0,\n    total_items: 0,\n    sort: '-publish_date',\n  },\n});\n\nconst CveListStore = (state = initialState, action) => {\n  switch (action.type) {\n    case `${ActionTypes.FETCH_CVE_LIST_TABLE}_PENDING`: {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    }\n\n    case `${ActionTypes.FETCH_CVE_LIST_TABLE}_FULFILLED`: {\n      return {\n        ...state,\n        cves: action.payload.data.data,\n        meta: {\n          ...state.meta,\n          total_items: action.payload.data.meta.total_items,\n        },\n        isLoading: false,\n      };\n    }\n\n    case `${ActionTypes.CHANGE_CVE_LIST_TABLE_PARAMS}`: {\n      return {\n        ...state,\n        meta: {\n          ...state.meta,\n          ...action.payload,\n        },\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default CveListStore;\n"],"names":["props","history","useHistory","useEffect","insights","chrome","init","identifyApp","unregister","on","event","push","navId","Fragment","childProps","store","getStore","basename","getBaseName","window","location","pathname","getCvssScoreFromUrlParam","urlParam","includes","urlMin","split","urlMax","Number","deepFreeze","object","Object","getOwnPropertyNames","value","freeze","subtractDays","currentDate","toSubtract","setDate","getDate","subtractYears","setFullYear","getFullYear","setupFilters","filters","length","undefined","filterConfig","items","activeFiltersConfig","onDelete","_","categories","forEach","category","chips","deleteTitle","filter","isShown","showDeleteButton","CveListPage","lazy","ClusterListPage","CveDetailPage","ClusterDetailPage","Routes","Suspense","fallback","Bullseye","Spinner","Switch","Route","path","component","Redirect","to","FETCH_CVE_LIST_TABLE","FETCH_CVE_DETAIL_TABLE","FETCH_CLUSTER_LIST_TABLE","FETCH_CLUSTER_DETAIL_TABLE","FETCH_CVE_DETAILS","FETCH_CLUSTER_DETAILS","CHANGE_CVE_LIST_TABLE_PARAMS","CHANGE_CVE_DETAIL_TABLE_PARAMS","CHANGE_CLUSTER_LIST_TABLE_PARAMS","registry","middleware","getRegistry","promiseMiddleware","notificationsMiddleware","errorDescriptionKey","register","notifications","notificationsReducer","CveListStore","ClusterListStore","CveDetailStore","ClusterDetailStore","initialState","limit","offset","total_items","cves","cluster","isTableLoading","isDetailLoading","state","action","type","ActionTypes","payload","data","meta","clusters","isLoading","sort","cve"],"sourceRoot":""}