{"version":3,"file":"js/9545.1666181237708.12b2da9fc42896492b74.js","mappings":"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","sources":["webpack:///./src/Components/PresentationalComponents/ErrorHandler.js","webpack:///./src/Components/SmartComponents/Filters/CheckboxFilter.js","webpack:///./src/Components/SmartComponents/Filters/TextFilter.js","webpack:///./src/Components/SmartComponents/Generic/BaseTableBody.js","webpack:///./src/Components/SmartComponents/Generic/BaseToolbar.js","webpack:///./src/Components/PresentationalComponents/BottomPagination.js","webpack:///./src/Components/SmartComponents/Generic/BaseTable.js","webpack:///./src/Helpers/apiHelper.js","webpack:///./src/Helpers/hooks.js","webpack:///./src/Store/Actions.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { InvalidObject } from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nconst ErrorHandler = ({ error, children }) => {\n  if (!error) {\n    return children;\n  }\n\n  const parsedCode = parseInt(error?.status);\n\n  switch (parsedCode) {\n    case 403:\n      return <NotAuthorized />;\n\n    case 404:\n      return <InvalidObject />;\n\n    case 500:\n    case 502:\n    case 503:\n      return <Unavailable />;\n\n    default:\n      return <ErrorState />;\n  }\n};\n\nErrorHandler.propTypes = {\n  error: propTypes.shape({\n    status: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  }),\n  children: propTypes.node,\n};\n\nexport default ErrorHandler;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst checkboxFilter = ({\n  urlParam,\n  label,\n  value,\n  placeholder,\n  items,\n  apply,\n  chipLabel,\n}) => {\n  const onValuesChanged = (values) => {\n    apply({\n      [urlParam]: values.join(','),\n      offset: 0,\n    });\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.checkbox,\n    urlParam,\n    key: urlParam,\n    filterValues: {\n      onChange: (event, value) => {\n        onValuesChanged(value);\n      },\n      items,\n      value: value ? value.split(',') : [],\n      placeholder,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: (chips) => {\n      const itemsToRemove = chips.map((chip) => chip.value);\n\n      const newValue = value\n        .split(',')\n        .filter((value) => !itemsToRemove.includes(value));\n\n      onValuesChanged(newValue);\n    },\n    key: urlParam,\n    category: chipLabel,\n    chips: items\n      .filter((item) => value?.split(',').includes(item.value))\n      .map((item) => ({ name: item.label, value: item.value })),\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default checkboxFilter;\n","import { useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst useTextFilter = ({\n  urlParam,\n  label,\n  placeholder,\n  value,\n  apply,\n  chipLabel,\n}) => {\n  const [searchValue, setSearchValue] = useState();\n  const [handleSearch] = useState(() =>\n    debounce((newValue) => {\n      apply({ [urlParam]: newValue, offset: 0 });\n    }, 400)\n  );\n\n  useEffect(() => setSearchValue(value), [value]);\n\n  const filterConfig = {\n    type: conditionalFilterType.text,\n    label: label,\n    key: urlParam,\n    filterValues: {\n      'aria-label': 'search-field',\n      id: `text-filter-${urlParam}`,\n      onChange: (event, value) => {\n        setSearchValue(value);\n        handleSearch(value);\n      },\n      placeholder,\n      value: searchValue,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: () => apply({ [urlParam]: undefined, offset: 0 }),\n    key: urlParam,\n    category: chipLabel,\n    chips: [\n      {\n        name: value,\n      },\n    ],\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default useTextFilter;\n","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport {\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n  ExpandableRowContent,\n  SortByDirection,\n  sortable,\n} from '@patternfly/react-table';\nimport SkeletonTable from '@redhat-cloud-services/frontend-components/SkeletonTable/SkeletonTable';\nimport { TableVariant } from '@patternfly/react-table';\nimport { DEFAULT_LIMIT } from '../../../Helpers/constants';\n\nconst BaseTableBody = ({\n  isLoading,\n  columns,\n  rows,\n  isExpandable = false,\n  emptyState,\n  sortParam,\n  perPage,\n  apply,\n}) => {\n  const [expandedRows, setExpandedRows] = useState([]);\n  const [areAllRowsExpanded, setAreAllRowsExpanded] = useState(false);\n\n  useEffect(() => {\n    setAreAllRowsExpanded(\n      rows.length > 0 && rows.length === expandedRows.length\n    );\n  }, [expandedRows]);\n\n  useEffect(() => {\n    areAllRowsExpanded && setExpandedRows(rows.map((row) => row.key));\n  }, [rows]);\n\n  const onExpandRow = (row, isExpanding) =>\n    setExpandedRows((prevExpanded) => {\n      const otherExpandedRows = prevExpanded.filter((r) => r !== row);\n      return isExpanding ? [...otherExpandedRows, row] : otherExpandedRows;\n    });\n\n  const isRowExpanded = (row) => expandedRows.includes(row);\n\n  const createSortBy = (columns, sortParam, columnIndex) => {\n    if (rows.length === 0 || !sortParam) {\n      return {};\n    }\n\n    const direction =\n      sortParam[0] === '-' ? SortByDirection.desc : SortByDirection.asc;\n\n    sortParam = sortParam.replace(/^(-|\\+)/, '').split(',')[0];\n\n    const selectedColumnIndex = columns.findIndex(\n      (item) => item.sortParam === sortParam\n    );\n\n    return {\n      index: selectedColumnIndex,\n      direction,\n      defaultDirection:\n        columns[columnIndex]?.sortDefaultDirection ?? SortByDirection.desc,\n    };\n  };\n\n  const getSortParams = (columnIndex) => ({\n    sortBy: createSortBy(columns, sortParam, columnIndex),\n    onSort: (event, index, direction) => {\n      let columnName = columns[columnIndex].sortParam;\n\n      if (direction === SortByDirection.desc) {\n        columnName = '-' + columnName;\n      }\n\n      rows.length > 0 && apply({ sort: columnName });\n    },\n    columnIndex,\n  });\n\n  return isLoading ? (\n    <SkeletonTable\n      colSize={columns.length}\n      rowSize={perPage || DEFAULT_LIMIT}\n      variant={TableVariant.compact}\n      columns={columns.map((column) =>\n        column.sortParam ? { ...column, transforms: [sortable] } : column\n      )}\n      sortBy={createSortBy(columns, sortParam)}\n    />\n  ) : (\n    <TableComposable variant={TableVariant.compact} isStickyHeader>\n      <Thead>\n        <Tr>\n          {isExpandable && rows.length > 0 && (\n            <Th\n              expand={{\n                onToggle: () =>\n                  setExpandedRows(\n                    areAllRowsExpanded ? [] : rows.map((row) => row.key)\n                  ),\n                // looks like Patternfly has this condition reversed\n                areAllExpanded: !areAllRowsExpanded,\n              }}\n              ouiaId=\"expand-all\"\n            />\n          )}\n          {columns.map((column, index) => (\n            <Th\n              key={column.title}\n              sort={column.sortParam && getSortParams(index)}\n            >\n              {column.title}\n            </Th>\n          ))}\n        </Tr>\n      </Thead>\n      {rows.length === 0 ? (\n        <Tbody>\n          <Tr>\n            <Td colSpan={100}>{emptyState}</Td>\n          </Tr>\n        </Tbody>\n      ) : (\n        rows.map((row, rowIndex) => (\n          <Tbody key={rowIndex} isExpanded={isRowExpanded(row.key)}>\n            <Tr>\n              {isExpandable && (\n                <Td\n                  expand={{\n                    rowIndex,\n                    isExpanded: isRowExpanded(row.key),\n                    onToggle: () =>\n                      onExpandRow(row.key, !isRowExpanded(row.key)),\n                  }}\n                />\n              )}\n              {row.cells.map((cell, cellIndex) => (\n                <Td key={cellIndex} dataLabel={columns[cellIndex].title}>\n                  {cell}\n                </Td>\n              ))}\n            </Tr>\n            {isExpandable && (\n              <Tr isExpanded={isRowExpanded(row.key)}>\n                <Td colSpan={100}>\n                  <ExpandableRowContent>\n                    {row.expandableContent}\n                  </ExpandableRowContent>\n                </Td>\n              </Tr>\n            )}\n          </Tbody>\n        ))\n      )}\n    </TableComposable>\n  );\n};\n\nBaseTableBody.propTypes = {\n  isLoading: propTypes.bool.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node.isRequired,\n      sortParam: propTypes.string,\n      sortDefaultDirection: propTypes.oneOf([undefined, 'asc', 'desc']),\n    })\n  ).isRequired,\n  rows: propTypes.arrayOf(\n    propTypes.shape({\n      key: propTypes.string.isRequired,\n      cells: propTypes.arrayOf(propTypes.node).isRequired,\n      expandableContent: propTypes.node,\n    })\n  ).isRequired,\n  isExpandable: propTypes.bool,\n  emptyState: propTypes.node.isRequired,\n  sortParam: propTypes.string,\n  perPage: propTypes.number,\n  apply: propTypes.func,\n};\n\nexport default BaseTableBody;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { Skeleton } from '@patternfly/react-core';\n\nconst BaseToolbar = ({\n  isLoading,\n  page,\n  perPage,\n  itemCount,\n  apply,\n  filterConfig,\n  activeFiltersConfig,\n  onExport,\n}) => {\n  return (\n    <PrimaryToolbar\n      pagination={\n        isLoading ? (\n          <Skeleton fontSize=\"xl\" width=\"200px\" style={{ margin: 10 }} />\n        ) : (\n          {\n            isDisabled: itemCount === 0,\n            itemCount,\n            page,\n            perPage,\n            ouiaId: 'pagination-top',\n            onSetPage: (event, page, limit, offset) => apply({ limit, offset }),\n            onPerPageSelect: (event, limit) => apply({ limit, offset: 0 }),\n          }\n        )\n      }\n      filterConfig={filterConfig}\n      activeFiltersConfig={activeFiltersConfig}\n      exportConfig={\n        onExport && {\n          isDisabled: itemCount === 0,\n          onSelect: (e, format) => onExport(format),\n        }\n      }\n    />\n  );\n};\n\nBaseToolbar.propTypes = {\n  isLoading: propTypes.bool,\n  page: propTypes.number,\n  perPage: propTypes.number,\n  itemCount: propTypes.number,\n  apply: propTypes.func,\n  filterConfig: propTypes.shape({\n    items: propTypes.array,\n  }),\n  activeFiltersConfig: propTypes.shape({\n    filters: propTypes.array,\n  }),\n  onExport: propTypes.func,\n};\n\nexport default BaseToolbar;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Pagination,\n  PaginationVariant,\n  Skeleton,\n} from '@patternfly/react-core';\n\nconst BottomPagination = ({ isLoading, page, perPage, itemCount, apply }) => {\n  return isLoading ? (\n    <div className=\"pf-c-pagination pf-m-bottom\">\n      <Skeleton fontSize=\"xl\" width=\"350px\" style={{ margin: 10 }} />\n    </div>\n  ) : (\n    <Pagination\n      page={page}\n      itemCount={itemCount}\n      perPage={perPage}\n      variant={PaginationVariant.bottom}\n      ouiaId=\"pagination-bottom\"\n      isDisabled={itemCount === 0}\n      onSetPage={(event, page, limit, offset) => apply({ limit, offset })}\n      onPerPageSelect={(event, limit) => apply({ limit, offset: 0 })}\n    />\n  );\n};\n\nBottomPagination.propTypes = {\n  isLoading: propTypes.bool,\n  page: propTypes.number,\n  perPage: propTypes.number,\n  itemCount: propTypes.number,\n  apply: propTypes.func,\n};\n\nexport default BottomPagination;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport BaseTableBody from '../Generic/BaseTableBody';\nimport BaseToolbar from '../Generic/BaseToolbar';\nimport BottomPagination from '../../PresentationalComponents/BottomPagination';\nimport ErrorHandler from '../../PresentationalComponents/ErrorHandler';\n\nconst BaseTable = ({\n  isLoading,\n  isExpandable,\n  rows,\n  columns,\n  filterConfig = [],\n  activeFiltersConfig = [],\n  meta,\n  error,\n  emptyState,\n  apply,\n  onExport,\n}) => {\n  const { offset, limit, total_items, sort } = meta;\n\n  return (\n    <ErrorHandler error={error}>\n      <BaseToolbar\n        isLoading={isLoading}\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n        filterConfig={filterConfig}\n        activeFiltersConfig={activeFiltersConfig}\n        onExport={onExport}\n      />\n      <BaseTableBody\n        isLoading={isLoading}\n        columns={columns}\n        rows={rows}\n        isExpandable={isExpandable}\n        emptyState={emptyState}\n        sortParam={sort}\n        perPage={limit}\n        apply={apply}\n      />\n      <BottomPagination\n        isLoading={isLoading}\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n      />\n    </ErrorHandler>\n  );\n};\n\nBaseTable.propTypes = {\n  isLoading: propTypes.bool.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node.isRequired,\n      sortParam: propTypes.string,\n    })\n  ).isRequired,\n  rows: propTypes.arrayOf(\n    propTypes.shape({\n      key: propTypes.string.isRequired,\n      cells: propTypes.arrayOf(propTypes.node).isRequired,\n      expandableContent: propTypes.node,\n    })\n  ).isRequired,\n  isExpandable: propTypes.bool,\n  emptyState: propTypes.node.isRequired,\n  sortParam: propTypes.string,\n  filterConfig: propTypes.object,\n  activeFiltersConfig: propTypes.object,\n  meta: propTypes.shape({\n    offset: propTypes.number,\n    limit: propTypes.number,\n    total_items: propTypes.number,\n    sort: propTypes.string,\n  }),\n  error: propTypes.object,\n  apply: propTypes.func,\n  onExport: propTypes.func,\n};\n\nexport default BaseTable;\n","import axios from 'axios';\n\nconst instance = axios.create();\n\nconst errorInterceptor = ({ response }) => {\n  if (!axios.isCancel(response) && response?.data?.error) {\n    throw response?.data.error;\n  }\n\n  return response;\n};\n\ninstance.interceptors.response.use(null, errorInterceptor);\n\nexport const fetchCves = async (params) => {\n  return instance.get('/api/ocp-vulnerability/v1/cves', { params });\n};\n\nexport const fetchClusters = async (params) => {\n  return instance.get('/api/ocp-vulnerability/v1/clusters', { params });\n};\n\nexport const fetchExposedClusters = async (params, cveId) => {\n  return instance.get(\n    `/api/ocp-vulnerability/v1/cves/${cveId}/exposed_clusters`,\n    {\n      params,\n    }\n  );\n};\n\nexport const fetchCveDetails = async (cveId) => {\n  return instance.get(`/api/ocp-vulnerability/v1/cves/${cveId}`);\n};\n\nexport const fetchClusterCves = async (params, clusterId) => {\n  return instance.get(`/api/ocp-vulnerability/v1/clusters/${clusterId}/cves`, {\n    params,\n  });\n};\n\nexport const fetchClusterDetails = async (clusterId) => {\n  return instance.get(`/api/ocp-vulnerability/v1/clusters/${clusterId}`);\n};\n","import { useEffect, useState } from 'react';\nimport qs from 'query-string';\nimport { useDispatch } from 'react-redux';\nimport { EXPOSED_CLUSTERS_OPTIONS, PUBLISHED_OPTIONS } from './constants';\nimport {\n  addNotification,\n  clearNotifications,\n} from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\n\n// TODO: Consider moving some of these non-hook functions to constants.js or miscHelper.js\n\nexport const useLocalStorage = (key) => {\n  const [sessionValue, setSessionValue] = useState(localStorage.getItem(key));\n\n  const setValue = (newValue) => {\n    setSessionValue(newValue);\n    localStorage.setItem(key, newValue);\n  };\n\n  return [sessionValue, setValue];\n};\n\nexport function filterParams(urlParams, allowedParams) {\n  const paramsCopy = { ...urlParams };\n\n  Object.entries(paramsCopy)\n    .filter(([key, value]) => !allowedParams.includes(key) || value === '')\n    .forEach(([key]) => delete paramsCopy[key]);\n\n  return paramsCopy;\n}\n\nconst transformPublishedParam = (urlParams) => {\n  const formatDate = (timestamp) => {\n    const pad = (number) => `${`${number}`.length === 1 ? '0' : ''}${number}`;\n\n    const date = new Date(timestamp);\n\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1; // month is zero indexed\n    const day = date.getDate();\n\n    return `${year}-${pad(month)}-${pad(day)}`;\n  };\n\n  if (urlParams.published) {\n    const option = PUBLISHED_OPTIONS.find(\n      (option) => option.value === urlParams.published\n    );\n\n    urlParams.published = `${option.from ? formatDate(option.from) : ''},${\n      option.to ? formatDate(option.to) : ''\n    }`;\n  }\n\n  return urlParams;\n};\n\nconst transformExposedClustersParam = (urlParams) => {\n  if (urlParams.affected_clusters) {\n    urlParams.affected_clusters = EXPOSED_CLUSTERS_OPTIONS.map((item) =>\n      urlParams.affected_clusters.split(',').includes(item.value)\n        ? 'true'\n        : 'false'\n    ).join(',');\n  }\n\n  return urlParams;\n};\n\nconst transformClusterSeverityParam = (urlParams) => {\n  if (urlParams.cluster_severity) {\n    if (urlParams.cluster_severity.split(',').includes('any')) {\n      urlParams.cluster_severity = undefined;\n    }\n  } else {\n    urlParams.cluster_severity = 'low,moderate,important,critical';\n  }\n\n  return urlParams;\n};\n\n// when creating additional transformer in the future\n// create a new function for it and then add the function to this array\nconst URL_TRANSFORMERS = [\n  transformPublishedParam,\n  transformExposedClustersParam,\n  transformClusterSeverityParam,\n];\n\nconst transformUrlParamsBeforeFetching = (urlParams) => {\n  let newParams = { ...urlParams, total_items: undefined };\n\n  URL_TRANSFORMERS.forEach((transformer) => {\n    newParams = transformer(newParams);\n  });\n\n  return newParams;\n};\n\nconst NUMERICAL_URL_PARAMS = ['limit', 'offset'];\n\nexport const useUrlParams = (allowedParams) => {\n  const getUrlParams = () => {\n    const url = new URL(window.location);\n    return filterParams(qs.parse(url.search), allowedParams);\n  };\n\n  const setUrlParams = (newParams) => {\n    const url = new URL(window.location);\n    const queryParams = qs.stringify(newParams);\n\n    window.history.replaceState(\n      null,\n      null,\n      `${url.origin}${url.pathname}?${queryParams}`\n    );\n  };\n\n  return [getUrlParams, setUrlParams];\n};\n\nexport const useUrlBoundParams = ({\n  allowedParams,\n  initialParams,\n  additionalParam,\n  fetchAction,\n  changeParamsAction,\n}) => {\n  const dispatch = useDispatch();\n\n  const [getUrlParams, setUrlParams] = useUrlParams(allowedParams);\n\n  useEffect(() => {\n    if (window.location.search === '') {\n      apply({ ...initialParams });\n    }\n  }, [window.location.search]);\n\n  useEffect(() => {\n    const initialUrlParams = getUrlParams();\n\n    apply({ ...initialParams, ...initialUrlParams });\n  }, []);\n\n  const apply = (newParams, isReset = false) => {\n    const previousUrlParams = getUrlParams();\n\n    let combinedParams = isReset\n      ? { ...newParams }\n      : { ...previousUrlParams, ...newParams };\n\n    // convert numerical params to numbers\n    for (const property in combinedParams) {\n      if (NUMERICAL_URL_PARAMS.includes(property)) {\n        combinedParams[property] = Number(combinedParams[property]);\n      }\n    }\n\n    dispatch(changeParamsAction(combinedParams));\n\n    const filteredParams = filterParams(combinedParams, allowedParams);\n\n    dispatch(\n      fetchAction(\n        transformUrlParamsBeforeFetching(filteredParams),\n        additionalParam\n      )\n    );\n\n    setUrlParams(filteredParams);\n  };\n\n  return apply;\n};\n\nexport const useExport = (filenamePrefix, fetchAction, fetchActionParam) => {\n  const dispatch = useDispatch();\n\n  const DEFAULT_PARAMS = {\n    report: true,\n  };\n\n  const onExport = async (format, params) => {\n    dispatch(\n      addNotification({\n        variant: 'info',\n        title:\n          'Preparing export. Once complete, your download will start automatically.',\n      })\n    );\n\n    const formattedDate =\n      new Date().toISOString().replace(/[T:]/g, '-').split('.')[0] + '-utc';\n\n    const payload = await fetchAction(\n      {\n        ...transformUrlParamsBeforeFetching(params),\n        ...DEFAULT_PARAMS,\n        data_format: format,\n      },\n      fetchActionParam\n    );\n\n    let data =\n      format === 'json' ? JSON.stringify(payload.data.data) : payload.data.data;\n\n    downloadFile(data, filenamePrefix + formattedDate, format);\n\n    dispatch(clearNotifications());\n\n    dispatch(\n      addNotification({\n        variant: 'success',\n        title: 'Downloading export',\n      })\n    );\n  };\n\n  return onExport;\n};\n","import * as ActionTypes from '../Store/ActionTypes';\nimport * as api from '../Helpers/apiHelper';\n\n// TODO: Consider adding prefix to distinguish from API functions\n\n/* FETCHING DATA */\nexport const fetchCveListTable = (params) => ({\n  type: ActionTypes.FETCH_CVE_LIST_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchCves(params),\n});\n\nexport const fetchClusterListTable = (params) => ({\n  type: ActionTypes.FETCH_CLUSTER_LIST_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchClusters(params),\n});\n\nexport const fetchCveDetailTable = (cveId, params) => ({\n  type: ActionTypes.FETCH_CVE_DETAIL_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchExposedClusters(cveId, params),\n});\n\nexport const fetchCveDetails = (cveId, params) => ({\n  type: ActionTypes.FETCH_CVE_DETAILS,\n  meta: {\n    timestamp: new Date(),\n    noNotificationOnError: true,\n  },\n  payload: () => api.fetchCveDetails(cveId, params),\n});\n\nexport const fetchClusterDetailTable = (clusterId, params) => ({\n  type: ActionTypes.FETCH_CLUSTER_DETAIL_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => api.fetchClusterCves(clusterId, params),\n});\n\nexport const fetchClusterDetails = (clusterId, params) => ({\n  type: ActionTypes.FETCH_CLUSTER_DETAILS,\n  meta: {\n    timestamp: new Date(),\n    noNotificationOnError: true,\n  },\n  payload: () => api.fetchClusterDetails(clusterId, params),\n});\n\n/* CHANGING TABLE PARAMS */\nexport const changeCveListTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CVE_LIST_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n\nexport const changeClusterListTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CLUSTER_LIST_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n\nexport const changeCveDetailsTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CVE_DETAIL_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n\nexport const changeClusterDetailsTableParams = (params) => ({\n  type: ActionTypes.CHANGE_CLUSTER_DETAIL_TABLE_PARAMS,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => params,\n});\n"],"names":["ErrorHandler","error","children","parsedCode","parseInt","status","propTypes","urlParam","label","value","placeholder","items","apply","chipLabel","onValuesChanged","values","join","filterConfig","type","conditionalFilterType","key","filterValues","onChange","event","split","activeFiltersConfig","isShown","onDelete","chips","itemsToRemove","map","chip","newValue","filter","includes","category","item","name","useState","searchValue","setSearchValue","debounce","handleSearch","useEffect","s","id","undefined","BaseTableBody","isLoading","columns","rows","isExpandable","emptyState","sortParam","perPage","expandedRows","setExpandedRows","areAllRowsExpanded","setAreAllRowsExpanded","length","row","isRowExpanded","createSortBy","columnIndex","direction","SortByDirection","replace","selectedColumnIndex","findIndex","index","defaultDirection","sortDefaultDirection","colSize","rowSize","DEFAULT_LIMIT","variant","TableVariant","column","transforms","sortable","sortBy","TableComposable","isStickyHeader","Thead","Tr","Th","expand","onToggle","areAllExpanded","ouiaId","title","sort","onSort","columnName","Tbody","Td","colSpan","rowIndex","isExpanded","isExpanding","prevExpanded","otherExpandedRows","r","onExpandRow","cells","cell","cellIndex","dataLabel","ExpandableRowContent","expandableContent","isRequired","BaseToolbar","page","itemCount","onExport","PrimaryToolbar","pagination","Skeleton","fontSize","width","style","margin","isDisabled","onSetPage","limit","offset","onPerPageSelect","exportConfig","onSelect","e","format","filters","BottomPagination","className","Pagination","PaginationVariant","BaseTable","meta","total_items","instance","axios","interceptors","response","use","data","fetchCves","params","get","fetchClusters","fetchExposedClusters","cveId","fetchCveDetails","fetchClusterCves","clusterId","fetchClusterDetails","useLocalStorage","localStorage","getItem","sessionValue","setSessionValue","setItem","filterParams","urlParams","allowedParams","paramsCopy","Object","entries","forEach","URL_TRANSFORMERS","formatDate","timestamp","pad","number","date","Date","year","getFullYear","month","getMonth","day","getDate","published","option","PUBLISHED_OPTIONS","from","to","affected_clusters","EXPOSED_CLUSTERS_OPTIONS","cluster_severity","transformUrlParamsBeforeFetching","newParams","transformer","NUMERICAL_URL_PARAMS","useUrlBoundParams","initialParams","additionalParam","fetchAction","changeParamsAction","dispatch","useDispatch","url","URL","window","location","qs","search","queryParams","history","replaceState","origin","pathname","useUrlParams","getUrlParams","setUrlParams","initialUrlParams","isReset","previousUrlParams","combinedParams","property","Number","filteredParams","useExport","filenamePrefix","fetchActionParam","DEFAULT_PARAMS","report","addNotification","formattedDate","toISOString","data_format","payload","JSON","stringify","downloadFile","clearNotifications","fetchCveListTable","ActionTypes","api","fetchClusterListTable","fetchCveDetailTable","noNotificationOnError","fetchClusterDetailTable","changeCveListTableParams","changeClusterListTableParams","changeCveDetailsTableParams","changeClusterDetailsTableParams"],"sourceRoot":""}