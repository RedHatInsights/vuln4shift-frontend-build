{"version":3,"file":"js/ClusterDetailPage.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/Components/PresentationalComponents/EmptyStates/NoMatchingCves.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/NoMatchingItems.js","webpack:///./src/Components/PresentationalComponents/WithLoader.js","webpack:///./src/Components/SmartComponents/ClusterDetail/ClusterCveTable.js","webpack:///./src/Components/SmartComponents/ClusterDetail/ClusterDetailPageHeader.js","webpack:///./src/Components/SmartComponents/ClusterDetail/ClusterImagesTable.js","webpack:///./src/Components/PresentationalComponents/TableTabs.js","webpack:///./src/Components/SmartComponents/ClusterDetail/ClusterDetailPage.js","webpack:///./src/Components/SmartComponents/Filters/RadioFilter.js","webpack:///./src/Components/PresentationalComponents/RangeFilterComponent.js","webpack:///./src/Components/SmartComponents/Filters/RangeFilter.js"],"sourcesContent":["import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  Bullseye,\n  EmptyStateHeader,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst NoMatchingCves = () => {\n  const CveDatabaseLink = (\n    <a\n      href=\"https://access.redhat.com/security/security-updates/#/cve\"\n      target=\"__blank\"\n      rel=\"noopener noreferrer\"\n      className=\"nowrap\"\n    >\n      Red Hat CVE Database <ExternalLinkAltIcon />\n    </a>\n  );\n\n  const ProdSecLink = (\n    <a\n      href=\"https://access.redhat.com/security/team/contact/\"\n      target=\"__blank\"\n      rel=\"noopener noreferrer\"\n      className=\"nowrap\"\n    >\n      Red Hat Product Security <ExternalLinkAltIcon />\n    </a>\n  );\n\n  return (\n    <Bullseye>\n      <EmptyState variant=\"lg\">\n        <EmptyStateHeader\n          titleText=\"No matching CVEs found\"\n          headingLevel=\"h5\"\n        />\n        <EmptyStateBody>\n          To continue, edit your filter settings and search again.\n          <br />\n          <br />\n          As of today, Insights Vulnerability shows CVEs with Errata. It is\n          possible the CVE you are searching for does not yet have an associated\n          Errata. Please check the {CveDatabaseLink} or if you would like more\n          information, contact {ProdSecLink}\n        </EmptyStateBody>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nexport default NoMatchingCves;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  Bullseye,\n  EmptyStateHeader,\n} from '@patternfly/react-core';\n\nconst NoMatchingItems = ({ items = 'items' }) => (\n  <Bullseye>\n    <EmptyState variant=\"lg\">\n      <EmptyStateHeader\n        titleText={`No matching ${items} found`}\n        headingLevel=\"h5\"\n      />\n      <EmptyStateBody>\n        To continue, edit your filter settings and search again.\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nNoMatchingItems.propTypes = {\n  items: propTypes.string,\n};\n\nexport default NoMatchingItems;\n","import {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport SkeletonTable from '@redhat-cloud-services/frontend-components/SkeletonTable/SkeletonTable';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Skeleton as PfSkeleton } from '@patternfly/react-core';\n\nexport const LoaderType = {\n  spinner: 'spinner',\n  table: 'table',\n  compactTable: 'compactTable',\n  rectangle: 'rectangle',\n  inlineSkeleton: 'inlineSkeleton',\n  skeleton: 'skeleton',\n};\n\nconst WithLoader = ({ isLoading, variant, children, size, ...props }) => {\n  if (isLoading) {\n    switch (variant) {\n      case LoaderType.spinner:\n        return <Spinner centered {...props} />;\n      case LoaderType.table:\n        return <SkeletonTable {...props} />;\n      case LoaderType.compactTable:\n        return <SkeletonTable variant={TableVariant.compact} {...props} />;\n      case LoaderType.rectangle:\n        return <Skeleton shape=\"square\" {...props} />;\n      case LoaderType.inlineSkeleton:\n        return (\n          <PfSkeleton\n            size={size ?? SkeletonSize.lg}\n            {...props}\n            style={{ display: 'inline-block', ...props.style }}\n          />\n        );\n      default:\n        return <Skeleton size={size ?? SkeletonSize.lg} {...props} />;\n    }\n  }\n\n  return children;\n};\n\nWithLoader.propTypes = {\n  isLoading: propTypes.bool,\n  variant: propTypes.oneOf(Object.keys(LoaderType)),\n  style: propTypes.object,\n  children: propTypes.node,\n  size: propTypes.string,\n};\n\nexport default WithLoader;\n","import React from 'react';\nimport {\n  CLUSTER_CVES_ALLOWED_PARAMS,\n  CLUSTER_CVES_DEFAULT_FILTERS,\n  CLUSTER_CVES_EXPORT_PREFIX,\n  CLUSTER_CVES_TABLE_COLUMNS,\n  CLUSTER_CVES_TABLE_MAPPER,\n  PUBLISHED_OPTIONS,\n  SEVERITY_OPTIONS,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport {\n  changeClusterCvesTableParams,\n  fetchClusterCveTable,\n} from '../../../Store/Actions';\nimport { useParams } from 'react-router-dom';\nimport { useExport, useUrlBoundParams } from '../../../Helpers/hooks';\nimport {\n  getCvssScoreFromUrlParam,\n  setupFilters,\n} from '../../../Helpers/miscHelper';\nimport useTextFilter from '../Filters/TextFilter';\nimport useRangeFilter from '../Filters/RangeFilter';\nimport checkboxFilter from '../Filters/CheckboxFilter';\nimport radioFilter from '../Filters/RadioFilter';\nimport BaseTable from '../Generic/BaseTable';\nimport NoMatchingCves from '../../PresentationalComponents/EmptyStates/NoMatchingCves';\nimport { fetchClusterCves } from '../../../Helpers/apiHelper';\n\nconst ClusterCveTable = () => {\n  const params = useParams();\n\n  const { cves, isTableLoading, meta, error } = useSelector(\n    ({ ClusterCvesStore }) => ClusterCvesStore\n  );\n\n  const apply = useUrlBoundParams({\n    allowedParams: CLUSTER_CVES_ALLOWED_PARAMS,\n    initialParams: meta,\n    additionalParam: params.clusterId,\n    fetchAction: fetchClusterCveTable,\n    changeParamsAction: changeClusterCvesTableParams,\n  });\n\n  const { search, cvss_score, severity, published } = meta;\n\n  const [cvss_score_min, cvss_score_max] = getCvssScoreFromUrlParam(cvss_score);\n\n  const onExport = useExport({\n    filenamePrefix: CLUSTER_CVES_EXPORT_PREFIX,\n    fetchAction: fetchClusterCves,\n    fetchActionParam: params.clusterId,\n    allowedParams: CLUSTER_CVES_ALLOWED_PARAMS,\n  });\n\n  const filters = [\n    useTextFilter({\n      urlParam: 'search',\n      label: 'CVE',\n      placeholder: 'Search ID or description',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n    radioFilter({\n      urlParam: 'published',\n      label: 'Publish date',\n      value: published,\n      items: PUBLISHED_OPTIONS,\n      placeholder: 'Filter by publish date',\n      apply,\n      chipLabel: 'Publish date',\n    }),\n    checkboxFilter({\n      urlParam: 'severity',\n      label: 'Severity',\n      value: severity,\n      items: SEVERITY_OPTIONS,\n      placeholder: 'Filter by severity',\n      apply,\n      chipLabel: 'Severity',\n    }),\n    useRangeFilter({\n      urlParam: 'cvss_score',\n      label: 'CVSS score',\n      minMaxLabels: {\n        min: 'Min CVSS',\n        max: 'Max CVSS',\n      },\n      range: {\n        min: 0,\n        max: 10,\n      },\n      value: {\n        min: cvss_score_min,\n        max: cvss_score_max,\n      },\n      placeholder: 'Filter by CVSS score range',\n      apply,\n      chipLabel: 'CVSS base score',\n    }),\n  ];\n\n  const [filterConfig, activeFiltersConfig] = setupFilters(\n    filters,\n    meta,\n    CLUSTER_CVES_DEFAULT_FILTERS,\n    apply\n  );\n\n  return (\n    <BaseTable\n      isLoading={isTableLoading}\n      isExpandable\n      rows={cves.map((row) => CLUSTER_CVES_TABLE_MAPPER(row))}\n      columns={CLUSTER_CVES_TABLE_COLUMNS}\n      filterConfig={filterConfig}\n      activeFiltersConfig={activeFiltersConfig}\n      meta={meta}\n      error={error}\n      emptyState={<NoMatchingCves />}\n      apply={apply}\n      onExport={(format) => onExport(format, meta)}\n    />\n  );\n};\n\nexport default ClusterCveTable;\n","import React, { useEffect } from 'react';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat/DateFormat';\nimport { Link, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport WithLoader, {\n  LoaderType,\n} from '../../PresentationalComponents/WithLoader';\nimport { fetchClusterDetails } from '../../../Store/Actions';\n\nconst ClusterDetailPageHeader = () => {\n  const params = useParams();\n  const dispatch = useDispatch();\n\n  const { cluster, isDetailLoading } = useSelector(\n    ({ ClusterDetailStore }) => ClusterDetailStore\n  );\n\n  useEffect(() => {\n    dispatch(fetchClusterDetails(params.clusterId));\n  }, []);\n\n  const pageTitle = (\n    <WithLoader\n      variant={LoaderType.inlineSkeleton}\n      width=\"300px\"\n      fontSize=\"lg\"\n      isLoading={isDetailLoading}\n      style={{ verticalAlign: -4 }}\n    >\n      {cluster.display_name}\n    </WithLoader>\n  );\n\n  return (\n    <PageHeader>\n      <Breadcrumb className=\"pf-u-mb-md\">\n        <BreadcrumbItem>\n          <Link to=\"../\">Vulnerability</Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to=\"../clusters\">Clusters</Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <WithLoader\n            variant={LoaderType.inlineSkeleton}\n            width=\"200px\"\n            fontSize=\"sm\"\n            isLoading={isDetailLoading}\n            style={{ verticalAlign: -4 }}\n          >\n            {cluster.display_name}\n          </WithLoader>\n        </BreadcrumbItem>\n      </Breadcrumb>\n      <PageHeaderTitle title={pageTitle} className=\"pf-u-mb-sm\" />\n      <div>\n        UUID:&nbsp;\n        <WithLoader\n          variant={LoaderType.inlineSkeleton}\n          width=\"300px\"\n          fontSize=\"sm\"\n          isLoading={isDetailLoading}\n          style={{ verticalAlign: -4 }}\n        >\n          <span ouiaId=\"cluster-detail-id\">{params.clusterId}</span>\n        </WithLoader>\n      </div>\n      <div>\n        Last seen:&nbsp;\n        <WithLoader\n          variant={LoaderType.inlineSkeleton}\n          width=\"200px\"\n          fontSize=\"sm\"\n          isLoading={isDetailLoading}\n          style={{ verticalAlign: -4 }}\n        >\n          <span ouiaId=\"cluster-detail-last-seen\">\n            <DateFormat date={cluster.last_seen} type=\"exact\" />\n          </span>\n        </WithLoader>\n      </div>\n    </PageHeader>\n  );\n};\n\nexport default ClusterDetailPageHeader;\n","import React from 'react';\nimport {\n  CLUSTER_IMAGES_ALLOWED_PARAMS,\n  CLUSTER_IMAGES_DEFAULT_FILTERS,\n  CLUSTER_IMAGES_EXPORT_PREFIX,\n  CLUSTER_IMAGES_TABLE_COLUMNS,\n  CLUSTER_IMAGES_TABLE_MAPPER,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport {\n  changeClusterImagesTableParams,\n  fetchClusterImagesTable,\n} from '../../../Store/Actions';\nimport { useParams } from 'react-router-dom';\nimport { useExport, useUrlBoundParams } from '../../../Helpers/hooks';\nimport { setupFilters } from '../../../Helpers/miscHelper';\nimport useTextFilter from '../Filters/TextFilter';\nimport BaseTable from '../Generic/BaseTable';\nimport NoMatchingItems from '../../PresentationalComponents/EmptyStates/NoMatchingItems';\nimport { fetchClusterImages } from '../../../Helpers/apiHelper';\n\nconst ClusterImagesTable = () => {\n  const params = useParams();\n\n  const { exposed_images, isTableLoading, meta, error } = useSelector(\n    ({ ClusterImagesStore }) => ClusterImagesStore\n  );\n\n  const apply = useUrlBoundParams({\n    allowedParams: CLUSTER_IMAGES_ALLOWED_PARAMS,\n    initialParams: meta,\n    additionalParam: params.clusterId,\n    fetchAction: fetchClusterImagesTable,\n    changeParamsAction: changeClusterImagesTableParams,\n  });\n\n  const { search } = meta;\n\n  const onExport = useExport({\n    filenamePrefix: CLUSTER_IMAGES_EXPORT_PREFIX,\n    fetchAction: fetchClusterImages,\n    fetchActionParam: params.clusterId,\n    allowedParams: CLUSTER_IMAGES_ALLOWED_PARAMS,\n  });\n\n  const filters = [\n    useTextFilter({\n      urlParam: 'search',\n      label: 'Name',\n      placeholder: 'Search image name',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n  ];\n\n  const [filterConfig, activeFiltersConfig] = setupFilters(\n    filters,\n    meta,\n    CLUSTER_IMAGES_DEFAULT_FILTERS,\n    apply\n  );\n\n  return (\n    <BaseTable\n      isLoading={isTableLoading}\n      rows={exposed_images.map((row) => CLUSTER_IMAGES_TABLE_MAPPER(row))}\n      columns={CLUSTER_IMAGES_TABLE_COLUMNS}\n      filterConfig={filterConfig}\n      activeFiltersConfig={activeFiltersConfig}\n      meta={meta}\n      error={error}\n      emptyState={<NoMatchingItems items=\"images\" />}\n      apply={apply}\n      onExport={(format) => onExport(format, meta)}\n    />\n  );\n};\n\nexport default ClusterImagesTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tab, TabTitleText, Tabs } from '@patternfly/react-core';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { urlChangeTab } from '../../Helpers/miscHelper';\n\nconst TableTabs = ({ activeTab, tabs }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const renderTab = ({ path, title, Component }) => {\n    const isTabActive = activeTab === path;\n\n    return (\n      <Tab\n        key={path}\n        eventKey={path}\n        title={<TabTitleText>{title}</TabTitleText>}\n      >\n        {isTabActive && <Component />}\n      </Tab>\n    );\n  };\n\n  return (\n    <Tabs\n      className=\"pf-m-light pf-v5-c-table\"\n      activeKey={activeTab}\n      onSelect={(e, newTab) =>\n        navigate(urlChangeTab(location.pathname, newTab))\n      }\n    >\n      {tabs.map((tab) => renderTab(tab))}\n    </Tabs>\n  );\n};\n\nTableTabs.propTypes = {\n  activeTab: propTypes.string,\n  tabs: propTypes.arrayOf(\n    propTypes.objectOf({\n      title: propTypes.string.isRequired,\n      path: propTypes.string.isRequired,\n      Component: propTypes.elementType.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default TableTabs;\n","import React, { useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport ClusterCveTable from './ClusterCveTable';\nimport ClusterDetailPageHeader from './ClusterDetailPageHeader';\nimport { useSelector } from 'react-redux';\nimport ErrorHandler from '../../PresentationalComponents/ErrorHandler';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport ClusterImagesTable from './ClusterImagesTable';\nimport { CLUSTER_DETAIL_TABS } from '../../../Helpers/constants';\nimport TableTabs from '../../PresentationalComponents/TableTabs';\n\nconst ClusterDetailPage = ({ activeTab }) => {\n  const chrome = useChrome();\n\n  const { error, cluster } = useSelector(\n    ({ ClusterDetailStore }) => ClusterDetailStore\n  );\n\n  useEffect(() => {\n    cluster.display_name &&\n      chrome.updateDocumentTitle(\n        `${cluster.display_name} - Clusters - Vulnerability Dashboard | Red Hat Insights | console.redhat.com`\n      );\n  }, [cluster.display_name]);\n\n  return (\n    <ErrorHandler error={error}>\n      <ClusterDetailPageHeader />\n      <Main>\n        <TableTabs\n          activeTab={activeTab}\n          tabs={[\n            {\n              title: 'CVEs',\n              path: CLUSTER_DETAIL_TABS.cves,\n              Component: ClusterCveTable,\n            },\n            {\n              title: 'Exposed images',\n              path: CLUSTER_DETAIL_TABS.images,\n              Component: ClusterImagesTable,\n            },\n          ]}\n        />\n      </Main>\n    </ErrorHandler>\n  );\n};\n\nClusterDetailPage.propTypes = {\n  activeTab: propTypes.oneOf(Object.values(CLUSTER_DETAIL_TABS)).isRequired,\n};\n\nexport default ClusterDetailPage;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst radioFilter = ({\n  urlParam,\n  label,\n  value,\n  placeholder,\n  items,\n  apply,\n  chipLabel,\n}) => {\n  const onValueChanged = (value) => {\n    apply({\n      [urlParam]: value,\n      offset: 0,\n    });\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.radio,\n    urlParam,\n    key: urlParam,\n    filterValues: {\n      onChange: (event, value) => {\n        onValueChanged(value);\n      },\n      items,\n      value: value || items[0].value,\n      placeholder,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: () => {\n      onValueChanged(undefined);\n    },\n    key: urlParam,\n    category: chipLabel,\n    chips: items\n      .filter((item) => item.value === value)\n      ?.map((item) => ({ name: item.label, value: item.value })),\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default radioFilter;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Split, SplitItem, TextInput } from '@patternfly/react-core';\nimport { Select } from '@patternfly/react-core/deprecated';\n\nconst RangeFilterComponent = ({\n  setValues,\n  range,\n  minMaxLabels,\n  selectProps,\n  inputValue,\n  setInputValue,\n}) => {\n  const [isOpen, setOpen] = useState(false);\n\n  const areValuesValid = (currentValues, inputName) => {\n    const numberValue = {\n      min: Number(currentValues.min),\n      max: Number(currentValues.max),\n    };\n\n    return (\n      currentValues[inputName] != '' &&\n      numberValue[inputName] <= range.max &&\n      numberValue[inputName] >= range.min &&\n      numberValue.min <= numberValue.max\n    );\n  };\n\n  const handleInputChange = (newValue, inputName) => {\n    const newRange = { ...inputValue, [inputName]: newValue };\n\n    if (areValuesValid(newRange, 'min') && areValuesValid(newRange, 'max')) {\n      setValues({\n        min: Number(newRange.min),\n        max: Number(newRange.max),\n      });\n    }\n\n    setInputValue(newRange);\n  };\n\n  const filterContent = (\n    <Split className=\"pf-u-m-md\">\n      <SplitItem>\n        <span style={{ fontSize: 'var(--pf-global--FontSize--sm)' }}>\n          {minMaxLabels.min}\n        </span>\n        <br />\n        <TextInput\n          type=\"number\"\n          onChange={(_event, value) => handleInputChange(value, 'min')}\n          validated={areValuesValid(inputValue, 'min') ? 'default' : 'error'}\n          className=\"range-filter-input\"\n          id=\"range-filter-input-min\"\n          value={inputValue.min}\n        />\n      </SplitItem>\n      <SplitItem>\n        <br />\n        <span className=\"pf-u-m-sm\">-</span>\n      </SplitItem>\n      <SplitItem>\n        <span style={{ fontSize: 'var(--pf-global--FontSize--sm)' }}>\n          {minMaxLabels.max}\n        </span>\n        <br />\n        <TextInput\n          type=\"number\"\n          onChange={(_event, value) => handleInputChange(value, 'max')}\n          validated={areValuesValid(inputValue, 'max') ? 'default' : 'error'}\n          className=\"range-filter-input\"\n          id=\"range-filter-input-max\"\n          value={inputValue.max}\n        />\n      </SplitItem>\n    </Split>\n  );\n\n  return (\n    <Select\n      variant=\"panel\"\n      aria-label=\"Select Input\"\n      customContent={filterContent}\n      onToggle={() => setOpen(!isOpen)}\n      isOpen={isOpen}\n      width=\"auto\"\n      {...selectProps}\n    />\n  );\n};\n\nRangeFilterComponent.propTypes = {\n  setValues: propTypes.func,\n  range: propTypes.shape({ min: propTypes.number, max: propTypes.number }),\n  minMaxLabels: propTypes.shape({ min: propTypes.node, max: propTypes.node }),\n  selectProps: propTypes.object,\n  inputValue: propTypes.shape({ min: propTypes.string, max: propTypes.string }),\n  setInputValue: propTypes.func,\n};\n\nexport default RangeFilterComponent;\n","import React, { useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport RangeFilterComponent from '../../PresentationalComponents/RangeFilterComponent';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nconst useRangeFilter = ({\n  urlParam,\n  label,\n  minMaxLabels,\n  range,\n  value,\n  placeholder,\n  apply,\n  chipLabel,\n  chipDecimalPlaces = 1,\n}) => {\n  const [handleSearch] = useState(() =>\n    debounce((newValue) => {\n      if (\n        newValue.min >= range.min &&\n        newValue.max <= range.max &&\n        newValue.min <= newValue.max\n      ) {\n        apply({\n          [urlParam]: `${newValue.min},${newValue.max}`,\n          offset: 0,\n        });\n      }\n    }, 600)\n  );\n\n  const [inputValue, setInputValue] = useState();\n\n  useDeepCompareEffect(() => {\n    setInputValue({\n      min: (value ?? range).min.toString(),\n      max: (value ?? range).max.toString(),\n    });\n  }, [value]);\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.custom,\n    key: urlParam,\n    urlParam,\n    filterValues: {\n      children: (\n        <RangeFilterComponent\n          setValues={handleSearch}\n          range={range}\n          className=\"pf-u-mb-0\"\n          selectProps={{ placeholderText: placeholder }}\n          minMaxLabels={minMaxLabels}\n          inputValue={inputValue}\n          setInputValue={setInputValue}\n        />\n      ),\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: value.min !== range.min || value.max !== range.max,\n    onDelete: () => {\n      apply({\n        [urlParam]: undefined,\n        offset: 0,\n      });\n    },\n    key: urlParam,\n    category: chipLabel,\n    chips: [\n      {\n        name:\n          value.min.toFixed(chipDecimalPlaces) +\n          ' - ' +\n          value.max.toFixed(chipDecimalPlaces),\n      },\n    ],\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default useRangeFilter;\n"],"names":["CveDatabaseLink","href","target","rel","className","ProdSecLink","Bullseye","EmptyState","variant","EmptyStateHeader","titleText","headingLevel","EmptyStateBody","NoMatchingItems","items","propTypes","LoaderType","spinner","table","compactTable","rectangle","inlineSkeleton","skeleton","WithLoader","isLoading","children","size","props","centered","compact","shape","lg","style","display","Object","keys","params","useParams","cves","isTableLoading","meta","error","ClusterCvesStore","apply","allowedParams","initialParams","additionalParam","clusterId","fetchAction","changeParamsAction","search","cvss_score","severity","published","cvss_score_min","cvss_score_max","onExport","filenamePrefix","fetchActionParam","filters","urlParam","label","placeholder","value","chipLabel","minMaxLabels","min","max","range","filterConfig","activeFiltersConfig","BaseTable","isExpandable","rows","map","row","columns","emptyState","NoMatchingCves","format","dispatch","cluster","isDetailLoading","ClusterDetailStore","useEffect","pageTitle","width","fontSize","verticalAlign","display_name","PageHeader","Breadcrumb","BreadcrumbItem","Link","to","PageHeaderTitle","title","ouiaId","date","last_seen","type","exposed_images","ClusterImagesStore","TableTabs","activeTab","tabs","location","useLocation","navigate","useNavigate","Tabs","activeKey","onSelect","e","newTab","pathname","tab","path","Component","isTabActive","Tab","key","eventKey","TabTitleText","renderTab","isRequired","ClusterDetailPage","chrome","useChrome","updateDocumentTitle","ErrorHandler","Main","images","values","onValueChanged","offset","radio","filterValues","onChange","event","isShown","onDelete","undefined","category","chips","filter","item","name","RangeFilterComponent","setValues","selectProps","inputValue","setInputValue","isOpen","setOpen","useState","areValuesValid","currentValues","inputName","numberValue","Number","handleInputChange","newValue","newRange","filterContent","Split","SplitItem","TextInput","_event","validated","id","Select","customContent","onToggle","chipDecimalPlaces","handleSearch","toString","custom","placeholderText","toFixed"],"sourceRoot":""}