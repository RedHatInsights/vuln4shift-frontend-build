{"version":3,"file":"js/ClusterDetailPage.35f17329e382e0afa296.js","mappings":"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","sources":["webpack:///./src/Components/PresentationalComponents/EmptyStates/NoMatchingCves.js","webpack:///./src/Components/PresentationalComponents/WithLoader.js","webpack:///./src/Components/SmartComponents/ClusterDetail/ClusterDetailTable.js","webpack:///./src/Components/SmartComponents/ClusterDetail/ClusterDetailPageHeader.js","webpack:///./src/Components/SmartComponents/ClusterDetail/ClusterDetailPage.js","webpack:///./src/Components/SmartComponents/Filters/RadioFilter.js","webpack:///./src/Components/PresentationalComponents/RangeFilterComponent.js","webpack:///./src/Components/SmartComponents/Filters/RangeFilter.js"],"sourcesContent":["import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  Bullseye,\n  EmptyStateHeader,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst NoMatchingCves = () => {\n  const CveDatabaseLink = (\n    <a\n      href=\"https://access.redhat.com/security/security-updates/#/cve\"\n      target=\"__blank\"\n      rel=\"noopener noreferrer\"\n      className=\"nowrap\"\n    >\n      Red Hat CVE Database <ExternalLinkAltIcon />\n    </a>\n  );\n\n  const ProdSecLink = (\n    <a\n      href=\"https://access.redhat.com/security/team/contact/\"\n      target=\"__blank\"\n      rel=\"noopener noreferrer\"\n      className=\"nowrap\"\n    >\n      Red Hat Product Security <ExternalLinkAltIcon />\n    </a>\n  );\n\n  return (\n    <Bullseye>\n      <EmptyState variant=\"lg\">\n        <EmptyStateHeader\n          titleText=\"No matching CVEs found\"\n          headingLevel=\"h5\"\n        />\n        <EmptyStateBody>\n          To continue, edit your filter settings and search again.\n          <br />\n          <br />\n          As of today, Insights Vulnerability shows CVEs with Errata. It is\n          possible the CVE you are searching for does not yet have an associated\n          Errata. Please check the {CveDatabaseLink} or if you would like more\n          information, contact {ProdSecLink}\n        </EmptyStateBody>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nexport default NoMatchingCves;\n","import {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport SkeletonTable from '@redhat-cloud-services/frontend-components/SkeletonTable/SkeletonTable';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Skeleton as PfSkeleton } from '@patternfly/react-core';\n\nexport const LoaderType = {\n  spinner: 'spinner',\n  table: 'table',\n  compactTable: 'compactTable',\n  rectangle: 'rectangle',\n  inlineSkeleton: 'inlineSkeleton',\n  skeleton: 'skeleton',\n};\n\nconst WithLoader = ({ isLoading, variant, children, size, ...props }) => {\n  if (isLoading) {\n    switch (variant) {\n      case LoaderType.spinner:\n        return <Spinner centered {...props} />;\n      case LoaderType.table:\n        return <SkeletonTable {...props} />;\n      case LoaderType.compactTable:\n        return <SkeletonTable variant={TableVariant.compact} {...props} />;\n      case LoaderType.rectangle:\n        return <Skeleton shape=\"square\" {...props} />;\n      case LoaderType.inlineSkeleton:\n        return (\n          <PfSkeleton\n            size={size ?? SkeletonSize.lg}\n            {...props}\n            style={{ display: 'inline-block', ...props.style }}\n          />\n        );\n      default:\n        return <Skeleton size={size ?? SkeletonSize.lg} {...props} />;\n    }\n  }\n\n  return children;\n};\n\nWithLoader.propTypes = {\n  isLoading: propTypes.bool,\n  variant: propTypes.oneOf(Object.keys(LoaderType)),\n  style: propTypes.object,\n  children: propTypes.node,\n  size: propTypes.string,\n};\n\nexport default WithLoader;\n","import React from 'react';\nimport {\n  CLUSTER_DETAIL_ALLOWED_PARAMS,\n  CLUSTER_DETAIL_DEFAULT_FILTERS,\n  CLUSTER_DETAIL_EXPORT_PREFIX,\n  CLUSTER_DETAIL_TABLE_COLUMNS,\n  CLUSTER_DETAIL_TABLE_MAPPER,\n  PUBLISHED_OPTIONS,\n  SEVERITY_OPTIONS,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport {\n  changeClusterDetailsTableParams,\n  fetchClusterDetailTable,\n} from '../../../Store/Actions';\nimport { useParams } from 'react-router-dom';\nimport { useExport, useUrlBoundParams } from '../../../Helpers/hooks';\nimport {\n  getCvssScoreFromUrlParam,\n  setupFilters,\n} from '../../../Helpers/miscHelper';\nimport useTextFilter from '../Filters/TextFilter';\nimport useRangeFilter from '../Filters/RangeFilter';\nimport checkboxFilter from '../Filters/CheckboxFilter';\nimport radioFilter from '../Filters/RadioFilter';\nimport BaseTable from '../Generic/BaseTable';\nimport NoMatchingCves from '../../PresentationalComponents/EmptyStates/NoMatchingCves';\nimport { fetchClusterCves } from '../../../Helpers/apiHelper';\n\nconst ClusterDetailTable = () => {\n  const params = useParams();\n\n  const { cves, isTableLoading, meta, error } = useSelector(\n    ({ ClusterDetailStore }) => ClusterDetailStore\n  );\n\n  const apply = useUrlBoundParams({\n    allowedParams: CLUSTER_DETAIL_ALLOWED_PARAMS,\n    initialParams: meta,\n    additionalParam: params.clusterId,\n    fetchAction: fetchClusterDetailTable,\n    changeParamsAction: changeClusterDetailsTableParams,\n  });\n\n  const { search, cvss_score, severity, published } = meta;\n\n  const [cvss_score_min, cvss_score_max] = getCvssScoreFromUrlParam(cvss_score);\n\n  const onExport = useExport({\n    filenamePrefix: CLUSTER_DETAIL_EXPORT_PREFIX,\n    fetchAction: fetchClusterCves,\n    fetchActionParam: params.clusterId,\n    allowedParams: CLUSTER_DETAIL_ALLOWED_PARAMS,\n  });\n\n  const filters = [\n    useTextFilter({\n      urlParam: 'search',\n      label: 'CVE',\n      placeholder: 'Search ID or description',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n    radioFilter({\n      urlParam: 'published',\n      label: 'Publish date',\n      value: published,\n      items: PUBLISHED_OPTIONS,\n      placeholder: 'Filter by publish date',\n      apply,\n      chipLabel: 'Publish date',\n    }),\n    checkboxFilter({\n      urlParam: 'severity',\n      label: 'Severity',\n      value: severity,\n      items: SEVERITY_OPTIONS,\n      placeholder: 'Filter by severity',\n      apply,\n      chipLabel: 'Severity',\n    }),\n    useRangeFilter({\n      urlParam: 'cvss_score',\n      label: 'CVSS score',\n      minMaxLabels: {\n        min: 'Min CVSS',\n        max: 'Max CVSS',\n      },\n      range: {\n        min: 0,\n        max: 10,\n      },\n      value: {\n        min: cvss_score_min,\n        max: cvss_score_max,\n      },\n      placeholder: 'Filter by CVSS score range',\n      apply,\n      chipLabel: 'CVSS base score',\n    }),\n  ];\n\n  const [filterConfig, activeFiltersConfig] = setupFilters(\n    filters,\n    meta,\n    CLUSTER_DETAIL_DEFAULT_FILTERS,\n    apply\n  );\n\n  return (\n    <BaseTable\n      isLoading={isTableLoading}\n      isExpandable\n      rows={cves.map((row) => CLUSTER_DETAIL_TABLE_MAPPER(row))}\n      columns={CLUSTER_DETAIL_TABLE_COLUMNS}\n      filterConfig={filterConfig}\n      activeFiltersConfig={activeFiltersConfig}\n      meta={meta}\n      error={error}\n      emptyState={<NoMatchingCves />}\n      apply={apply}\n      onExport={(format) => onExport(format, meta)}\n    />\n  );\n};\n\nexport default ClusterDetailTable;\n","import React, { useEffect } from 'react';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat/DateFormat';\nimport { Link, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport WithLoader, {\n  LoaderType,\n} from '../../PresentationalComponents/WithLoader';\nimport { fetchClusterDetails } from '../../../Store/Actions';\n\nconst ClusterDetailPageHeader = () => {\n  const params = useParams();\n  const dispatch = useDispatch();\n\n  const { cluster, isDetailLoading } = useSelector(\n    ({ ClusterDetailStore }) => ClusterDetailStore\n  );\n\n  useEffect(() => {\n    dispatch(fetchClusterDetails(params.clusterId));\n  }, []);\n\n  const pageTitle = (\n    <WithLoader\n      variant={LoaderType.inlineSkeleton}\n      width=\"300px\"\n      fontSize=\"lg\"\n      isLoading={isDetailLoading}\n      style={{ verticalAlign: -4 }}\n    >\n      {cluster.display_name}\n    </WithLoader>\n  );\n\n  return (\n    <PageHeader>\n      <Breadcrumb className=\"pf-u-mb-md\">\n        <BreadcrumbItem>\n          <Link to=\"../\">Vulnerability</Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to=\"../clusters\">Clusters</Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <WithLoader\n            variant={LoaderType.inlineSkeleton}\n            width=\"200px\"\n            fontSize=\"sm\"\n            isLoading={isDetailLoading}\n            style={{ verticalAlign: -4 }}\n          >\n            {cluster.display_name}\n          </WithLoader>\n        </BreadcrumbItem>\n      </Breadcrumb>\n      <PageHeaderTitle title={pageTitle} className=\"pf-u-mb-sm\" />\n      <div>\n        UUID:&nbsp;\n        <WithLoader\n          variant={LoaderType.inlineSkeleton}\n          width=\"300px\"\n          fontSize=\"sm\"\n          isLoading={isDetailLoading}\n          style={{ verticalAlign: -4 }}\n        >\n          <span ouiaId=\"cluster-detail-id\">{params.clusterId}</span>\n        </WithLoader>\n      </div>\n      <div>\n        Last seen:&nbsp;\n        <WithLoader\n          variant={LoaderType.inlineSkeleton}\n          width=\"200px\"\n          fontSize=\"sm\"\n          isLoading={isDetailLoading}\n          style={{ verticalAlign: -4 }}\n        >\n          <span ouiaId=\"cluster-detail-last-seen\">\n            <DateFormat date={cluster.last_seen} type=\"exact\" />\n          </span>\n        </WithLoader>\n      </div>\n    </PageHeader>\n  );\n};\n\nexport default ClusterDetailPageHeader;\n","import React, { useEffect } from 'react';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ClusterDetailTable from './ClusterDetailTable';\nimport ClusterDetailPageHeader from './ClusterDetailPageHeader';\nimport { useSelector } from 'react-redux';\nimport ErrorHandler from '../../PresentationalComponents/ErrorHandler';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst ClusterDetailPage = () => {\n  const chrome = useChrome();\n\n  const { error, cluster } = useSelector(\n    ({ ClusterDetailStore }) => ClusterDetailStore\n  );\n\n  useEffect(() => {\n    cluster.display_name &&\n      chrome.updateDocumentTitle(\n        `${cluster.display_name} - Clusters - Vulnerability Dashboard | Red Hat Insights | console.redhat.com`\n      );\n  }, [cluster.display_name]);\n\n  return (\n    <ErrorHandler error={error}>\n      <ClusterDetailPageHeader />\n      <Main>\n        <TextContent>\n          <Text component={TextVariants.h2} className=\"pf-u-mb-md\">\n            CVEs\n          </Text>\n        </TextContent>\n        <ClusterDetailTable />\n      </Main>\n    </ErrorHandler>\n  );\n};\n\nexport default ClusterDetailPage;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst radioFilter = ({\n  urlParam,\n  label,\n  value,\n  placeholder,\n  items,\n  apply,\n  chipLabel,\n}) => {\n  const onValueChanged = (value) => {\n    apply({\n      [urlParam]: value,\n      offset: 0,\n    });\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.radio,\n    urlParam,\n    key: urlParam,\n    filterValues: {\n      onChange: (event, value) => {\n        onValueChanged(value);\n      },\n      items,\n      value: value || items[0].value,\n      placeholder,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: () => {\n      onValueChanged(undefined);\n    },\n    key: urlParam,\n    category: chipLabel,\n    chips: items\n      .filter((item) => item.value === value)\n      ?.map((item) => ({ name: item.label, value: item.value })),\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default radioFilter;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Split, SplitItem, TextInput } from '@patternfly/react-core';\nimport { Select } from '@patternfly/react-core/deprecated';\n\nconst RangeFilterComponent = ({\n  setValues,\n  range,\n  minMaxLabels,\n  selectProps,\n  inputValue,\n  setInputValue,\n}) => {\n  const [isOpen, setOpen] = useState(false);\n\n  const areValuesValid = (currentValues, inputName) => {\n    const numberValue = {\n      min: Number(currentValues.min),\n      max: Number(currentValues.max),\n    };\n\n    return (\n      currentValues[inputName] != '' &&\n      numberValue[inputName] <= range.max &&\n      numberValue[inputName] >= range.min &&\n      numberValue.min <= numberValue.max\n    );\n  };\n\n  const handleInputChange = (newValue, inputName) => {\n    const newRange = { ...inputValue, [inputName]: newValue };\n\n    if (areValuesValid(newRange, 'min') && areValuesValid(newRange, 'max')) {\n      setValues({\n        min: Number(newRange.min),\n        max: Number(newRange.max),\n      });\n    }\n\n    setInputValue(newRange);\n  };\n\n  const filterContent = (\n    <Split className=\"pf-u-m-md\">\n      <SplitItem>\n        <span style={{ fontSize: 'var(--pf-global--FontSize--sm)' }}>\n          {minMaxLabels.min}\n        </span>\n        <br />\n        <TextInput\n          type=\"number\"\n          onChange={(_event, value) => handleInputChange(value, 'min')}\n          validated={areValuesValid(inputValue, 'min') ? 'default' : 'error'}\n          className=\"range-filter-input\"\n          id=\"range-filter-input-min\"\n          value={inputValue.min}\n        />\n      </SplitItem>\n      <SplitItem>\n        <br />\n        <span className=\"pf-u-m-sm\">-</span>\n      </SplitItem>\n      <SplitItem>\n        <span style={{ fontSize: 'var(--pf-global--FontSize--sm)' }}>\n          {minMaxLabels.max}\n        </span>\n        <br />\n        <TextInput\n          type=\"number\"\n          onChange={(_event, value) => handleInputChange(value, 'max')}\n          validated={areValuesValid(inputValue, 'max') ? 'default' : 'error'}\n          className=\"range-filter-input\"\n          id=\"range-filter-input-max\"\n          value={inputValue.max}\n        />\n      </SplitItem>\n    </Split>\n  );\n\n  return (\n    <Select\n      variant=\"panel\"\n      aria-label=\"Select Input\"\n      customContent={filterContent}\n      onToggle={() => setOpen(!isOpen)}\n      isOpen={isOpen}\n      width=\"auto\"\n      {...selectProps}\n    />\n  );\n};\n\nRangeFilterComponent.propTypes = {\n  setValues: propTypes.func,\n  range: propTypes.shape({ min: propTypes.number, max: propTypes.number }),\n  minMaxLabels: propTypes.shape({ min: propTypes.node, max: propTypes.node }),\n  selectProps: propTypes.object,\n  inputValue: propTypes.shape({ min: propTypes.string, max: propTypes.string }),\n  setInputValue: propTypes.func,\n};\n\nexport default RangeFilterComponent;\n","import React, { useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport RangeFilterComponent from '../../PresentationalComponents/RangeFilterComponent';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nconst useRangeFilter = ({\n  urlParam,\n  label,\n  minMaxLabels,\n  range,\n  value,\n  placeholder,\n  apply,\n  chipLabel,\n  chipDecimalPlaces = 1,\n}) => {\n  const [handleSearch] = useState(() =>\n    debounce((newValue) => {\n      if (\n        newValue.min >= range.min &&\n        newValue.max <= range.max &&\n        newValue.min <= newValue.max\n      ) {\n        apply({\n          [urlParam]: `${newValue.min},${newValue.max}`,\n          offset: 0,\n        });\n      }\n    }, 600)\n  );\n\n  const [inputValue, setInputValue] = useState();\n\n  useDeepCompareEffect(() => {\n    setInputValue({\n      min: (value ?? range).min.toString(),\n      max: (value ?? range).max.toString(),\n    });\n  }, [value]);\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.custom,\n    key: urlParam,\n    urlParam,\n    filterValues: {\n      children: (\n        <RangeFilterComponent\n          setValues={handleSearch}\n          range={range}\n          className=\"pf-u-mb-0\"\n          selectProps={{ placeholderText: placeholder }}\n          minMaxLabels={minMaxLabels}\n          inputValue={inputValue}\n          setInputValue={setInputValue}\n        />\n      ),\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: value.min !== range.min || value.max !== range.max,\n    onDelete: () => {\n      apply({\n        [urlParam]: undefined,\n        offset: 0,\n      });\n    },\n    key: urlParam,\n    category: chipLabel,\n    chips: [\n      {\n        name:\n          value.min.toFixed(chipDecimalPlaces) +\n          ' - ' +\n          value.max.toFixed(chipDecimalPlaces),\n      },\n    ],\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default useRangeFilter;\n"],"names":["CveDatabaseLink","href","target","rel","className","ProdSecLink","Bullseye","EmptyState","variant","EmptyStateHeader","titleText","headingLevel","EmptyStateBody","LoaderType","spinner","table","compactTable","rectangle","inlineSkeleton","skeleton","WithLoader","isLoading","children","size","props","centered","compact","shape","lg","style","display","propTypes","Object","keys","params","useParams","cves","isTableLoading","meta","error","ClusterDetailStore","apply","allowedParams","initialParams","additionalParam","clusterId","fetchAction","changeParamsAction","search","cvss_score","severity","published","cvss_score_min","cvss_score_max","onExport","filenamePrefix","fetchActionParam","filters","urlParam","label","placeholder","value","chipLabel","items","minMaxLabels","min","max","range","filterConfig","activeFiltersConfig","BaseTable","isExpandable","rows","map","row","columns","emptyState","NoMatchingCves","format","dispatch","cluster","isDetailLoading","useEffect","pageTitle","width","fontSize","verticalAlign","display_name","PageHeader","Breadcrumb","BreadcrumbItem","Link","to","PageHeaderTitle","title","ouiaId","date","last_seen","type","chrome","useChrome","updateDocumentTitle","ErrorHandler","Main","TextContent","Text","component","TextVariants","h2","onValueChanged","offset","radio","key","filterValues","onChange","event","isShown","onDelete","undefined","category","chips","filter","item","name","RangeFilterComponent","setValues","selectProps","inputValue","setInputValue","isOpen","setOpen","useState","areValuesValid","currentValues","inputName","numberValue","Number","handleInputChange","newValue","newRange","filterContent","Split","SplitItem","TextInput","_event","validated","id","Select","customContent","onToggle","chipDecimalPlaces","handleSearch","toString","custom","placeholderText","toFixed"],"sourceRoot":""}