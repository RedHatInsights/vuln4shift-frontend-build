{"version":3,"file":"js/ClusterListPage.71335c0b2b9cc4bae10a.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/NoMatchingClusters.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/NoClusters.js","webpack:///./src/Components/SmartComponents/ClusterList/ClusterListTable.js","webpack:///./src/Components/SmartComponents/ClusterList/ClusterListPage.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  Bullseye,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\n\nconst NoMatchingClusters = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.large}>\n      <Title headingLevel=\"h5\" size=\"lg\">\n        No matching clusters found\n      </Title>\n      <EmptyStateBody>\n        To continue, edit your filter settings and search again.\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoMatchingClusters;\n","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Button,\n  Bullseye,\n  Title,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\n\nconst NoClusters = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={PlusCircleIcon} size=\"sm\" />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        No clusters yet\n      </Title>\n      <EmptyStateBody>\n        To get started, create or register your cluster to get information from\n        Insights Vulnerability.\n      </EmptyStateBody>\n      <Button\n        variant=\"primary\"\n        component=\"a\"\n        href=\"https://console.redhat.com/openshift/create/\"\n        target=\"_blank\"\n      >\n        Create Cluster\n      </Button>\n      <br />\n      <Button\n        variant=\"link\"\n        component=\"a\"\n        href=\"https://console.redhat.com/openshift/register/\"\n        target=\"_blank\"\n        className=\"pf-u-mt-md\"\n      >\n        Register Cluster\n      </Button>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoClusters;\n","import React from 'react';\nimport {\n  CLUSTER_LIST_ALLOWED_PARAMS,\n  CLUSTER_LIST_DEFAULT_FILTERS,\n  CLUSTER_LIST_EXPORT_PREFIX,\n  CLUSTER_LIST_TABLE_COLUMNS,\n  CLUSTER_LIST_TABLE_MAPPER,\n  CLUSTER_STATUS_OPTIONS,\n  CLUSTER_VERSION_OPTIONS,\n  CLUSTER_PROVIDER_OPTIONS,\n  CLUSTER_SEVERITY_OPTIONS,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport {\n  changeClusterListTableParams,\n  fetchClusterListTable,\n} from '../../../Store/Actions';\nimport NoClusters from '../../PresentationalComponents/EmptyStates/NoClusters';\nimport useTextFilter from '../Filters/TextFilter';\nimport { useExport, useUrlBoundParams } from '../../../Helpers/hooks';\nimport BaseTable from '../Generic/BaseTable';\nimport { setupFilters } from '../../../Helpers/miscHelper';\nimport NoMatchingClusters from '../../PresentationalComponents/EmptyStates/NoMatchingClusters';\nimport { fetchClusters } from '../../../Helpers/apiHelper';\nimport checkboxFilter from '../Filters/CheckboxFilter';\nimport { uniqBy } from 'lodash';\n\nconst ClusterDetailTable = () => {\n  const { clusters, isLoading, meta, error } = useSelector(\n    ({ ClusterListStore }) => ClusterListStore\n  );\n\n  const apply = useUrlBoundParams({\n    allowedParams: CLUSTER_LIST_ALLOWED_PARAMS,\n    initialParams: meta,\n    fetchAction: fetchClusterListTable,\n    changeParamsAction: changeClusterListTableParams,\n  });\n\n  const {\n    search,\n    status,\n    dynamic_status_options,\n    version,\n    dynamic_version_options,\n    cluster_severity,\n    provider,\n    dynamic_provider_options,\n  } = meta;\n\n  const onExport = useExport({\n    filenamePrefix: CLUSTER_LIST_EXPORT_PREFIX,\n    fetchAction: fetchClusters,\n    allowedParams: CLUSTER_LIST_ALLOWED_PARAMS,\n  });\n\n  const filters = [\n    useTextFilter({\n      urlParam: 'search',\n      label: 'Name',\n      placeholder: 'Filter by name',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n    checkboxFilter({\n      urlParam: 'status',\n      label: 'Status',\n      value: status,\n      items: uniqBy(\n        CLUSTER_STATUS_OPTIONS.concat(\n          (dynamic_status_options ?? []).map((status) => ({\n            label: status,\n            value: status,\n          }))\n        ),\n        'value'\n      ),\n      placeholder: 'Filter by status',\n      apply,\n      chipLabel: 'Status',\n    }),\n    checkboxFilter({\n      urlParam: 'version',\n      label: 'Version',\n      value: version,\n      items: uniqBy(\n        CLUSTER_VERSION_OPTIONS.concat(\n          (dynamic_version_options ?? []).map((version) => ({\n            label: version,\n            value: version,\n          }))\n        ),\n        'value'\n      ),\n      placeholder: 'Filter by version',\n      apply,\n      chipLabel: 'Version',\n    }),\n    checkboxFilter({\n      urlParam: 'cluster_severity',\n      label: 'CVEs severity',\n      value: cluster_severity,\n      items: CLUSTER_SEVERITY_OPTIONS,\n      placeholder: 'Filter by CVEs severity',\n      apply,\n      chipLabel: 'CVEs severity',\n    }),\n    checkboxFilter({\n      urlParam: 'provider',\n      label: 'Provider',\n      value: provider,\n      items: uniqBy(\n        CLUSTER_PROVIDER_OPTIONS.concat(\n          (dynamic_provider_options ?? []).map((provider) => ({\n            label: provider,\n            value: provider,\n          }))\n        ),\n        'value'\n      ),\n      placeholder: 'Filter by provider',\n      apply,\n      chipLabel: 'Provider',\n    }),\n  ];\n\n  const [filterConfig, activeFiltersConfig, areAnyFiltersApplied] =\n    setupFilters(filters, meta, CLUSTER_LIST_DEFAULT_FILTERS, apply);\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      rows={clusters.map((row) => CLUSTER_LIST_TABLE_MAPPER(row))}\n      columns={CLUSTER_LIST_TABLE_COLUMNS}\n      filterConfig={filterConfig}\n      activeFiltersConfig={activeFiltersConfig}\n      meta={meta}\n      error={error}\n      emptyState={\n        areAnyFiltersApplied ? <NoMatchingClusters /> : <NoClusters />\n      }\n      apply={apply}\n      onExport={(format) => onExport(format, meta)}\n    />\n  );\n};\n\nexport default ClusterDetailTable;\n","import React, { Fragment, useEffect } from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n} from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport ClusterListTable from './ClusterListTable';\nimport { HEADER_ALERT_DISMISSED_KEY } from '../../../Helpers/constants';\nimport { useLocalStorage } from '../../../Helpers/hooks';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst ClusterListPage = () => {\n  const chrome = useChrome();\n\n  const [wasHeaderAlertDismissed, setHeaderAlertDismissed] = useLocalStorage(\n    HEADER_ALERT_DISMISSED_KEY\n  );\n\n  useEffect(() => {\n    chrome.updateDocumentTitle(\n      'Clusters - Vulnerability Dashboard | Red Hat Insights | console.redhat.com'\n    );\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeader>\n        <PageHeaderTitle title=\"Vulnerable clusters\" className=\"pf-u-mb-sm\" />\n        {!wasHeaderAlertDismissed && (\n          <Alert\n            variant={AlertVariant.info}\n            isInline\n            className=\"pf-u-mt-md\"\n            title=\"Vulnerability information applies to OCP4.8+ version only\"\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => setHeaderAlertDismissed(true)}\n              />\n            }\n          />\n        )}\n      </PageHeader>\n      <Main>\n        <ClusterListTable />\n      </Main>\n    </Fragment>\n  );\n};\n\nexport default ClusterListPage;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","React","Bullseye","EmptyState","variant","EmptyStateVariant","Title","headingLevel","size","EmptyStateBody","EmptyStateIcon","icon","PlusCircleIcon","Button","component","href","target","className","_useSelector","useSelector","_ref","ClusterListStore","clusters","isLoading","meta","error","apply","useUrlBoundParams","allowedParams","CLUSTER_LIST_ALLOWED_PARAMS","initialParams","fetchAction","fetchClusterListTable","changeParamsAction","changeClusterListTableParams","search","status","dynamic_status_options","version","dynamic_version_options","cluster_severity","provider","dynamic_provider_options","onExport","useExport","filenamePrefix","CLUSTER_LIST_EXPORT_PREFIX","fetchClusters","filters","useTextFilter","urlParam","label","placeholder","value","chipLabel","checkboxFilter","items","uniqBy","CLUSTER_STATUS_OPTIONS","map","CLUSTER_VERSION_OPTIONS","CLUSTER_SEVERITY_OPTIONS","CLUSTER_PROVIDER_OPTIONS","_setupFilters","setupFilters","CLUSTER_LIST_DEFAULT_FILTERS","_setupFilters2","_slicedToArray","filterConfig","activeFiltersConfig","areAnyFiltersApplied","BaseTable","rows","row","CLUSTER_LIST_TABLE_MAPPER","columns","CLUSTER_LIST_TABLE_COLUMNS","emptyState","NoMatchingClusters","NoClusters","format","chrome","useChrome","_useLocalStorage","useLocalStorage","HEADER_ALERT_DISMISSED_KEY","_useLocalStorage2","wasHeaderAlertDismissed","setHeaderAlertDismissed","useEffect","updateDocumentTitle","Fragment","PageHeader","PageHeaderTitle","title","Alert","AlertVariant","isInline","actionClose","AlertActionCloseButton","onClose","Main","ClusterListTable"],"sourceRoot":""}