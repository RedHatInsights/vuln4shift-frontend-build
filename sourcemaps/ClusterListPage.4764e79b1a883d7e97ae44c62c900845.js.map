{"version":3,"file":"js/ClusterListPage.1662637935406.3a5bfbd892e96e66d679.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/NoMatchingClusters.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/NoClusters.js","webpack:///./src/Components/SmartComponents/ClusterList/ClusterListTable.js","webpack:///./src/Components/SmartComponents/ClusterList/ClusterListPage.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  Bullseye,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\n\nconst NoMatchingClusters = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.large}>\n      <Title headingLevel=\"h5\" size=\"lg\">\n        No matching clusters found\n      </Title>\n      <EmptyStateBody>\n        To continue, edit your filter settings and search again.\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoMatchingClusters;\n","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Button,\n  Bullseye,\n  Title,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\n\nconst NoClusters = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={PlusCircleIcon} size=\"sm\" />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        No clusters yet\n      </Title>\n      <EmptyStateBody>\n        To get started, create or register your cluster to get information from\n        Insights Vulnerability.\n      </EmptyStateBody>\n      <Button\n        variant=\"primary\"\n        component=\"a\"\n        href=\"https://console.redhat.com/openshift/create/\"\n        target=\"_blank\"\n      >\n        Create Cluster\n      </Button>\n      <br />\n      <Button\n        variant=\"link\"\n        component=\"a\"\n        href=\"https://console.redhat.com/openshift/register/\"\n        target=\"_blank\"\n        className=\"pf-u-mt-md\"\n      >\n        Register Cluster\n      </Button>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoClusters;\n","import React from 'react';\nimport {\n  CLUSTER_LIST_ALLOWED_PARAMS,\n  CLUSTER_LIST_DEFAULT_FILTERS,\n  CLUSTER_LIST_EXPORT_PREFIX,\n  CLUSTER_LIST_TABLE_COLUMNS,\n  CLUSTER_LIST_TABLE_MAPPER,\n  CLUSTER_STATUS_OPTIONS,\n  CLUSTER_VERSION_OPTIONS,\n  CLUSTER_PROVIDER_OPTIONS,\n  SEVERITY_OPTIONS,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport {\n  changeClusterListTableParams,\n  fetchClusterListTable,\n} from '../../../Store/Actions';\nimport NoClusters from '../../PresentationalComponents/EmptyStates/NoClusters';\nimport useTextFilter from '../Filters/TextFilter';\nimport { useExport, useUrlBoundParams } from '../../../Helpers/hooks';\nimport BaseTable from '../Generic/BaseTable';\nimport { setupFilters } from '../../../Helpers/miscHelper';\nimport NoMatchingClusters from '../../PresentationalComponents/EmptyStates/NoMatchingClusters';\nimport { fetchClusters } from '../../../Helpers/apiHelper';\nimport checkboxFilter from '../Filters/CheckboxFilter';\nimport { uniqBy } from 'lodash';\n\nconst ClusterDetailTable = () => {\n  const { clusters, isLoading, meta, error } = useSelector(\n    ({ ClusterListStore }) => ClusterListStore\n  );\n\n  const apply = useUrlBoundParams({\n    allowedParams: CLUSTER_LIST_ALLOWED_PARAMS,\n    initialParams: meta,\n    fetchAction: fetchClusterListTable,\n    changeParamsAction: changeClusterListTableParams,\n  });\n\n  const {\n    search,\n    status,\n    dynamic_status_options,\n    version,\n    dynamic_version_options,\n    cluster_severity,\n    provider,\n    dynamic_provider_options,\n  } = meta;\n\n  const onExport = useExport(CLUSTER_LIST_EXPORT_PREFIX, fetchClusters);\n\n  const filters = [\n    useTextFilter({\n      urlParam: 'search',\n      label: 'Name',\n      placeholder: 'Filter by name',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n    checkboxFilter({\n      urlParam: 'status',\n      label: 'Status',\n      value: status,\n      items: uniqBy(\n        CLUSTER_STATUS_OPTIONS.concat(\n          (dynamic_status_options ?? []).map((status) => ({\n            label: status,\n            value: status,\n          }))\n        ),\n        'value'\n      ),\n      placeholder: 'Filter by status',\n      apply,\n      chipLabel: 'Status',\n    }),\n    checkboxFilter({\n      urlParam: 'version',\n      label: 'Version',\n      value: version,\n      items: uniqBy(\n        CLUSTER_VERSION_OPTIONS.concat(\n          (dynamic_version_options ?? []).map((version) => ({\n            label: version,\n            value: version,\n          }))\n        ),\n        'value'\n      ),\n      placeholder: 'Filter by version',\n      apply,\n      chipLabel: 'Version',\n    }),\n    checkboxFilter({\n      urlParam: 'cluster_severity',\n      label: 'CVEs severity',\n      value: cluster_severity,\n      items: SEVERITY_OPTIONS.filter((option) => option.value !== 'none'),\n      placeholder: 'Filter by CVEs severity',\n      apply,\n      chipLabel: 'CVEs severity',\n    }),\n    checkboxFilter({\n      urlParam: 'provider',\n      label: 'Provider',\n      value: provider,\n      items: uniqBy(\n        CLUSTER_PROVIDER_OPTIONS.concat(\n          (dynamic_provider_options ?? []).map((provider) => ({\n            label: provider,\n            value: provider,\n          }))\n        ),\n        'value'\n      ),\n      placeholder: 'Filter by provider',\n      apply,\n      chipLabel: 'Provider',\n    }),\n  ];\n\n  const [filterConfig, activeFiltersConfig, areAnyFiltersApplied] =\n    setupFilters(filters, meta, CLUSTER_LIST_DEFAULT_FILTERS, apply);\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      rows={clusters.map((row) => CLUSTER_LIST_TABLE_MAPPER(row))}\n      columns={CLUSTER_LIST_TABLE_COLUMNS}\n      filterConfig={filterConfig}\n      activeFiltersConfig={activeFiltersConfig}\n      meta={meta}\n      error={error}\n      emptyState={\n        areAnyFiltersApplied ? <NoMatchingClusters /> : <NoClusters />\n      }\n      apply={apply}\n      onExport={(format) => onExport(format, meta)}\n    />\n  );\n};\n\nexport default ClusterDetailTable;\n","import React, { Fragment } from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n} from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport ClusterListTable from './ClusterListTable';\nimport { HEADER_ALERT_DISMISSED_KEY } from '../../../Helpers/constants';\nimport { useLocalStorage } from '../../../Helpers/hooks';\n\nconst ClusterListPage = () => {\n  const [wasHeaderAlertDismissed, setHeaderAlertDismissed] = useLocalStorage(\n    HEADER_ALERT_DISMISSED_KEY\n  );\n\n  return (\n    <Fragment>\n      <PageHeader>\n        <PageHeaderTitle title=\"Vulnerable clusters\" className=\"pf-u-mb-sm\" />\n        {!wasHeaderAlertDismissed && (\n          <Alert\n            variant={AlertVariant.info}\n            isInline\n            className=\"pf-u-mt-md\"\n            title=\"Vulnerability information applies to OCP4.8+ version only\"\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => setHeaderAlertDismissed(true)}\n              />\n            }\n          />\n        )}\n      </PageHeader>\n      <Main>\n        <ClusterListTable />\n      </Main>\n    </Fragment>\n  );\n};\n\nexport default ClusterListPage;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","Bullseye","EmptyState","variant","EmptyStateVariant","Title","headingLevel","size","EmptyStateBody","EmptyStateIcon","icon","PlusCircleIcon","Button","component","href","target","className","useSelector","ClusterListStore","clusters","isLoading","meta","error","apply","useUrlBoundParams","allowedParams","CLUSTER_LIST_ALLOWED_PARAMS","initialParams","fetchAction","fetchClusterListTable","changeParamsAction","changeClusterListTableParams","search","status","dynamic_status_options","version","dynamic_version_options","cluster_severity","provider","dynamic_provider_options","onExport","useExport","CLUSTER_LIST_EXPORT_PREFIX","fetchClusters","filters","useTextFilter","urlParam","label","placeholder","value","chipLabel","checkboxFilter","items","uniqBy","CLUSTER_STATUS_OPTIONS","map","CLUSTER_VERSION_OPTIONS","SEVERITY_OPTIONS","option","CLUSTER_PROVIDER_OPTIONS","setupFilters","CLUSTER_LIST_DEFAULT_FILTERS","filterConfig","activeFiltersConfig","areAnyFiltersApplied","BaseTable","rows","row","CLUSTER_LIST_TABLE_MAPPER","columns","CLUSTER_LIST_TABLE_COLUMNS","emptyState","NoMatchingClusters","format","useLocalStorage","HEADER_ALERT_DISMISSED_KEY","wasHeaderAlertDismissed","setHeaderAlertDismissed","Fragment","PageHeader","PageHeaderTitle","title","Alert","AlertVariant","isInline","actionClose","AlertActionCloseButton","onClose","s","Main","ClusterListTable"],"sourceRoot":""}