{"version":3,"file":"js/ClusterListPage.1651839061077.c86b4ab31f350cd31839.js","mappings":"uSAwCA,QA7B2B,WACzB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,KAChC,qBAAGC,oBADGC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAIlB,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAkBC,EAAlB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAERC,YAAW,WACTV,GAASW,EAAAA,EAAAA,OACTH,GAAW,KACV,OACF,IAGD,kBAAC,EAAAI,SAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,KAAM,EAAGC,QAAS,GAAIC,UAAWX,IAC9C,kBAACY,EAAA,EAAD,CACEV,UAAWA,EACXW,QAASC,EAAAA,GACTC,KAAMhB,EAASiB,KAAI,SAACC,GAAD,OAASC,EAAAA,EAAAA,IAA0BD,QAExD,kBAACE,EAAA,EAAD,CAAkBV,KAAM,EAAGC,QAAS,GAAIC,UAAWX,MCNzD,EApBwB,WAEtB,OACE,kBAAC,EAAAO,SAAD,KACE,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAiBC,MAAM,sBAAsBC,UAAU,eACvD,kBAAC,EAAAC,MAAD,CACEC,QAASC,EAAAA,aAAAA,KACTC,UAAQ,EACRJ,UAAU,aACVD,MAAM,+DAGV,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAD","sources":["webpack:///./src/Components/SmartComponents/ClusterList/ClusterListTable.js","webpack:///./src/Components/SmartComponents/ClusterList/ClusterListPage.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport BaseTable from '../BaseTable';\nimport {\n  CLUSTER_LIST_TABLE_COLUMNS,\n  CLUSTER_LIST_TABLE_MAPPER,\n} from '../../../Helpers/constants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchClusterListTable } from '../../../Store/Actions';\nimport BaseToolbar from '../BaseToolbar';\nimport BottomPagination from '../../PresentationalComponents/BottomPagination';\n\nconst ClusterDetailTable = () => {\n  const dispatch = useDispatch();\n  const { clusters, total_items } = useSelector(\n    ({ ClusterListStore }) => ClusterListStore\n  );\n\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // API response delay simulation\n    setTimeout(() => {\n      dispatch(fetchClusterListTable());\n      setLoading(false);\n    }, 2000);\n  }, []);\n\n  return (\n    <Fragment>\n      <BaseToolbar page={1} perPage={20} itemCount={total_items} />\n      <BaseTable\n        isLoading={isLoading}\n        columns={CLUSTER_LIST_TABLE_COLUMNS}\n        rows={clusters.map((row) => CLUSTER_LIST_TABLE_MAPPER(row))}\n      />\n      <BottomPagination page={1} perPage={20} itemCount={total_items} />\n    </Fragment>\n  );\n};\n\nexport default ClusterDetailTable;\n","import React, { Fragment } from 'react';\nimport { Alert, AlertVariant } from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport ClusterListTable from './ClusterListTable';\n\nconst ClusterListPage = () => {\n  // TODO: The alert should be dismissable (actionClose prop)\n  return (\n    <Fragment>\n      <PageHeader>\n        <PageHeaderTitle title=\"Vulnerable clusters\" className=\"pf-u-mb-sm\" />\n        <Alert\n          variant={AlertVariant.info}\n          isInline\n          className=\"pf-u-mt-md\"\n          title=\"Vulnerability information applies to OCP4.8+ version only\"\n        />\n      </PageHeader>\n      <Main>\n        <ClusterListTable />\n      </Main>\n    </Fragment>\n  );\n};\n\nexport default ClusterListPage;\n"],"names":["dispatch","useDispatch","useSelector","ClusterListStore","clusters","total_items","useState","isLoading","setLoading","useEffect","setTimeout","fetchClusterListTable","Fragment","BaseToolbar","page","perPage","itemCount","BaseTable","columns","CLUSTER_LIST_TABLE_COLUMNS","rows","map","row","CLUSTER_LIST_TABLE_MAPPER","BottomPagination","PageHeader","PageHeaderTitle","title","className","Alert","variant","AlertVariant","isInline","Main","ClusterListTable"],"sourceRoot":""}