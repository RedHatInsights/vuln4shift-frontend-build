{"version":3,"file":"js/ClusterListPage.1658449548138.5193210ca810dddb5571.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/NoClusters.js","webpack:///./src/Components/SmartComponents/ClusterList/ClusterListTable.js","webpack:///./src/Components/SmartComponents/ClusterList/ClusterListPage.js","webpack:///./src/Components/SmartComponents/Filters/TextFilter.js","webpack:///./src/Components/SmartComponents/Generic/BaseTable.js","webpack:///./src/Helpers/hooks.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Button,\n  Bullseye,\n  Title,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\n\nconst NoClusters = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={PlusCircleIcon} size=\"sm\" />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        No clusters yet\n      </Title>\n      <EmptyStateBody>\n        To get started, create or register your cluster to get information from\n        Insights Vulnerability.\n      </EmptyStateBody>\n      <Button\n        variant=\"primary\"\n        component=\"a\"\n        href=\"https://console.redhat.com/openshift/create/\"\n        target=\"_blank\"\n      >\n        Create Cluster\n      </Button>\n      <br />\n      <Button\n        variant=\"link\"\n        component=\"a\"\n        href=\"https://console.redhat.com/openshift/register/\"\n        target=\"_blank\"\n        className=\"pf-u-mt-md\"\n      >\n        Register Cluster\n      </Button>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoClusters;\n","import React from 'react';\nimport {\n  CLUSTER_LIST_ALLOWED_PARAMS,\n  CLUSTER_LIST_TABLE_COLUMNS,\n  CLUSTER_LIST_TABLE_MAPPER,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport {\n  changeClusterListTableParams,\n  fetchClusterListTable,\n} from '../../../Store/Actions';\nimport NoClusters from '../../PresentationalComponents/EmptyStates/NoClusters';\nimport useTextFilter from '../Filters/TextFilter';\nimport { useUrlBoundParams } from '../../../Helpers/hooks';\nimport BaseTable from '../Generic/BaseTable';\n\nconst ClusterDetailTable = () => {\n  const { clusters, isLoading, meta } = useSelector(\n    ({ ClusterListStore }) => ClusterListStore\n  );\n\n  const apply = useUrlBoundParams(\n    CLUSTER_LIST_ALLOWED_PARAMS,\n    meta,\n    fetchClusterListTable,\n    changeClusterListTableParams\n  );\n\n  const { search } = meta;\n\n  const filters = [\n    useTextFilter({\n      urlParam: 'search',\n      label: 'Name',\n      placeholder: 'Filter by name',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n  ];\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      rows={clusters.map((row) => CLUSTER_LIST_TABLE_MAPPER(row))}\n      columns={CLUSTER_LIST_TABLE_COLUMNS}\n      filters={filters}\n      meta={meta}\n      emptyState={<NoClusters />}\n      apply={apply}\n    />\n  );\n};\n\nexport default ClusterDetailTable;\n","import React, { Fragment } from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n} from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport ClusterListTable from './ClusterListTable';\nimport { HEADER_ALERT_DISMISSED_KEY } from '../../../Helpers/constants';\nimport { useLocalStorage } from '../../../Helpers/hooks';\n\nconst ClusterListPage = () => {\n  const [wasHeaderAlertDismissed, setHeaderAlertDismissed] = useLocalStorage(\n    HEADER_ALERT_DISMISSED_KEY\n  );\n\n  return (\n    <Fragment>\n      <PageHeader>\n        <PageHeaderTitle title=\"Vulnerable clusters\" className=\"pf-u-mb-sm\" />\n        {!wasHeaderAlertDismissed && (\n          <Alert\n            variant={AlertVariant.info}\n            isInline\n            className=\"pf-u-mt-md\"\n            title=\"Vulnerability information applies to OCP4.8+ version only\"\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => setHeaderAlertDismissed(true)}\n              />\n            }\n          />\n        )}\n      </PageHeader>\n      <Main>\n        <ClusterListTable />\n      </Main>\n    </Fragment>\n  );\n};\n\nexport default ClusterListPage;\n","import { useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst useTextFilter = ({\n  urlParam,\n  label,\n  placeholder,\n  value,\n  apply,\n  chipLabel,\n}) => {\n  const [searchValue, setSearchValue] = useState();\n  const [handleSearch] = useState(() =>\n    debounce((newValue) => {\n      if (newValue !== undefined) {\n        apply({ [urlParam]: newValue, offset: 0 });\n      }\n    }, 400)\n  );\n\n  useEffect(() => setSearchValue(value), [value]);\n\n  const filterConfig = {\n    type: conditionalFilterType.text,\n    label: label,\n    key: urlParam,\n    filterValues: {\n      'aria-label': 'search-field',\n      id: `search-${label.id}`,\n      onChange: (event, value) => {\n        setSearchValue(value);\n        handleSearch(value);\n      },\n      placeholder,\n      value: searchValue,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: () => apply({ [urlParam]: undefined, offset: 0 }),\n    key: urlParam,\n    category: chipLabel,\n    chips: [\n      {\n        name: value,\n      },\n    ],\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default useTextFilter;\n","import React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport BaseTableBody from '../Generic/BaseTableBody';\nimport BaseToolbar from '../Generic/BaseToolbar';\nimport BottomPagination from '../../PresentationalComponents/BottomPagination';\nimport { setupFilters } from '../../../Helpers/miscHelper';\n\nconst BaseTable = ({\n  isLoading,\n  isExpandable,\n  rows,\n  columns,\n  filters,\n  meta,\n  emptyState,\n  apply,\n}) => {\n  const { offset, limit, total_items, sort } = meta;\n\n  const [filterConfig, activeFiltersConfig] = setupFilters(filters);\n\n  return (\n    <Fragment>\n      <BaseToolbar\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n        filterConfig={filterConfig}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      <BaseTableBody\n        isLoading={isLoading}\n        columns={columns}\n        rows={rows}\n        isExpandable={isExpandable}\n        emptyState={emptyState}\n        sortParam={sort}\n        apply={apply}\n      />\n      <BottomPagination\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n      />\n    </Fragment>\n  );\n};\n\nBaseTable.propTypes = {\n  isLoading: propTypes.bool.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node.isRequired,\n      sortParam: propTypes.string,\n    })\n  ).isRequired,\n  rows: propTypes.arrayOf(\n    propTypes.shape({\n      key: propTypes.string.isRequired,\n      cells: propTypes.arrayOf(propTypes.node).isRequired,\n      expandableContent: propTypes.node,\n    })\n  ).isRequired,\n  isExpandable: propTypes.bool,\n  emptyState: propTypes.node.isRequired,\n  sortParam: propTypes.string,\n  filters: propTypes.array,\n  meta: propTypes.shape({\n    offset: propTypes.number,\n    limit: propTypes.number,\n    total_items: propTypes.number,\n    sort: propTypes.string,\n  }),\n  apply: propTypes.func,\n};\n\nexport default BaseTable;\n","import { useState, useEffect } from 'react';\nimport qs from 'query-string';\nimport { useDispatch } from 'react-redux';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { PUBLISHED_OPTIONS } from './constants';\n\nexport const useLocalStorage = (key) => {\n  const [sessionValue, setSessionValue] = useState(localStorage.getItem(key));\n\n  const setValue = (newValue) => {\n    setSessionValue(newValue);\n    localStorage.setItem(key, newValue);\n  };\n\n  return [sessionValue, setValue];\n};\n\nexport function filterUrlParams(urlParams, allowedParams) {\n  Object.entries(urlParams)\n    .filter(([key, value]) => !allowedParams.includes(key) || value === '')\n    .forEach(([key]) => delete urlParams[key]);\n\n  return urlParams;\n}\n\nexport const useUrlParams = (allowedParams) => {\n  const url = new URL(window.location);\n  const urlParams = filterUrlParams(qs.parse(url.search), allowedParams);\n\n  const setUrlParams = (parameters) => {\n    const searchParams = qs.stringify(\n      filterUrlParams(parameters, allowedParams)\n    );\n\n    window.history.replaceState(\n      null,\n      null,\n      `${url.origin}${url.pathname}?${searchParams}`\n    );\n  };\n\n  return [urlParams, setUrlParams];\n};\n\nconst transformPublishedParam = (urlParams) => {\n  const formatDate = (timestamp) => {\n    const pad = (number) => `${`${number}`.length === 1 ? '0' : ''}${number}`;\n\n    const date = new Date(timestamp);\n\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1; // month is zero indexed\n    const day = date.getDate();\n\n    return `${year}-${pad(month)}-${pad(day)}`;\n  };\n\n  if (urlParams.published) {\n    const option = PUBLISHED_OPTIONS.find(\n      (option) => option.value === urlParams.published\n    );\n\n    urlParams.published = `${option.from ? formatDate(option.from) : ''},${\n      option.to ? formatDate(option.to) : ''\n    }`;\n  }\n\n  return urlParams;\n};\n\n// when creating additional transformer in the future\n// create a new function for it and then add the function to this array\nconst urlTransformers = [transformPublishedParam];\n\nconst transformUrlParamsBeforeFetching = (urlParams) => {\n  let newParams = { ...urlParams };\n\n  urlTransformers.forEach((transformer) => {\n    newParams = transformer(newParams);\n  });\n\n  return newParams;\n};\n\nexport const useUrlBoundParams = (\n  allowedParams,\n  defaultParams,\n  fetchAction,\n  changeParamsAction\n) => {\n  const dispatch = useDispatch();\n\n  const [urlParams] = useUrlParams(allowedParams);\n\n  useEffect(() => {\n    apply({ ...defaultParams, ...urlParams });\n  }, []);\n\n  useDeepCompareEffect(() => {\n    dispatch(fetchAction(transformUrlParamsBeforeFetching(urlParams)));\n  }, [urlParams]);\n\n  const apply = (newParams) => {\n    const [urlParams, setUrlParams] = useUrlParams(allowedParams);\n\n    setUrlParams({ ...urlParams, ...newParams });\n    dispatch(changeParamsAction({ ...urlParams, ...newParams }));\n  };\n\n  return apply;\n};\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","Bullseye","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","PlusCircleIcon","size","Title","headingLevel","EmptyStateBody","Button","component","href","target","className","useSelector","ClusterListStore","clusters","isLoading","meta","apply","useUrlBoundParams","CLUSTER_LIST_ALLOWED_PARAMS","fetchClusterListTable","changeClusterListTableParams","search","filters","useTextFilter","urlParam","label","placeholder","value","chipLabel","BaseTable","rows","map","row","CLUSTER_LIST_TABLE_MAPPER","columns","CLUSTER_LIST_TABLE_COLUMNS","emptyState","NoClusters","useLocalStorage","HEADER_ALERT_DISMISSED_KEY","wasHeaderAlertDismissed","setHeaderAlertDismissed","Fragment","PageHeader","PageHeaderTitle","title","Alert","AlertVariant","isInline","actionClose","AlertActionCloseButton","onClose","Main","ClusterListTable","useState","searchValue","setSearchValue","debounce","newValue","undefined","handleSearch","useEffect","filterConfig","type","conditionalFilterType","key","filterValues","id","onChange","event","activeFiltersConfig","isShown","onDelete","category","chips","isExpandable","offset","limit","total_items","sort","setupFilters","page","perPage","itemCount","sortParam","propTypes","isRequired","cells","expandableContent","localStorage","getItem","sessionValue","setSessionValue","setItem","filterUrlParams","urlParams","allowedParams","Object","entries","filter","includes","forEach","useUrlParams","url","URL","window","location","qs","parameters","searchParams","history","replaceState","origin","pathname","urlTransformers","formatDate","timestamp","pad","number","length","date","Date","year","getFullYear","month","getMonth","day","getDate","published","option","PUBLISHED_OPTIONS","from","to","defaultParams","fetchAction","changeParamsAction","dispatch","useDispatch","useDeepCompareEffect","newParams","transformer","transformUrlParamsBeforeFetching","setUrlParams"],"sourceRoot":""}