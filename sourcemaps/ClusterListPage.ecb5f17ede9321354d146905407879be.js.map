{"version":3,"file":"js/ClusterListPage.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/Components/PresentationalComponents/EmptyStates/NoMatchingItems.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/NoClusters.js","webpack:///./src/Components/SmartComponents/ClusterList/ClusterListTable.js","webpack:///./src/Components/SmartComponents/ClusterList/ClusterListPage.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  Bullseye,\n  EmptyStateHeader,\n} from '@patternfly/react-core';\n\nconst NoMatchingItems = ({ items = 'items' }) => (\n  <Bullseye>\n    <EmptyState variant=\"lg\">\n      <EmptyStateHeader\n        titleText={`No matching ${items} found`}\n        headingLevel=\"h5\"\n      />\n      <EmptyStateBody>\n        To continue, edit your filter settings and search again.\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nNoMatchingItems.propTypes = {\n  items: propTypes.string,\n};\n\nexport default NoMatchingItems;\n","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Button,\n  Bullseye,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\n\nconst NoClusters = () => (\n  <Bullseye>\n    <EmptyState variant=\"lg\">\n      <EmptyStateHeader\n        titleText=\"No clusters yet\"\n        icon={<EmptyStateIcon icon={PlusCircleIcon} size=\"sm\" />}\n        headingLevel=\"h5\"\n      />\n      <EmptyStateBody>\n        To get started, create or register your cluster to get information from\n        Insights Vulnerability.\n      </EmptyStateBody>\n      <EmptyStateFooter>\n        <Button\n          variant=\"primary\"\n          component=\"a\"\n          href=\"https://console.redhat.com/openshift/create/\"\n          target=\"_blank\"\n        >\n          Create Cluster\n        </Button>\n        <br />\n        <Button\n          variant=\"link\"\n          component=\"a\"\n          href=\"https://console.redhat.com/openshift/register/\"\n          target=\"_blank\"\n          className=\"pf-u-mt-md\"\n        >\n          Register Cluster\n        </Button>\n      </EmptyStateFooter>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoClusters;\n","import React from 'react';\nimport {\n  CLUSTER_LIST_ALLOWED_PARAMS,\n  CLUSTER_LIST_DEFAULT_FILTERS,\n  CLUSTER_LIST_EXPORT_PREFIX,\n  CLUSTER_LIST_TABLE_COLUMNS,\n  CLUSTER_LIST_TABLE_MAPPER,\n  CLUSTER_STATUS_OPTIONS,\n  CLUSTER_VERSION_OPTIONS,\n  CLUSTER_PROVIDER_OPTIONS,\n  CLUSTER_SEVERITY_OPTIONS,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport {\n  changeClusterListTableParams,\n  fetchClusterListTable,\n} from '../../../Store/Actions';\nimport NoClusters from '../../PresentationalComponents/EmptyStates/NoClusters';\nimport useTextFilter from '../Filters/TextFilter';\nimport { useExport, useUrlBoundParams } from '../../../Helpers/hooks';\nimport BaseTable from '../Generic/BaseTable';\nimport { setupFilters } from '../../../Helpers/miscHelper';\nimport NoMatchingItems from '../../PresentationalComponents/EmptyStates/NoMatchingItems';\nimport { fetchClusters } from '../../../Helpers/apiHelper';\nimport checkboxFilter from '../Filters/CheckboxFilter';\nimport { uniqBy } from 'lodash';\n\nconst ClusterCveTable = () => {\n  const { clusters, isLoading, meta, error } = useSelector(\n    ({ ClusterListStore }) => ClusterListStore\n  );\n\n  const apply = useUrlBoundParams({\n    allowedParams: CLUSTER_LIST_ALLOWED_PARAMS,\n    initialParams: meta,\n    fetchAction: fetchClusterListTable,\n    changeParamsAction: changeClusterListTableParams,\n  });\n\n  const {\n    search,\n    status,\n    dynamic_status_options,\n    version,\n    dynamic_version_options,\n    cluster_severity,\n    provider,\n    dynamic_provider_options,\n  } = meta;\n\n  const onExport = useExport({\n    filenamePrefix: CLUSTER_LIST_EXPORT_PREFIX,\n    fetchAction: fetchClusters,\n    allowedParams: CLUSTER_LIST_ALLOWED_PARAMS,\n  });\n\n  const filters = [\n    useTextFilter({\n      urlParam: 'search',\n      label: 'Name',\n      placeholder: 'Filter by name',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n    checkboxFilter({\n      urlParam: 'status',\n      label: 'Status',\n      value: status,\n      items: uniqBy(\n        CLUSTER_STATUS_OPTIONS.concat(\n          (dynamic_status_options ?? []).map((status) => ({\n            label: status,\n            value: status,\n          }))\n        ),\n        'value'\n      ),\n      placeholder: 'Filter by status',\n      apply,\n      chipLabel: 'Status',\n    }),\n    checkboxFilter({\n      urlParam: 'version',\n      label: 'Version',\n      value: version,\n      items: uniqBy(\n        CLUSTER_VERSION_OPTIONS.concat(\n          (dynamic_version_options ?? []).map((version) => ({\n            label: version,\n            value: version,\n          }))\n        ),\n        'value'\n      ),\n      placeholder: 'Filter by version',\n      apply,\n      chipLabel: 'Version',\n    }),\n    checkboxFilter({\n      urlParam: 'cluster_severity',\n      label: 'CVEs severity',\n      value: cluster_severity,\n      items: CLUSTER_SEVERITY_OPTIONS,\n      placeholder: 'Filter by CVEs severity',\n      apply,\n      chipLabel: 'CVEs severity',\n    }),\n    checkboxFilter({\n      urlParam: 'provider',\n      label: 'Provider',\n      value: provider,\n      items: uniqBy(\n        CLUSTER_PROVIDER_OPTIONS.concat(\n          (dynamic_provider_options ?? []).map((provider) => ({\n            label: provider,\n            value: provider,\n          }))\n        ),\n        'value'\n      ),\n      placeholder: 'Filter by provider',\n      apply,\n      chipLabel: 'Provider',\n    }),\n  ];\n\n  const [filterConfig, activeFiltersConfig, areAnyFiltersApplied] =\n    setupFilters(filters, meta, CLUSTER_LIST_DEFAULT_FILTERS, apply);\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      rows={clusters.map((row) => CLUSTER_LIST_TABLE_MAPPER(row))}\n      columns={CLUSTER_LIST_TABLE_COLUMNS}\n      filterConfig={filterConfig}\n      activeFiltersConfig={activeFiltersConfig}\n      meta={meta}\n      error={error}\n      emptyState={\n        areAnyFiltersApplied ? (\n          <NoMatchingItems items=\"clusters\" />\n        ) : (\n          <NoClusters />\n        )\n      }\n      apply={apply}\n      onExport={(format) => onExport(format, meta)}\n    />\n  );\n};\n\nexport default ClusterCveTable;\n","import React, { Fragment, useEffect } from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n} from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport ClusterListTable from './ClusterListTable';\nimport { HEADER_ALERT_DISMISSED_KEY } from '../../../Helpers/constants';\nimport { useLocalStorage } from '../../../Helpers/hooks';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst ClusterListPage = () => {\n  const chrome = useChrome();\n\n  const [wasHeaderAlertDismissed, setHeaderAlertDismissed] = useLocalStorage(\n    HEADER_ALERT_DISMISSED_KEY\n  );\n\n  useEffect(() => {\n    chrome.updateDocumentTitle(\n      'Clusters - Vulnerability Dashboard | Red Hat Insights | console.redhat.com'\n    );\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeader>\n        <PageHeaderTitle title=\"Vulnerable clusters\" className=\"pf-u-mb-sm\" />\n        {!wasHeaderAlertDismissed && (\n          <Alert\n            variant={AlertVariant.info}\n            isInline\n            className=\"pf-u-mt-md\"\n            title=\"Vulnerability information applies to OCP4.8+ version only\"\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => setHeaderAlertDismissed(true)}\n              />\n            }\n          />\n        )}\n      </PageHeader>\n      <Main>\n        <ClusterListTable />\n      </Main>\n    </Fragment>\n  );\n};\n\nexport default ClusterListPage;\n"],"names":["NoMatchingItems","items","Bullseye","EmptyState","variant","EmptyStateHeader","titleText","headingLevel","EmptyStateBody","propTypes","icon","EmptyStateIcon","size","EmptyStateFooter","Button","component","href","target","className","clusters","isLoading","meta","error","ClusterListStore","apply","allowedParams","initialParams","fetchAction","changeParamsAction","search","status","dynamic_status_options","version","dynamic_version_options","cluster_severity","provider","dynamic_provider_options","onExport","filenamePrefix","filters","urlParam","label","placeholder","value","chipLabel","uniqBy","concat","map","filterConfig","activeFiltersConfig","areAnyFiltersApplied","BaseTable","rows","row","columns","emptyState","format","chrome","useChrome","wasHeaderAlertDismissed","setHeaderAlertDismissed","useEffect","updateDocumentTitle","Fragment","PageHeader","PageHeaderTitle","title","Alert","AlertVariant","info","isInline","actionClose","AlertActionCloseButton","onClose","Main","ClusterListTable"],"sourceRoot":""}