{"version":3,"file":"js/ClusterListPage.1658449155750.dbdc6ba2d54f8f04b928.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/NoClusters.js","webpack:///./src/Components/SmartComponents/ClusterList/ClusterListTable.js","webpack:///./src/Components/SmartComponents/ClusterList/ClusterListPage.js","webpack:///./src/Components/SmartComponents/Filters/TextFilter.js","webpack:///./src/Helpers/hooks.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Button,\n  Bullseye,\n  Title,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\n\nconst NoClusters = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={PlusCircleIcon} size=\"sm\" />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        No clusters yet\n      </Title>\n      <EmptyStateBody>\n        To get started, create or register your cluster to get information from\n        Insights Vulnerability.\n      </EmptyStateBody>\n      <Button\n        variant=\"primary\"\n        component=\"a\"\n        href=\"https://console.redhat.com/openshift/create/\"\n        target=\"_blank\"\n      >\n        Create Cluster\n      </Button>\n      <br />\n      <Button\n        variant=\"link\"\n        component=\"a\"\n        href=\"https://console.redhat.com/openshift/register/\"\n        target=\"_blank\"\n        className=\"pf-u-mt-md\"\n      >\n        Register Cluster\n      </Button>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoClusters;\n","import React, { Fragment } from 'react';\nimport BaseTableBody from '../Generic/BaseTableBody';\nimport {\n  CLUSTER_LIST_ALLOWED_PARAMS,\n  CLUSTER_LIST_TABLE_COLUMNS,\n  CLUSTER_LIST_TABLE_MAPPER,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport {\n  changeClusterListTableParams,\n  fetchClusterListTable,\n} from '../../../Store/Actions';\nimport BaseToolbar from '../Generic/BaseToolbar';\nimport BottomPagination from '../../PresentationalComponents/BottomPagination';\nimport NoClusters from '../../PresentationalComponents/EmptyStates/NoClusters';\nimport { setupFilters } from '../../../Helpers/miscHelper';\nimport useTextFilter from '../Filters/TextFilter';\nimport { useUrlBoundParams } from '../../../Helpers/hooks';\n\nconst ClusterDetailTable = () => {\n  const { clusters, isLoading, meta } = useSelector(\n    ({ ClusterListStore }) => ClusterListStore\n  );\n\n  const apply = useUrlBoundParams(\n    CLUSTER_LIST_ALLOWED_PARAMS,\n    meta,\n    fetchClusterListTable,\n    changeClusterListTableParams\n  );\n\n  const { total_items, limit, offset, sort, search } = meta;\n\n  const [filterConfig, activeFiltersConfig] = setupFilters([\n    useTextFilter({\n      urlParam: 'search',\n      label: 'Name',\n      placeholder: 'Filter by name',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n  ]);\n\n  return (\n    <Fragment>\n      <BaseToolbar\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n        filterConfig={filterConfig}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      <BaseTableBody\n        isLoading={isLoading}\n        columns={CLUSTER_LIST_TABLE_COLUMNS}\n        rows={clusters.map((row) => CLUSTER_LIST_TABLE_MAPPER(row))}\n        emptyState={<NoClusters />}\n        sortParam={sort}\n        apply={apply}\n      />\n      <BottomPagination\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n      />\n    </Fragment>\n  );\n};\n\nexport default ClusterDetailTable;\n","import React, { Fragment } from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n} from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport ClusterListTable from './ClusterListTable';\nimport { HEADER_ALERT_DISMISSED_KEY } from '../../../Helpers/constants';\nimport { useLocalStorage } from '../../../Helpers/hooks';\n\nconst ClusterListPage = () => {\n  const [wasHeaderAlertDismissed, setHeaderAlertDismissed] = useLocalStorage(\n    HEADER_ALERT_DISMISSED_KEY\n  );\n\n  return (\n    <Fragment>\n      <PageHeader>\n        <PageHeaderTitle title=\"Vulnerable clusters\" className=\"pf-u-mb-sm\" />\n        {!wasHeaderAlertDismissed && (\n          <Alert\n            variant={AlertVariant.info}\n            isInline\n            className=\"pf-u-mt-md\"\n            title=\"Vulnerability information applies to OCP4.8+ version only\"\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => setHeaderAlertDismissed(true)}\n              />\n            }\n          />\n        )}\n      </PageHeader>\n      <Main>\n        <ClusterListTable />\n      </Main>\n    </Fragment>\n  );\n};\n\nexport default ClusterListPage;\n","import { useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst useTextFilter = ({\n  urlParam,\n  label,\n  placeholder,\n  value,\n  apply,\n  chipLabel,\n}) => {\n  const [searchValue, setSearchValue] = useState();\n  const [handleSearch] = useState(() =>\n    debounce((newValue) => {\n      if (newValue !== undefined) {\n        apply({ [urlParam]: newValue, offset: 0 });\n      }\n    }, 400)\n  );\n\n  useEffect(() => setSearchValue(value), [value]);\n\n  const filterConfig = {\n    type: conditionalFilterType.text,\n    label: label,\n    key: urlParam,\n    filterValues: {\n      'aria-label': 'search-field',\n      id: `search-${label.id}`,\n      onChange: (event, value) => {\n        setSearchValue(value);\n        handleSearch(value);\n      },\n      placeholder,\n      value: searchValue,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: () => apply({ [urlParam]: undefined, offset: 0 }),\n    key: urlParam,\n    category: chipLabel,\n    chips: [\n      {\n        name: value,\n      },\n    ],\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default useTextFilter;\n","import { useState, useEffect } from 'react';\nimport qs from 'query-string';\nimport { useDispatch } from 'react-redux';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { PUBLISHED_OPTIONS } from './constants';\n\nexport const useLocalStorage = (key) => {\n  const [sessionValue, setSessionValue] = useState(localStorage.getItem(key));\n\n  const setValue = (newValue) => {\n    setSessionValue(newValue);\n    localStorage.setItem(key, newValue);\n  };\n\n  return [sessionValue, setValue];\n};\n\nexport function filterUrlParams(urlParams, allowedParams) {\n  Object.entries(urlParams)\n    .filter(([key, value]) => !allowedParams.includes(key) || value === '')\n    .forEach(([key]) => delete urlParams[key]);\n\n  return urlParams;\n}\n\nexport const useUrlParams = (allowedParams) => {\n  const url = new URL(window.location);\n  const urlParams = filterUrlParams(qs.parse(url.search), allowedParams);\n\n  const setUrlParams = (parameters) => {\n    const searchParams = qs.stringify(\n      filterUrlParams(parameters, allowedParams)\n    );\n\n    window.history.replaceState(\n      null,\n      null,\n      `${url.origin}${url.pathname}?${searchParams}`\n    );\n  };\n\n  return [urlParams, setUrlParams];\n};\n\nconst transformPublishedParam = (urlParams) => {\n  const formatDate = (timestamp) => {\n    const pad = (number) => `${`${number}`.length === 1 ? '0' : ''}${number}`;\n\n    const date = new Date(timestamp);\n\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1; // month is zero indexed\n    const day = date.getDate();\n\n    return `${year}-${pad(month)}-${pad(day)}`;\n  };\n\n  if (urlParams.published) {\n    const option = PUBLISHED_OPTIONS.find(\n      (option) => option.value === urlParams.published\n    );\n\n    urlParams.published = `${option.from ? formatDate(option.from) : ''},${\n      option.to ? formatDate(option.to) : ''\n    }`;\n  }\n\n  return urlParams;\n};\n\n// when creating additional transformer in the future\n// create a new function for it and then add the function to this array\nconst urlTransformers = [transformPublishedParam];\n\nconst transformUrlParamsBeforeFetching = (urlParams) => {\n  let newParams = { ...urlParams };\n\n  urlTransformers.forEach((transformer) => {\n    newParams = transformer(newParams);\n  });\n\n  return newParams;\n};\n\nexport const useUrlBoundParams = (\n  allowedParams,\n  defaultParams,\n  fetchAction,\n  changeParamsAction\n) => {\n  const dispatch = useDispatch();\n\n  const [urlParams] = useUrlParams(allowedParams);\n\n  useEffect(() => {\n    apply({ ...defaultParams, ...urlParams });\n  }, []);\n\n  useDeepCompareEffect(() => {\n    dispatch(fetchAction(transformUrlParamsBeforeFetching(urlParams)));\n  }, [urlParams]);\n\n  const apply = (newParams) => {\n    const [urlParams, setUrlParams] = useUrlParams(allowedParams);\n\n    setUrlParams({ ...urlParams, ...newParams });\n    dispatch(changeParamsAction({ ...urlParams, ...newParams }));\n  };\n\n  return apply;\n};\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","Bullseye","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","PlusCircleIcon","size","Title","headingLevel","EmptyStateBody","Button","component","href","target","className","useSelector","ClusterListStore","clusters","isLoading","meta","apply","useUrlBoundParams","CLUSTER_LIST_ALLOWED_PARAMS","fetchClusterListTable","changeClusterListTableParams","total_items","limit","offset","sort","search","setupFilters","useTextFilter","urlParam","label","placeholder","value","chipLabel","filterConfig","activeFiltersConfig","Fragment","BaseToolbar","page","perPage","itemCount","BaseTableBody","columns","CLUSTER_LIST_TABLE_COLUMNS","rows","map","row","CLUSTER_LIST_TABLE_MAPPER","emptyState","NoClusters","sortParam","BottomPagination","useLocalStorage","HEADER_ALERT_DISMISSED_KEY","wasHeaderAlertDismissed","setHeaderAlertDismissed","PageHeader","PageHeaderTitle","title","Alert","AlertVariant","isInline","actionClose","AlertActionCloseButton","onClose","Main","ClusterListTable","useState","searchValue","setSearchValue","debounce","newValue","undefined","handleSearch","useEffect","type","conditionalFilterType","key","filterValues","id","onChange","event","isShown","onDelete","category","chips","localStorage","getItem","sessionValue","setSessionValue","setItem","filterUrlParams","urlParams","allowedParams","Object","entries","filter","includes","forEach","useUrlParams","url","URL","window","location","qs","parameters","searchParams","history","replaceState","origin","pathname","urlTransformers","formatDate","timestamp","pad","number","length","date","Date","year","getFullYear","month","getMonth","day","getDate","published","option","PUBLISHED_OPTIONS","from","to","defaultParams","fetchAction","changeParamsAction","dispatch","useDispatch","useDeepCompareEffect","newParams","transformer","transformUrlParamsBeforeFetching","setUrlParams"],"sourceRoot":""}