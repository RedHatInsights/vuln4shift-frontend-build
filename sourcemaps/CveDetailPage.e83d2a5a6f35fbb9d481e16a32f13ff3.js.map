{"version":3,"file":"js/CveDetailPage.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/Components/PresentationalComponents/EmptyStates/NoMatchingClusters.js","webpack:///./src/Components/PresentationalComponents/WithLoader.js","webpack:///./src/Helpers/vectorNames.js","webpack:///./src/Components/PresentationalComponents/CvssVector.js","webpack:///./src/Components/SmartComponents/CveDetail/CveDetailPageHeader.js","webpack:///./src/Components/SmartComponents/CveDetail/CveDetailTable.js","webpack:///./src/Components/SmartComponents/CveDetail/CveDetailPage.js"],"sourcesContent":["import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  Bullseye,\n  EmptyStateHeader,\n} from '@patternfly/react-core';\n\nconst NoMatchingClusters = () => (\n  <Bullseye>\n    <EmptyState variant=\"lg\">\n      <EmptyStateHeader\n        titleText=\"No matching clusters found\"\n        headingLevel=\"h5\"\n      />\n      <EmptyStateBody>\n        To continue, edit your filter settings and search again.\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoMatchingClusters;\n","import {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport SkeletonTable from '@redhat-cloud-services/frontend-components/SkeletonTable/SkeletonTable';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Skeleton as PfSkeleton } from '@patternfly/react-core';\n\nexport const LoaderType = {\n  spinner: 'spinner',\n  table: 'table',\n  compactTable: 'compactTable',\n  rectangle: 'rectangle',\n  inlineSkeleton: 'inlineSkeleton',\n  skeleton: 'skeleton',\n};\n\nconst WithLoader = ({ isLoading, variant, children, size, ...props }) => {\n  if (isLoading) {\n    switch (variant) {\n      case LoaderType.spinner:\n        return <Spinner centered {...props} />;\n      case LoaderType.table:\n        return <SkeletonTable {...props} />;\n      case LoaderType.compactTable:\n        return <SkeletonTable variant={TableVariant.compact} {...props} />;\n      case LoaderType.rectangle:\n        return <Skeleton shape=\"square\" {...props} />;\n      case LoaderType.inlineSkeleton:\n        return (\n          <PfSkeleton\n            size={size ?? SkeletonSize.lg}\n            {...props}\n            style={{ display: 'inline-block', ...props.style }}\n          />\n        );\n      default:\n        return <Skeleton size={size ?? SkeletonSize.lg} {...props} />;\n    }\n  }\n\n  return children;\n};\n\nWithLoader.propTypes = {\n  isLoading: propTypes.bool,\n  variant: propTypes.oneOf(Object.keys(LoaderType)),\n  style: propTypes.object,\n  children: propTypes.node,\n  size: propTypes.string,\n};\n\nexport default WithLoader;\n","export const V3names = {\n  AV: {\n    name: 'Attack vector',\n    values: {\n      N: 'Network',\n      A: 'Adjacent',\n      L: 'Local',\n      P: 'Physical',\n    },\n  },\n  AC: {\n    name: 'Attack complexity',\n    values: {\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  PR: {\n    name: 'Privileges required',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  UI: {\n    name: 'User interaction',\n    values: {\n      N: 'None',\n      R: 'Required',\n    },\n  },\n  S: {\n    name: 'Scope',\n    values: {\n      U: 'Unchanged',\n      C: 'Changed',\n    },\n  },\n  C: {\n    name: 'Confidentiality',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  I: {\n    name: 'Integrity',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  A: {\n    name: 'Availability',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n};\n\nexport const V2names = {\n  AV: {\n    name: 'Access vector',\n    values: {\n      N: 'Network',\n      A: 'Adjacent Network',\n      L: 'Local',\n    },\n  },\n  AC: {\n    name: 'Access complexity',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  Au: {\n    name: 'Authentication',\n    values: {\n      M: 'Multiple',\n      S: 'Single',\n      N: 'None',\n    },\n  },\n  C: {\n    name: 'Confidentiality impact',\n    values: {\n      C: 'Complete',\n      P: 'Partial',\n      N: 'None',\n    },\n  },\n  I: {\n    name: 'Integrity impact',\n    values: {\n      C: 'Complete',\n      P: 'Partial',\n      N: 'None',\n    },\n  },\n  A: {\n    name: 'Availability impact',\n    values: {\n      C: 'Complete',\n      P: 'Partial',\n      N: 'None',\n    },\n  },\n};\n","import {\n  Popover,\n  TextContent,\n  Text,\n  TextVariants,\n  Icon,\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { TableVariant } from '@patternfly/react-table';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n} from '@patternfly/react-table/deprecated';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport WithLoader, { LoaderType } from './WithLoader';\nimport { V3names, V2names } from '../../Helpers/vectorNames';\n\nexport const parseVector = (vector, namesMapping) => {\n  let parsedVector = {};\n\n  vector?.split('/').forEach((curr) => {\n    let [key, val] = curr.split(':');\n\n    const name = namesMapping[key]?.name;\n    const value = namesMapping[key]?.values[val] ?? 'N/A';\n\n    if (name) {\n      parsedVector[name] = value;\n    }\n  });\n\n  return parsedVector;\n};\n\nconst CvssVector = ({\n  cvss2Vector,\n  cvss3Vector,\n  score,\n  isLoading,\n  hasMetadata,\n}) => {\n  const cvssVersion = cvss2Vector ? 'CVSS 2.0' : 'CVSS 3.0';\n  const cvssVector = cvss2Vector || cvss3Vector;\n  const namesMapping = cvss2Vector ? V2names : V3names;\n  const parsedVector = parseVector(cvssVector, namesMapping);\n\n  delete parsedVector.cvssVersion;\n\n  return hasMetadata ? (\n    <TextContent>\n      <Popover\n        id=\"popover-cvss\"\n        position=\"bottom\"\n        maxWidth=\"100%\"\n        enableFlip\n        headerContent={`${cvssVersion} vector breakdown`}\n        bodyContent={\n          <WithLoader\n            isLoading={isLoading}\n            columns={['Metric', 'Value']}\n            rows={8}\n            variant={LoaderType.compactTable}\n          >\n            {cvssVector ? (\n              <Table\n                aria-label=\"Metric breakdown\"\n                variant={TableVariant.compact}\n                gridBreakPoint=\"\"\n                cells={['Metric', 'Value']}\n                rows={Object.entries(parsedVector)}\n              >\n                <TableHeader />\n                <TableBody />\n              </Table>\n            ) : (\n              'N/A'\n            )}\n          </WithLoader>\n        }\n      >\n        <Text component={TextVariants.h6} className=\"pointer pf-u-mb-xs\">\n          {cvssVersion} base score\n          <Icon\n            style={{ color: 'var(--pf-global--secondary-color--100)' }}\n            className=\"pf-u-ml-xs\"\n          >\n            <OutlinedQuestionCircleIcon />\n          </Icon>\n        </Text>\n      </Popover>\n      <WithLoader\n        isLoading={isLoading}\n        variant={LoaderType.inlineSkeleton}\n        width=\"360px\"\n      >\n        <span className=\"pf-u-mr-md\" ouiaId=\"cve-detail-cvss-score\">\n          {score}\n        </span>\n        <span id=\"cvss-vector-content\" ouiaId=\"cve-detail-cvss-score-breakdown\">\n          Vector:\n          {' ' + cvssVector?.substring(cvssVector.indexOf('/') + 1) || 'N/A'}\n        </span>\n      </WithLoader>\n    </TextContent>\n  ) : (\n    <TextContent>\n      <Text component={TextVariants.h6} className=\"pf-u-mb-xs\">\n        CVSS base score\n      </Text>\n      <span ouiaId=\"cve-detail-cvss-score\">Unknown</span>\n    </TextContent>\n  );\n};\n\nCvssVector.propTypes = {\n  cvss2Vector: propTypes.string,\n  cvss3Vector: propTypes.string,\n  score: propTypes.any.isRequired,\n  isLoading: propTypes.bool.isRequired,\n  hasMetadata: propTypes.bool.isRequired,\n};\n\nexport default CvssVector;\n","import React, { useEffect, Fragment } from 'react';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { Shield } from '@redhat-cloud-services/frontend-components/Shield';\nimport CvssVector from '../../PresentationalComponents/CvssVector';\nimport { useParams } from 'react-router-dom';\nimport WithLoader, {\n  LoaderType,\n} from '../../PresentationalComponents/WithLoader';\nimport MissingMetadata from '../../PresentationalComponents/EmptyStates/MissingMetadata';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCveDetails } from '../../../Store/Actions';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport parseCvssScore from '@redhat-cloud-services/frontend-components-utilities/parseCvssScore';\nimport { SEVERITY_OPTIONS } from '../../../Helpers/constants';\n\nconst CveDetailPageHeader = () => {\n  const params = useParams();\n  const dispatch = useDispatch();\n\n  const { cve, isDetailLoading } = useSelector(\n    ({ CveDetailStore }) => CveDetailStore\n  );\n\n  const {\n    description,\n    severity,\n    publish_date,\n    cvss2_score,\n    cvss3_score,\n    cvss2_metrics,\n    cvss3_metrics,\n  } = cve;\n\n  const hasMetadata = description !== 'unknown';\n\n  useEffect(() => {\n    dispatch(fetchCveDetails(params.cveId));\n  }, []);\n\n  return (\n    <PageHeader style={{ paddingBottom: 0 }}>\n      <Breadcrumb className=\"pf-u-mb-md\">\n        <BreadcrumbItem>\n          <Link to=\"../\">Vulnerability</Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to=\"../cves\">CVEs</Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>{params.cveId}</BreadcrumbItem>\n      </Breadcrumb>\n      <PageHeaderTitle\n        title={\n          <Fragment>\n            <span className=\"pf-u-mr-md\">{params.cveId}</span>\n            {/* TODO: Implement after backend starts providing known exploit param\n            hasKnownExploit && <KnownExploitLabel\n              labelProps={{ style: { verticalAlign: 4, fontWeight: 300 } }}\n            />\n            */}\n          </Fragment>\n        }\n        className=\"pf-u-mb-sm\"\n      />\n      <Grid hasGutter>\n        <GridItem md={8} sm={12}>\n          <Stack hasGutter>\n            {hasMetadata && (\n              <StackItem className=\"pf-u-mt-sm\">\n                Publish date:&nbsp;\n                <WithLoader\n                  isLoading={isDetailLoading}\n                  variant={LoaderType.inlineSkeleton}\n                  width=\"100px\"\n                  fontSize=\"sm\"\n                  style={{ verticalAlign: -4 }}\n                >\n                  <span ouiaId=\"cve-detail-publish-date\">\n                    {processDate(publish_date)}\n                  </span>\n                </WithLoader>\n              </StackItem>\n            )}\n            <StackItem>\n              <WithLoader\n                isLoading={isDetailLoading}\n                variant={LoaderType.rectangle}\n                style={{ height: '132px', width: '100%' }}\n              >\n                {hasMetadata ? (\n                  <TextContent\n                    style={{ textAlign: 'justify' }}\n                    ouiaId=\"cve-detail-description\"\n                  >\n                    <Text component={TextVariants.p}>{description}</Text>\n                  </TextContent>\n                ) : (\n                  <MissingMetadata\n                    variant=\"full\"\n                    style={{ maxWidth: 800, padding: 16 }}\n                  />\n                )}\n              </WithLoader>\n            </StackItem>\n            <StackItem className=\"pf-u-mt-sm pf-u-mb-md\">\n              <a\n                href={`https://access.redhat.com/security/cve/${params.cveId}`}\n                target=\"__blank\"\n                rel=\"noopener noreferrer\"\n              >\n                View in Red Hat CVE database <ExternalLinkAltIcon />\n              </a>\n            </StackItem>\n          </Stack>\n        </GridItem>\n\n        <GridItem md={4} sm={12} className=\"pf-u-mt-sm pf-u-ml-sm\">\n          <Stack hasGutter>\n            <StackItem>\n              <TextContent>\n                <Text\n                  component={TextVariants.h6}\n                  className=\"pointer pf-u-mb-xs\"\n                >\n                  Severity\n                </Text>\n              </TextContent>\n              <WithLoader\n                isLoading={isDetailLoading}\n                variant={LoaderType.inlineSkeleton}\n                width=\"100px\"\n                fontSize=\"sm\"\n                style={{ verticalAlign: -4 }}\n              >\n                <b>\n                  <span\n                    style={{\n                      color:\n                        hasMetadata &&\n                        SEVERITY_OPTIONS.find(\n                          (option) => option.label === severity\n                        )?.textColor,\n                    }}\n                    ouiaId=\"cve-detail-severity\"\n                  >\n                    <Shield\n                      impact={hasMetadata ? severity : 'Unknown'}\n                      hasLabel\n                    />\n                  </span>\n                </b>\n              </WithLoader>\n            </StackItem>\n            <StackItem>\n              <CvssVector\n                isLoading={isDetailLoading}\n                score={parseCvssScore(cvss3_score ?? cvss2_score)}\n                cvss2Vector={cvss2_metrics}\n                cvss3Vector={cvss3_metrics}\n                hasMetadata={hasMetadata}\n              />\n            </StackItem>\n          </Stack>\n        </GridItem>\n      </Grid>\n      <Tabs activeKey={0} hasNoBorderBottom>\n        <Tab\n          eventKey={0}\n          title={<TabTitleText>Exposed clusters</TabTitleText>}\n        />\n      </Tabs>\n    </PageHeader>\n  );\n};\n\nexport default CveDetailPageHeader;\n","import React from 'react';\nimport {\n  CLUSTER_PROVIDER_OPTIONS,\n  CLUSTER_STATUS_OPTIONS,\n  CLUSTER_VERSION_OPTIONS,\n  CVE_DETAIL_ALLOWED_PARAMS,\n  CVE_DETAIL_DEFAULT_FILTERS,\n  CVE_DETAIL_EXPORT_PREFIX,\n  CVE_DETAIL_TABLE_COLUMNS,\n  CVE_DETAIL_TABLE_MAPPER,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport NoMatchingClusters from '../../PresentationalComponents/EmptyStates/NoMatchingClusters';\nimport { useParams } from 'react-router-dom';\nimport BaseTable from '../Generic/BaseTable';\nimport { useExport, useUrlBoundParams } from '../../../Helpers/hooks';\nimport {\n  changeCveDetailsTableParams,\n  fetchCveDetailTable,\n} from '../../../Store/Actions';\nimport useTextFilter from '../Filters/TextFilter';\nimport { setupFilters } from '../../../Helpers/miscHelper';\nimport { fetchExposedClusters } from '../../../Helpers/apiHelper';\nimport checkboxFilter from '../Filters/CheckboxFilter';\nimport { uniqBy } from 'lodash';\n\nconst CveDetailTable = () => {\n  const params = useParams();\n\n  const { clusters, isTableLoading, meta, error } = useSelector(\n    ({ CveDetailStore }) => CveDetailStore\n  );\n\n  const apply = useUrlBoundParams({\n    allowedParams: CVE_DETAIL_ALLOWED_PARAMS,\n    initialParams: meta,\n    additionalParam: params.cveId,\n    fetchAction: fetchCveDetailTable,\n    changeParamsAction: changeCveDetailsTableParams,\n  });\n\n  const {\n    search,\n    status,\n    dynamic_status_options,\n    version,\n    dynamic_version_options,\n    provider,\n    dynamic_provider_options,\n  } = meta;\n\n  const onExport = useExport({\n    filenamePrefix: CVE_DETAIL_EXPORT_PREFIX,\n    fetchAction: fetchExposedClusters,\n    fetchActionParam: params.cveId,\n    allowedParams: CVE_DETAIL_ALLOWED_PARAMS,\n  });\n\n  const filters = [\n    useTextFilter({\n      urlParam: 'search',\n      label: 'Name',\n      placeholder: 'Filter by name',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n    checkboxFilter({\n      urlParam: 'status',\n      label: 'Status',\n      value: status,\n      items: uniqBy(\n        CLUSTER_STATUS_OPTIONS.concat(\n          (dynamic_status_options ?? []).map((status) => ({\n            label: status,\n            value: status,\n          }))\n        ),\n        'value'\n      ),\n      placeholder: 'Filter by status',\n      apply,\n      chipLabel: 'Status',\n    }),\n    checkboxFilter({\n      urlParam: 'version',\n      label: 'Version',\n      value: version,\n      items: uniqBy(\n        CLUSTER_VERSION_OPTIONS.concat(\n          (dynamic_version_options ?? []).map((version) => ({\n            label: version,\n            value: version,\n          }))\n        ),\n        'value'\n      ),\n      placeholder: 'Filter by version',\n      apply,\n      chipLabel: 'Version',\n    }),\n    checkboxFilter({\n      urlParam: 'provider',\n      label: 'Provider',\n      value: provider,\n      items: uniqBy(\n        CLUSTER_PROVIDER_OPTIONS.concat(\n          (dynamic_provider_options ?? []).map((provider) => ({\n            label: provider,\n            value: provider,\n          }))\n        ),\n        'value'\n      ),\n      placeholder: 'Filter by provider',\n      apply,\n      chipLabel: 'Provider',\n    }),\n  ];\n\n  const [filterConfig, activeFiltersConfig] = setupFilters(\n    filters,\n    meta,\n    CVE_DETAIL_DEFAULT_FILTERS,\n    apply\n  );\n\n  return (\n    <BaseTable\n      isLoading={isTableLoading}\n      rows={clusters.map((row) => CVE_DETAIL_TABLE_MAPPER(row))}\n      columns={CVE_DETAIL_TABLE_COLUMNS}\n      filterConfig={filterConfig}\n      activeFiltersConfig={activeFiltersConfig}\n      meta={meta}\n      error={error}\n      emptyState={<NoMatchingClusters />}\n      apply={apply}\n      onExport={(format) => onExport(format, meta)}\n    />\n  );\n};\n\nexport default CveDetailTable;\n","import React, { useEffect } from 'react';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport CveDetailPageHeader from './CveDetailPageHeader';\nimport CveDetailTable from './CveDetailTable';\nimport { useSelector } from 'react-redux';\nimport ErrorHandler from '../../PresentationalComponents/ErrorHandler';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst CveDetailPage = () => {\n  const chrome = useChrome();\n\n  const { error, cve } = useSelector(({ CveDetailStore }) => CveDetailStore);\n\n  useEffect(() => {\n    cve.synopsis &&\n      chrome.updateDocumentTitle(\n        `${cve.synopsis} - CVEs - Vulnerability Dashboard | Red Hat Insights | console.redhat.com`\n      );\n  }, [cve.synopsis]);\n\n  return (\n    <ErrorHandler error={error}>\n      <CveDetailPageHeader />\n      <Main>\n        <CveDetailTable />\n      </Main>\n    </ErrorHandler>\n  );\n};\n\nexport default CveDetailPage;\n"],"names":["Bullseye","EmptyState","variant","EmptyStateHeader","titleText","headingLevel","EmptyStateBody","LoaderType","spinner","table","compactTable","rectangle","inlineSkeleton","skeleton","WithLoader","isLoading","children","size","props","centered","compact","shape","lg","style","display","propTypes","Object","keys","V3names","AV","name","values","N","A","L","P","AC","H","PR","UI","R","S","U","C","I","V2names","Au","M","CvssVector","cvss2Vector","cvss3Vector","score","hasMetadata","cvssVersion","cvssVector","parsedVector","vector","namesMapping","split","forEach","curr","key","val","value","parseVector","TextContent","Popover","id","position","maxWidth","enableFlip","headerContent","bodyContent","columns","rows","Table","gridBreakPoint","cells","entries","Text","component","TextVariants","h6","className","Icon","color","width","ouiaId","substring","indexOf","isRequired","params","useParams","dispatch","cve","isDetailLoading","CveDetailStore","description","severity","publish_date","cvss2_score","cvss3_score","cvss2_metrics","cvss3_metrics","useEffect","cveId","PageHeader","paddingBottom","Breadcrumb","BreadcrumbItem","Link","to","PageHeaderTitle","title","Fragment","Grid","hasGutter","GridItem","md","sm","Stack","StackItem","fontSize","verticalAlign","height","textAlign","p","MissingMetadata","padding","href","target","rel","find","option","label","textColor","Shield","impact","hasLabel","parseCvssScore","Tabs","activeKey","hasNoBorderBottom","Tab","eventKey","TabTitleText","clusters","isTableLoading","meta","error","apply","allowedParams","initialParams","additionalParam","fetchAction","changeParamsAction","search","status","dynamic_status_options","version","dynamic_version_options","provider","dynamic_provider_options","onExport","filenamePrefix","fetchActionParam","filters","urlParam","placeholder","chipLabel","items","uniqBy","concat","map","filterConfig","activeFiltersConfig","BaseTable","row","emptyState","NoMatchingClusters","format","chrome","useChrome","synopsis","updateDocumentTitle","ErrorHandler","Main"],"sourceRoot":""}