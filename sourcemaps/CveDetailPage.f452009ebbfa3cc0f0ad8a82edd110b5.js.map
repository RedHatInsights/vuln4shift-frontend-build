{"version":3,"file":"js/CveDetailPage.1658504595828.751777323c3d37b8431c.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/NoClusters.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Spinner/Spinner.js","webpack:///./src/Components/PresentationalComponents/WithLoader.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./src/Helpers/vectorNames.js","webpack:///./src/Components/PresentationalComponents/CvssVector.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/MissingMetadata.js","webpack:///./src/Components/PresentationalComponents/CveDetailPageHeader.js","webpack:///./src/Components/SmartComponents/CveDetail/CveDetailTable.js","webpack:///./src/Components/SmartComponents/CveDetail/CveDetailPage.js","webpack:///./src/Components/SmartComponents/Filters/TextFilter.js","webpack:///./src/Components/SmartComponents/Generic/BaseTable.js","webpack:///./src/Helpers/hooks.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExternalLinkAltIcon = require('../createIcon').createIcon(exports.ExternalLinkAltIconConfig);\nexports[\"default\"] = exports.ExternalLinkAltIcon;","\"use strict\"\nexports.__esModule = true;\nexports.OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.OutlinedQuestionCircleIcon = require('../createIcon').createIcon(exports.OutlinedQuestionCircleIconConfig);\nexports[\"default\"] = exports.OutlinedQuestionCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Button,\n  Bullseye,\n  Title,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\n\nconst NoClusters = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={PlusCircleIcon} size=\"sm\" />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        No clusters yet\n      </Title>\n      <EmptyStateBody>\n        To get started, create or register your cluster to get information from\n        Insights Vulnerability.\n      </EmptyStateBody>\n      <Button\n        variant=\"primary\"\n        component=\"a\"\n        href=\"https://console.redhat.com/openshift/create/\"\n        target=\"_blank\"\n      >\n        Create Cluster\n      </Button>\n      <br />\n      <Button\n        variant=\"link\"\n        component=\"a\"\n        href=\"https://console.redhat.com/openshift/register/\"\n        target=\"_blank\"\n        className=\"pf-u-mt-md\"\n      >\n        Register Cluster\n      </Button>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoClusters;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport classNames from 'classnames';\nimport '../Spinner/spinner.css';\nvar Spinner = function (_a) {\n    var _b;\n    var centered = _a.centered, className = _a.className, props = __rest(_a, [\"centered\", \"className\"]);\n    var spinnerClasses = classNames('ins-c-spinner', (_b = {}, _b[\"ins-m-center\"] = centered, _b), className);\n    return (React.createElement(\"div\", __assign({ role: \"status\", className: spinnerClasses }, props),\n        React.createElement(\"span\", { className: \"pf-u-screen-reader\" }, \"Loading...\")));\n};\nexport default Spinner;\n//# sourceMappingURL=Spinner.js.map","import {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport SkeletonTable from '@redhat-cloud-services/frontend-components/SkeletonTable/SkeletonTable';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Skeleton as PfSkeleton } from '@patternfly/react-core';\n\nexport const LoaderType = {\n  spinner: 'spinner',\n  table: 'table',\n  compactTable: 'compactTable',\n  rectangle: 'rectangle',\n  inlineSkeleton: 'inlineSkeleton',\n  skeleton: 'skeleton',\n};\n\nconst WithLoader = ({ isLoading, variant, children, size, ...props }) => {\n  if (isLoading) {\n    switch (variant) {\n      case LoaderType.spinner:\n        return <Spinner centered {...props} />;\n      case LoaderType.table:\n        return <SkeletonTable {...props} />;\n      case LoaderType.compactTable:\n        return <SkeletonTable variant={TableVariant.compact} {...props} />;\n      case LoaderType.rectangle:\n        return <Skeleton shape=\"square\" {...props} />;\n      case LoaderType.inlineSkeleton:\n        return (\n          <PfSkeleton\n            size={size ?? SkeletonSize.lg}\n            {...props}\n            style={{ display: 'inline-block', ...props.style }}\n          />\n        );\n      default:\n        return <Skeleton size={size ?? SkeletonSize.lg} {...props} />;\n    }\n  }\n\n  return children;\n};\n\nWithLoader.propTypes = {\n  isLoading: propTypes.bool,\n  variant: propTypes.oneOf(Object.keys(LoaderType)),\n  style: propTypes.object,\n  children: propTypes.node,\n  size: propTypes.string,\n};\n\nexport default WithLoader;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export const V3names = {\n  AV: {\n    name: 'Attack vector',\n    values: {\n      N: 'Network',\n      A: 'Adjacent',\n      L: 'Local',\n      P: 'Physical',\n    },\n  },\n  AC: {\n    name: 'Attack complexity',\n    values: {\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  PR: {\n    name: 'Privileges required',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  UI: {\n    name: 'User interaction',\n    values: {\n      N: 'None',\n      R: 'Required',\n    },\n  },\n  S: {\n    name: 'Scope',\n    values: {\n      U: 'Unchanged',\n      C: 'Changed',\n    },\n  },\n  C: {\n    name: 'Confidentiality',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  I: {\n    name: 'Integrity',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  A: {\n    name: 'Availability',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n};\n\nexport const V2names = {\n  AV: {\n    name: 'Access vector',\n    values: {\n      N: 'Network',\n      A: 'Adjacent Network',\n      L: 'Local',\n    },\n  },\n  AC: {\n    name: 'Access complexity',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  Au: {\n    name: 'Authentication',\n    values: {\n      M: 'Multiple',\n      S: 'Single',\n      N: 'None',\n    },\n  },\n  C: {\n    name: 'Confidentiality impact',\n    values: {\n      C: 'Complete',\n      P: 'Partial',\n      N: 'None',\n    },\n  },\n  I: {\n    name: 'Integrity impact',\n    values: {\n      C: 'Complete',\n      P: 'Partial',\n      N: 'None',\n    },\n  },\n  A: {\n    name: 'Availability impact',\n    values: {\n      C: 'Complete',\n      P: 'Partial',\n      N: 'None',\n    },\n  },\n};\n","import {\n  Popover,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n} from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport WithLoader, { LoaderType } from './WithLoader';\nimport { V3names, V2names } from '../../Helpers/vectorNames';\n\nexport const parseVector = (vector, namesMapping) => {\n  let parsedVector = {};\n\n  vector?.split('/').forEach((curr) => {\n    let [key, val] = curr.split(':');\n\n    const name = namesMapping[key]?.name;\n    const value = namesMapping[key]?.values[val] ?? 'N/A';\n\n    if (name) {\n      parsedVector[name] = value;\n    }\n  });\n\n  return parsedVector;\n};\n\nconst CvssVector = ({\n  cvss2Vector,\n  cvss3Vector,\n  score,\n  isLoading,\n  hasMetadata,\n}) => {\n  const cvssVersion = cvss2Vector ? 'CVSS 2.0' : 'CVSS 3.0';\n  const cvssVector = cvss2Vector || cvss3Vector;\n  const namesMapping = cvss2Vector ? V2names : V3names;\n  const parsedVector = parseVector(cvssVector, namesMapping);\n\n  delete parsedVector.cvssVersion;\n\n  return hasMetadata ? (\n    <TextContent>\n      <Popover\n        id=\"popover-cvss\"\n        position=\"bottom\"\n        maxWidth=\"100%\"\n        enableFlip\n        headerContent={`${cvssVersion} vector breakdown`}\n        bodyContent={\n          <WithLoader\n            isLoading={isLoading}\n            colSize={2}\n            rowSize={8}\n            variant={LoaderType.compactTable}\n          >\n            {cvssVector ? (\n              <Table\n                aria-label=\"Metric breakdown\"\n                variant={TableVariant.compact}\n                gridBreakPoint=\"\"\n                cells={['Metric', 'Value']}\n                rows={Object.entries(parsedVector)}\n              >\n                <TableHeader />\n                <TableBody />\n              </Table>\n            ) : (\n              'N/A'\n            )}\n          </WithLoader>\n        }\n      >\n        <Text component={TextVariants.h6} className=\"pointer pf-u-mb-xs\">\n          {cvssVersion} base score\n          <OutlinedQuestionCircleIcon\n            color=\"var(--pf-global--secondary-color--100)\"\n            className=\"pf-u-ml-xs\"\n          />\n        </Text>\n      </Popover>\n      <WithLoader\n        isLoading={isLoading}\n        variant={LoaderType.inlineSkeleton}\n        width=\"360px\"\n      >\n        <span className=\"pf-u-mr-md\">{score}</span>\n        <span id=\"cvss-vector-content\">\n          Vector:\n          {cvssVector?.substring(cvssVector.indexOf('/') + 1) || 'N/A'}\n        </span>\n      </WithLoader>\n    </TextContent>\n  ) : (\n    <TextContent>\n      <Text component={TextVariants.h6} className=\"pf-u-mb-xs\">\n        CVSS base score\n      </Text>\n      Unknown\n    </TextContent>\n  );\n};\n\nCvssVector.propTypes = {\n  cvss2Vector: propTypes.string,\n  cvss3Vector: propTypes.string,\n  score: propTypes.any.isRequired,\n  isLoading: propTypes.bool.isRequired,\n  hasMetadata: propTypes.bool.isRequired,\n};\n\nexport default CvssVector;\n","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  Bullseye,\n  EmptyStateVariant,\n  Text,\n} from '@patternfly/react-core';\n\nconst MissingMetadata = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.large} style={{ padding: 0 }}>\n      <Text>\n        <strong>No description available</strong>\n      </Text>\n      <EmptyStateBody>\n        This CVE has been published, however metadata about this CVE is not yet\n        available on Red Hat Insights. Metadata is usually available on Insights\n        within 24 hours of a CVE being published.\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default MissingMetadata;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Checkbox,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { Shield } from '@redhat-cloud-services/frontend-components/Shield';\nimport CvssVector from '../PresentationalComponents/CvssVector';\nimport { useRouteMatch } from 'react-router-dom';\nimport WithLoader, { LoaderType } from './WithLoader';\nimport MissingMetadata from '../PresentationalComponents/EmptyStates/MissingMetadata';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCveDetails } from '../../Store/Actions';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport parseCvssScore from '@redhat-cloud-services/frontend-components-utilities/parseCvssScore';\n\nconst CveDetailPageHeader = () => {\n  const match = useRouteMatch();\n  const dispatch = useDispatch();\n\n  const { cve, isDetailLoading } = useSelector(\n    ({ CveDetailStore }) => CveDetailStore\n  );\n\n  const {\n    description,\n    severity,\n    publish_date,\n    cvss2_score,\n    cvss3_score,\n    cvss2_metrics,\n    cvss3_metrics,\n  } = cve;\n\n  const [hasMetadata, setHasMetadata] = useState(true);\n\n  useEffect(() => {\n    dispatch(fetchCveDetails(match.params.cveId));\n  }, []);\n\n  return (\n    <PageHeader>\n      <Breadcrumb className=\"pf-u-mb-md\">\n        <BreadcrumbItem>\n          <Link to=\"/\">Vulnerability</Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to=\"/cves\">CVEs</Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>{match.params.cveId}</BreadcrumbItem>\n      </Breadcrumb>\n      <PageHeaderTitle\n        title={\n          <Fragment>\n            <span className=\"pf-u-mr-md\">{match.params.cveId}</span>\n            {/* TODO: Implement after backend starts providing known exploit param\n            hasKnownExploit && <KnownExploitLabel\n              labelProps={{ style: { verticalAlign: 4, fontWeight: 300 } }}\n            />\n            */}\n          </Fragment>\n        }\n        className=\"pf-u-mb-sm\"\n      />\n      <Grid hasGutter>\n        <GridItem md={8} sm={12}>\n          <Stack hasGutter>\n            {hasMetadata && (\n              <StackItem className=\"pf-u-mt-sm\">\n                Publish date:&nbsp;\n                <WithLoader\n                  isLoading={isDetailLoading}\n                  variant={LoaderType.inlineSkeleton}\n                  width=\"100px\"\n                  fontSize=\"sm\"\n                  style={{ verticalAlign: -4 }}\n                >\n                  {processDate(publish_date)}\n                </WithLoader>\n              </StackItem>\n            )}\n            <StackItem>\n              <WithLoader\n                isLoading={isDetailLoading}\n                variant={LoaderType.rectangle}\n                style={{ height: '132px', width: '100%' }}\n              >\n                {hasMetadata ? (\n                  <TextContent style={{ textAlign: 'justify' }}>\n                    <Text component={TextVariants.p}>{description}</Text>\n                  </TextContent>\n                ) : (\n                  <MissingMetadata />\n                )}\n              </WithLoader>\n            </StackItem>\n            <StackItem className=\"pf-u-mt-sm pf-u-mb-md\">\n              <a\n                href={`https://access.redhat.com/security/cve/${match.params.cveId}`}\n                target=\"__blank\"\n                rel=\"noopener noreferrer\"\n              >\n                View in Red Hat CVE database <ExternalLinkAltIcon />\n              </a>\n            </StackItem>\n          </Stack>\n        </GridItem>\n\n        <GridItem md={4} sm={12} className=\"pf-u-mt-sm pf-u-ml-sm\">\n          <Stack hasGutter>\n            <StackItem>\n              <TextContent>\n                <Text\n                  component={TextVariants.h6}\n                  className=\"pointer pf-u-mb-xs\"\n                >\n                  Severity\n                </Text>\n              </TextContent>\n              <WithLoader\n                isLoading={isDetailLoading}\n                variant={LoaderType.inlineSkeleton}\n                width=\"100px\"\n                fontSize=\"sm\"\n                style={{ verticalAlign: -4 }}\n              >\n                <b>\n                  <Shield\n                    impact={hasMetadata ? severity : 'Unknown'}\n                    hasLabel\n                  />\n                </b>\n              </WithLoader>\n            </StackItem>\n            <StackItem>\n              <CvssVector\n                isLoading={isDetailLoading}\n                score={parseCvssScore(cvss3_score ?? cvss2_score)}\n                cvss2Vector={cvss2_metrics}\n                cvss3Vector={cvss3_metrics}\n                hasMetadata={hasMetadata}\n              />\n            </StackItem>\n            <StackItem>\n              {/* Remove following component after no metadata state is handled */}\n              <Checkbox\n                isChecked={hasMetadata}\n                onChange={(checked) => setHasMetadata(checked)}\n                label=\"Has metadata\"\n              />\n            </StackItem>\n          </Stack>\n        </GridItem>\n      </Grid>\n    </PageHeader>\n  );\n};\n\nexport default CveDetailPageHeader;\n","import React from 'react';\nimport {\n  CVE_DETAIL_ALLOWED_PARAMS,\n  CVE_DETAIL_TABLE_COLUMNS,\n  CVE_DETAIL_TABLE_MAPPER,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport NoClusters from '../../PresentationalComponents/EmptyStates/NoClusters';\nimport { useRouteMatch } from 'react-router-dom';\nimport BaseTable from '../Generic/BaseTable';\nimport { useUrlBoundParams } from '../../../Helpers/hooks';\nimport {\n  changeCveDetailsTableParams,\n  fetchCveDetailTable,\n} from '../../../Store/Actions';\nimport useTextFilter from '../Filters/TextFilter';\n\nconst CveDetailTable = () => {\n  const match = useRouteMatch();\n\n  const { clusters, isTableLoading, meta } = useSelector(\n    ({ CveDetailStore }) => CveDetailStore\n  );\n\n  const apply = useUrlBoundParams({\n    allowedParams: CVE_DETAIL_ALLOWED_PARAMS,\n    defaultParams: meta,\n    additionalParam: match.params.cveId,\n    fetchAction: fetchCveDetailTable,\n    changeParamsAction: changeCveDetailsTableParams,\n  });\n\n  const { search } = meta;\n\n  const filters = [\n    useTextFilter({\n      urlParam: 'search',\n      label: 'Name',\n      placeholder: 'Filter by name',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n  ];\n\n  return (\n    <BaseTable\n      isLoading={isTableLoading}\n      rows={clusters.map((row) => CVE_DETAIL_TABLE_MAPPER(row))}\n      columns={CVE_DETAIL_TABLE_COLUMNS}\n      filters={filters}\n      meta={meta}\n      emptyState={<NoClusters />}\n      apply={apply}\n    />\n  );\n};\n\nexport default CveDetailTable;\n","import React, { Fragment } from 'react';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport CveDetailPageHeader from '../../PresentationalComponents/CveDetailPageHeader';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport CveDetailTable from './CveDetailTable';\n\nconst CveDetailPage = () => {\n  return (\n    <Fragment>\n      <CveDetailPageHeader />\n      <Main>\n        <TextContent>\n          <Text component={TextVariants.h2} className=\"pf-u-mb-md\">\n            Exposed clusters\n          </Text>\n        </TextContent>\n        <CveDetailTable />\n      </Main>\n    </Fragment>\n  );\n};\n\nexport default CveDetailPage;\n","import { useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst useTextFilter = ({\n  urlParam,\n  label,\n  placeholder,\n  value,\n  apply,\n  chipLabel,\n}) => {\n  const [searchValue, setSearchValue] = useState();\n  const [handleSearch] = useState(() =>\n    debounce((newValue) => {\n      if (newValue !== undefined) {\n        apply({ [urlParam]: newValue, offset: 0 });\n      }\n    }, 400)\n  );\n\n  useEffect(() => setSearchValue(value), [value]);\n\n  const filterConfig = {\n    type: conditionalFilterType.text,\n    label: label,\n    key: urlParam,\n    filterValues: {\n      'aria-label': 'search-field',\n      id: `search-${label.id}`,\n      onChange: (event, value) => {\n        setSearchValue(value);\n        handleSearch(value);\n      },\n      placeholder,\n      value: searchValue,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: () => apply({ [urlParam]: undefined, offset: 0 }),\n    key: urlParam,\n    category: chipLabel,\n    chips: [\n      {\n        name: value,\n      },\n    ],\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default useTextFilter;\n","import React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport BaseTableBody from '../Generic/BaseTableBody';\nimport BaseToolbar from '../Generic/BaseToolbar';\nimport BottomPagination from '../../PresentationalComponents/BottomPagination';\nimport { setupFilters } from '../../../Helpers/miscHelper';\n\nconst BaseTable = ({\n  isLoading,\n  isExpandable,\n  rows,\n  columns,\n  filters = [],\n  meta,\n  emptyState,\n  apply,\n}) => {\n  const { offset, limit, total_items, sort } = meta;\n\n  const [filterConfig, activeFiltersConfig] = setupFilters(filters);\n\n  return (\n    <Fragment>\n      <BaseToolbar\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n        filterConfig={filterConfig}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      <BaseTableBody\n        isLoading={isLoading}\n        columns={columns}\n        rows={rows}\n        isExpandable={isExpandable}\n        emptyState={emptyState}\n        sortParam={sort}\n        apply={apply}\n      />\n      <BottomPagination\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n      />\n    </Fragment>\n  );\n};\n\nBaseTable.propTypes = {\n  isLoading: propTypes.bool.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node.isRequired,\n      sortParam: propTypes.string,\n    })\n  ).isRequired,\n  rows: propTypes.arrayOf(\n    propTypes.shape({\n      key: propTypes.string.isRequired,\n      cells: propTypes.arrayOf(propTypes.node).isRequired,\n      expandableContent: propTypes.node,\n    })\n  ).isRequired,\n  isExpandable: propTypes.bool,\n  emptyState: propTypes.node.isRequired,\n  sortParam: propTypes.string,\n  filters: propTypes.array,\n  meta: propTypes.shape({\n    offset: propTypes.number,\n    limit: propTypes.number,\n    total_items: propTypes.number,\n    sort: propTypes.string,\n  }),\n  apply: propTypes.func,\n};\n\nexport default BaseTable;\n","import { useState, useEffect } from 'react';\nimport qs from 'query-string';\nimport { useDispatch } from 'react-redux';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { PUBLISHED_OPTIONS } from './constants';\n\nexport const useLocalStorage = (key) => {\n  const [sessionValue, setSessionValue] = useState(localStorage.getItem(key));\n\n  const setValue = (newValue) => {\n    setSessionValue(newValue);\n    localStorage.setItem(key, newValue);\n  };\n\n  return [sessionValue, setValue];\n};\n\nexport function filterUrlParams(urlParams, allowedParams) {\n  Object.entries(urlParams)\n    .filter(([key, value]) => !allowedParams.includes(key) || value === '')\n    .forEach(([key]) => delete urlParams[key]);\n\n  return urlParams;\n}\n\nexport const useUrlParams = (allowedParams) => {\n  const url = new URL(window.location);\n  const urlParams = filterUrlParams(qs.parse(url.search), allowedParams);\n\n  const setUrlParams = (parameters) => {\n    const searchParams = qs.stringify(\n      filterUrlParams(parameters, allowedParams)\n    );\n\n    window.history.replaceState(\n      null,\n      null,\n      `${url.origin}${url.pathname}?${searchParams}`\n    );\n  };\n\n  return [urlParams, setUrlParams];\n};\n\nconst transformPublishedParam = (urlParams) => {\n  const formatDate = (timestamp) => {\n    const pad = (number) => `${`${number}`.length === 1 ? '0' : ''}${number}`;\n\n    const date = new Date(timestamp);\n\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1; // month is zero indexed\n    const day = date.getDate();\n\n    return `${year}-${pad(month)}-${pad(day)}`;\n  };\n\n  if (urlParams.published) {\n    const option = PUBLISHED_OPTIONS.find(\n      (option) => option.value === urlParams.published\n    );\n\n    urlParams.published = `${option.from ? formatDate(option.from) : ''},${\n      option.to ? formatDate(option.to) : ''\n    }`;\n  }\n\n  return urlParams;\n};\n\n// when creating additional transformer in the future\n// create a new function for it and then add the function to this array\nconst urlTransformers = [transformPublishedParam];\n\nconst transformUrlParamsBeforeFetching = (urlParams) => {\n  let newParams = { ...urlParams };\n\n  urlTransformers.forEach((transformer) => {\n    newParams = transformer(newParams);\n  });\n\n  return newParams;\n};\n\nexport const useUrlBoundParams = ({\n  allowedParams,\n  defaultParams,\n  additionalParam,\n  fetchAction,\n  changeParamsAction,\n}) => {\n  const dispatch = useDispatch();\n\n  const [urlParams] = useUrlParams(allowedParams);\n\n  useEffect(() => {\n    apply({ ...defaultParams, ...urlParams });\n  }, []);\n\n  useDeepCompareEffect(() => {\n    dispatch(\n      fetchAction(transformUrlParamsBeforeFetching(urlParams), additionalParam)\n    );\n  }, [urlParams]);\n\n  const apply = (newParams) => {\n    const [urlParams, setUrlParams] = useUrlParams(allowedParams);\n\n    setUrlParams({ ...urlParams, ...newParams });\n    dispatch(changeParamsAction({ ...urlParams, ...newParams }));\n  };\n\n  return apply;\n};\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","Bullseye","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","PlusCircleIcon","size","Title","headingLevel","EmptyStateBody","Button","component","href","target","className","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_a","_b","centered","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","spinnerClasses","role","LoaderType","spinner","table","compactTable","rectangle","inlineSkeleton","skeleton","WithLoader","isLoading","children","source","excluded","key","objectWithoutPropertiesLoose","sourceSymbolKeys","TableVariant","Skeleton","shape","SkeletonSize","style","display","propTypes","keys","V3names","AV","values","N","A","L","P","AC","H","PR","UI","R","S","U","C","I","V2names","Au","M","CvssVector","cvss2Vector","cvss3Vector","score","hasMetadata","cvssVersion","cvssVector","parsedVector","vector","namesMapping","split","forEach","curr","val","value","parseVector","TextContent","Popover","id","position","maxWidth","enableFlip","headerContent","bodyContent","colSize","rowSize","Table","gridBreakPoint","cells","rows","entries","TableHeader","TableBody","Text","TextVariants","color","substring","padding","match","useRouteMatch","dispatch","useDispatch","useSelector","CveDetailStore","cve","isDetailLoading","description","severity","publish_date","cvss2_score","cvss3_score","cvss2_metrics","cvss3_metrics","useState","setHasMetadata","useEffect","fetchCveDetails","params","cveId","PageHeader","Breadcrumb","BreadcrumbItem","Link","to","PageHeaderTitle","title","Fragment","Grid","hasGutter","GridItem","md","sm","Stack","StackItem","fontSize","verticalAlign","processDate","textAlign","rel","Shield","impact","hasLabel","parseCvssScore","Checkbox","isChecked","onChange","checked","label","clusters","isTableLoading","meta","useUrlBoundParams","allowedParams","CVE_DETAIL_ALLOWED_PARAMS","defaultParams","additionalParam","fetchAction","fetchCveDetailTable","changeParamsAction","changeCveDetailsTableParams","search","filters","useTextFilter","urlParam","placeholder","chipLabel","BaseTable","map","row","CVE_DETAIL_TABLE_MAPPER","columns","CVE_DETAIL_TABLE_COLUMNS","emptyState","NoClusters","Main","searchValue","setSearchValue","debounce","newValue","undefined","handleSearch","filterConfig","type","conditionalFilterType","filterValues","event","activeFiltersConfig","isShown","onDelete","category","chips","isExpandable","offset","limit","total_items","sort","setupFilters","page","perPage","itemCount","sortParam","isRequired","expandableContent","useLocalStorage","localStorage","getItem","sessionValue","setSessionValue","setItem","filterUrlParams","urlParams","filter","includes","useUrlParams","url","URL","window","location","qs","parameters","searchParams","history","replaceState","origin","pathname","urlTransformers","formatDate","timestamp","pad","number","date","Date","year","getFullYear","month","getMonth","day","getDate","published","option","PUBLISHED_OPTIONS","from","useDeepCompareEffect","newParams","transformer","transformUrlParamsBeforeFetching","setUrlParams"],"sourceRoot":""}