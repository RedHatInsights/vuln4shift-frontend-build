{"version":3,"file":"js/CveDetailPage.1656000466775.3600d2c8ad57bbe5988a.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/NoClusters.js","webpack:///./src/Helpers/vectorNames.js","webpack:///./src/Components/PresentationalComponents/CvssVector.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/MissingMetadata.js","webpack:///./src/Components/PresentationalComponents/CveDetailPageHeader.js","webpack:///./src/Components/SmartComponents/CveDetail/CveDetailTable.js","webpack:///./src/Components/SmartComponents/CveDetail/CveDetailPage.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExternalLinkAltIcon = require('../createIcon').createIcon(exports.ExternalLinkAltIconConfig);\nexports[\"default\"] = exports.ExternalLinkAltIcon;","\"use strict\"\nexports.__esModule = true;\nexports.OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.OutlinedQuestionCircleIcon = require('../createIcon').createIcon(exports.OutlinedQuestionCircleIconConfig);\nexports[\"default\"] = exports.OutlinedQuestionCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Button,\n  Bullseye,\n  Title,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\n\nconst NoClusters = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={PlusCircleIcon} size=\"sm\" />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        No clusters yet\n      </Title>\n      <EmptyStateBody>\n        To get started, create or register your cluster to get information from\n        Insights Vulnerability.\n      </EmptyStateBody>\n      <Button\n        variant=\"primary\"\n        component=\"a\"\n        href=\"https://console.redhat.com/openshift/create/\"\n        target=\"_blank\"\n      >\n        Create Cluster\n      </Button>\n      <br />\n      <Button\n        variant=\"link\"\n        component=\"a\"\n        href=\"https://console.redhat.com/openshift/register/\"\n        target=\"_blank\"\n        className=\"pf-u-mt-md\"\n      >\n        Register Cluster\n      </Button>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoClusters;\n","export const V3names = {\n  AV: {\n    name: 'Attack vector',\n    values: {\n      N: 'Network',\n      A: 'Adjacent',\n      L: 'Local',\n      P: 'Physical',\n    },\n  },\n  AC: {\n    name: 'Attack complexity',\n    values: {\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  PR: {\n    name: 'Privileges required',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  UI: {\n    name: 'User interaction',\n    values: {\n      N: 'None',\n      R: 'Required',\n    },\n  },\n  S: {\n    name: 'Scope',\n    values: {\n      U: 'Unchanged',\n      C: 'Changed',\n    },\n  },\n  C: {\n    name: 'Confidentiality',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  I: {\n    name: 'Integrity',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  A: {\n    name: 'Availability',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n};\n\nexport const V2names = {\n  AV: {\n    name: 'Access vector',\n    values: {\n      N: 'Network',\n      A: 'Adjacent Network',\n      L: 'Local',\n    },\n  },\n  AC: {\n    name: 'Access complexity',\n    values: {\n      N: 'None',\n      L: 'Low',\n      H: 'High',\n    },\n  },\n  Au: {\n    name: 'Authentication',\n    values: {\n      M: 'Multiple',\n      S: 'Single',\n      N: 'None',\n    },\n  },\n  C: {\n    name: 'Confidentiality impact',\n    values: {\n      C: 'Complete',\n      P: 'Partial',\n      N: 'None',\n    },\n  },\n  I: {\n    name: 'Integrity impact',\n    values: {\n      C: 'Complete',\n      P: 'Partial',\n      N: 'None',\n    },\n  },\n  A: {\n    name: 'Availability impact',\n    values: {\n      C: 'Complete',\n      P: 'Partial',\n      N: 'None',\n    },\n  },\n};\n","import {\n  Popover,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n} from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport WithLoader, { LoaderType } from './WithLoader';\nimport { V3names, V2names } from '../../Helpers/vectorNames';\n\nexport const parseVector = (vector, namesMapping) => {\n  let parsedVector = {};\n\n  vector?.split('/').forEach((curr) => {\n    let [key, val] = curr.split(':');\n\n    const name = namesMapping[key]?.name;\n    const value = namesMapping[key]?.values[val] ?? 'N/A';\n\n    if (name) {\n      parsedVector[name] = value;\n    }\n  });\n\n  return parsedVector;\n};\n\nconst CvssVector = ({\n  cvss2Vector,\n  cvss3Vector,\n  score,\n  isLoading,\n  hasMetadata,\n}) => {\n  const cvssVersion = cvss2Vector ? 'CVSS 2.0' : 'CVSS 3.0';\n  const cvssVector = cvss2Vector || cvss3Vector;\n  const namesMapping = cvss2Vector ? V2names : V3names;\n  const parsedVector = parseVector(cvssVector, namesMapping);\n\n  delete parsedVector.cvssVersion;\n\n  return hasMetadata ? (\n    <TextContent>\n      <Popover\n        id=\"popover-cvss\"\n        position=\"bottom\"\n        maxWidth=\"100%\"\n        enableFlip\n        headerContent={`${cvssVersion} vector breakdown`}\n        bodyContent={\n          <WithLoader\n            isLoading={isLoading}\n            colSize={2}\n            rowSize={8}\n            variant={LoaderType.compactTable}\n          >\n            {cvssVector ? (\n              <Table\n                aria-label=\"Metric breakdown\"\n                variant={TableVariant.compact}\n                gridBreakPoint=\"\"\n                cells={['Metric', 'Value']}\n                rows={Object.entries(parsedVector)}\n              >\n                <TableHeader />\n                <TableBody />\n              </Table>\n            ) : (\n              'N/A'\n            )}\n          </WithLoader>\n        }\n      >\n        <Text component={TextVariants.h6} className=\"pointer pf-u-mb-xs\">\n          {cvssVersion} base score\n          <OutlinedQuestionCircleIcon\n            color=\"var(--pf-global--secondary-color--100)\"\n            className=\"pf-u-ml-xs\"\n          />\n        </Text>\n      </Popover>\n      <WithLoader\n        isLoading={isLoading}\n        variant={LoaderType.inlineSkeleton}\n        width=\"360px\"\n      >\n        <span className=\"pf-u-mr-md\">{score}</span>\n        <span id=\"cvss-vector-content\">\n          Vector:\n          {cvssVector?.substring(cvssVector.indexOf('/') + 1) || 'N/A'}\n        </span>\n      </WithLoader>\n    </TextContent>\n  ) : (\n    <TextContent>\n      <Text component={TextVariants.h6} className=\"pf-u-mb-xs\">\n        CVSS base score\n      </Text>\n      Unknown\n    </TextContent>\n  );\n};\n\nCvssVector.propTypes = {\n  cvss2Vector: propTypes.string,\n  cvss3Vector: propTypes.string,\n  score: propTypes.any.isRequired,\n  isLoading: propTypes.bool.isRequired,\n  hasMetadata: propTypes.bool.isRequired,\n};\n\nexport default CvssVector;\n","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  Bullseye,\n  EmptyStateVariant,\n  Text,\n} from '@patternfly/react-core';\n\nconst MissingMetadata = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.large} style={{ padding: 0 }}>\n      <Text>\n        <strong>No description available</strong>\n      </Text>\n      <EmptyStateBody>\n        This CVE has been published, however metadata about this CVE is not yet\n        available on Red Hat Insights. Metadata is usually available on Insights\n        within 24 hours of a CVE being published.\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default MissingMetadata;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Checkbox,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { Shield } from '@redhat-cloud-services/frontend-components/Shield';\nimport CvssVector from '../PresentationalComponents/CvssVector';\nimport { useRouteMatch } from 'react-router-dom';\nimport WithLoader, { LoaderType } from './WithLoader';\nimport MissingMetadata from '../PresentationalComponents/EmptyStates/MissingMetadata';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCveDetails } from '../../Store/Actions';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport parseCvssScore from '@redhat-cloud-services/frontend-components-utilities/parseCvssScore';\n\nconst CveDetailPageHeader = () => {\n  const match = useRouteMatch();\n\n  const dispatch = useDispatch();\n  const {\n    description,\n    severity,\n    publish_date,\n    cvss2_score,\n    cvss3_score,\n    cvss2_metrics,\n    cvss3_metrics,\n    isDetailLoading,\n  } = useSelector(({ CveDetailStore }) => CveDetailStore.cve);\n\n  const [hasMetadata, setHasMetadata] = useState(true);\n  useEffect(() => {\n    dispatch(fetchCveDetails(match.params.cveId));\n  }, []);\n\n  return (\n    <PageHeader>\n      <Breadcrumb className=\"pf-u-mb-md\">\n        <BreadcrumbItem>\n          <Link to=\"/\">Vulnerability</Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to=\"/cves\">CVEs</Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>{match.params.cveId}</BreadcrumbItem>\n      </Breadcrumb>\n      <PageHeaderTitle\n        title={\n          <Fragment>\n            <span className=\"pf-u-mr-md\">{match.params.cveId}</span>\n            {/* TODO: Implement after backend starts providing known exploit param\n            hasKnownExploit && <KnownExploitLabel\n              labelProps={{ style: { verticalAlign: 4, fontWeight: 300 } }}\n            />\n            */}\n          </Fragment>\n        }\n        className=\"pf-u-mb-sm\"\n      />\n      <Grid hasGutter>\n        <GridItem md={8} sm={12}>\n          <Stack hasGutter>\n            {hasMetadata && (\n              <StackItem className=\"pf-u-mt-sm\">\n                Publish date:&nbsp;\n                <WithLoader\n                  isLoading={isDetailLoading}\n                  variant={LoaderType.inlineSkeleton}\n                  width=\"100px\"\n                  fontSize=\"sm\"\n                  style={{ verticalAlign: -4 }}\n                >\n                  {processDate(publish_date)}\n                </WithLoader>\n              </StackItem>\n            )}\n            <StackItem>\n              <WithLoader\n                isLoading={isDetailLoading}\n                variant={LoaderType.rectangle}\n                style={{ height: '132px', width: '100%' }}\n              >\n                {hasMetadata ? (\n                  <TextContent style={{ textAlign: 'justify' }}>\n                    <Text component={TextVariants.p}>{description}</Text>\n                  </TextContent>\n                ) : (\n                  <MissingMetadata />\n                )}\n              </WithLoader>\n            </StackItem>\n            <StackItem className=\"pf-u-mt-sm pf-u-mb-md\">\n              <a\n                href={`https://access.redhat.com/security/cve/${match.params.cveId}`}\n                target=\"__blank\"\n                rel=\"noopener noreferrer\"\n              >\n                View in Red Hat CVE database <ExternalLinkAltIcon />\n              </a>\n            </StackItem>\n          </Stack>\n        </GridItem>\n\n        <GridItem md={4} sm={12} className=\"pf-u-mt-sm pf-u-ml-sm\">\n          <Stack hasGutter>\n            <StackItem>\n              <TextContent>\n                <Text\n                  component={TextVariants.h6}\n                  className=\"pointer pf-u-mb-xs\"\n                >\n                  Severity\n                </Text>\n              </TextContent>\n              <WithLoader\n                isLoading={isDetailLoading}\n                variant={LoaderType.inlineSkeleton}\n                width=\"100px\"\n                fontSize=\"sm\"\n                style={{ verticalAlign: -4 }}\n              >\n                <b>\n                  <Shield\n                    impact={hasMetadata ? severity : 'Unknown'}\n                    hasLabel\n                  />\n                </b>\n              </WithLoader>\n            </StackItem>\n            <StackItem>\n              <CvssVector\n                isLoading={isDetailLoading}\n                score={parseCvssScore(cvss3_score ?? cvss2_score)}\n                cvss2Vector={cvss2_metrics}\n                cvss3Vector={cvss3_metrics}\n                hasMetadata={hasMetadata}\n              />\n            </StackItem>\n            <StackItem>\n              {/* Remove following component after no metadata state is handled */}\n              <Checkbox\n                isChecked={hasMetadata}\n                onChange={(checked) => setHasMetadata(checked)}\n                label=\"Has metadata\"\n              />\n            </StackItem>\n          </Stack>\n        </GridItem>\n      </Grid>\n    </PageHeader>\n  );\n};\n\nexport default CveDetailPageHeader;\n","import React, { Fragment, useEffect } from 'react';\nimport BaseTable from '../BaseTable';\nimport {\n  CVE_DETAIL_TABLE_COLUMNS,\n  CVE_DETAIL_TABLE_MAPPER,\n} from '../../../Helpers/constants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCveDetailTable } from '../../../Store/Actions';\nimport BaseToolbar from '../BaseToolbar';\nimport BottomPagination from '../../PresentationalComponents/BottomPagination';\nimport NoClusters from '../../PresentationalComponents/EmptyStates/NoClusters';\nimport { useRouteMatch } from 'react-router-dom';\n\nconst CveDetailTable = () => {\n  const match = useRouteMatch();\n  const dispatch = useDispatch();\n\n  const { clusters, total_items, isTableLoading } = useSelector(\n    ({ CveDetailStore }) => CveDetailStore\n  );\n\n  useEffect(() => {\n    dispatch(fetchCveDetailTable(match.params.cveId));\n  }, []);\n\n  return (\n    <Fragment>\n      <BaseToolbar page={1} perPage={20} itemCount={total_items} />\n      <BaseTable\n        isLoading={isTableLoading}\n        columns={CVE_DETAIL_TABLE_COLUMNS}\n        rows={clusters.map((row) => CVE_DETAIL_TABLE_MAPPER(row))}\n        emptyState={<NoClusters />}\n      />\n      <BottomPagination page={1} perPage={20} itemCount={total_items} />\n    </Fragment>\n  );\n};\n\nexport default CveDetailTable;\n","import React, { Fragment } from 'react';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport CveDetailPageHeader from '../../PresentationalComponents/CveDetailPageHeader';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport CveDetailTable from './CveDetailTable';\n\nconst CveDetailPage = () => {\n  return (\n    <Fragment>\n      <CveDetailPageHeader />\n      <Main>\n        <TextContent>\n          <Text component={TextVariants.h2} className=\"pf-u-mb-md\">\n            Exposed clusters\n          </Text>\n        </TextContent>\n        <CveDetailTable />\n      </Main>\n    </Fragment>\n  );\n};\n\nexport default CveDetailPage;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","Bullseye","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","PlusCircleIcon","size","Title","headingLevel","EmptyStateBody","Button","component","href","target","className","V3names","AV","values","N","A","L","P","AC","H","PR","UI","R","S","U","C","I","V2names","Au","M","CvssVector","cvss2Vector","cvss3Vector","score","isLoading","hasMetadata","cvssVersion","cvssVector","parsedVector","vector","namesMapping","split","forEach","curr","key","val","value","parseVector","TextContent","Popover","id","position","maxWidth","enableFlip","headerContent","bodyContent","WithLoader","colSize","rowSize","LoaderType","Table","TableVariant","gridBreakPoint","cells","rows","Object","entries","TableHeader","TableBody","Text","TextVariants","color","substring","indexOf","propTypes","style","padding","match","useRouteMatch","dispatch","useDispatch","useSelector","CveDetailStore","cve","description","severity","publish_date","cvss2_score","cvss3_score","cvss2_metrics","cvss3_metrics","isDetailLoading","useState","setHasMetadata","useEffect","fetchCveDetails","params","cveId","PageHeader","Breadcrumb","BreadcrumbItem","Link","to","PageHeaderTitle","title","Fragment","Grid","hasGutter","GridItem","md","sm","Stack","StackItem","fontSize","verticalAlign","processDate","textAlign","rel","Shield","impact","hasLabel","parseCvssScore","Checkbox","isChecked","onChange","checked","label","clusters","total_items","isTableLoading","fetchCveDetailTable","BaseToolbar","page","perPage","itemCount","BaseTable","columns","CVE_DETAIL_TABLE_COLUMNS","map","row","CVE_DETAIL_TABLE_MAPPER","emptyState","NoClusters","BottomPagination","Main"],"sourceRoot":""}