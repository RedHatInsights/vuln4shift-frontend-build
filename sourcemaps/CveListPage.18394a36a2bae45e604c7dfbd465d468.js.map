{"version":3,"file":"js/CveListPage.71335c0b2b9cc4bae10a.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/external-link-alt-icon.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/NoMatchingCves.js","webpack:///./src/Components/SmartComponents/CveList/CveListTable.js","webpack:///./src/Components/SmartComponents/CveList/CveListPage.js","webpack:///./src/Components/SmartComponents/Filters/RadioFilter.js","webpack:///./src/Components/PresentationalComponents/RangeFilterComponent.js","webpack:///./node_modules/dequal/dist/index.mjs","webpack:///./src/Components/SmartComponents/Filters/RangeFilter.js","webpack:///./node_modules/use-deep-compare-effect/dist/use-deep-compare-effect.esm.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExternalLinkAltIcon = require('../createIcon').createIcon(exports.ExternalLinkAltIconConfig);\nexports[\"default\"] = exports.ExternalLinkAltIcon;","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  Bullseye,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst NoMatchingCves = () => {\n  const CveDatabaseLink = (\n    <a\n      href=\"https://access.redhat.com/security/security-updates/#/cve\"\n      target=\"__blank\"\n      rel=\"noopener noreferrer\"\n      className=\"nowrap\"\n    >\n      Red Hat CVE Database <ExternalLinkAltIcon />\n    </a>\n  );\n\n  const ProdSecLink = (\n    <a\n      href=\"https://access.redhat.com/security/team/contact/\"\n      target=\"__blank\"\n      rel=\"noopener noreferrer\"\n      className=\"nowrap\"\n    >\n      Red Hat Product Security <ExternalLinkAltIcon />\n    </a>\n  );\n\n  return (\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.large}>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No matching CVEs found\n        </Title>\n        <EmptyStateBody>\n          To continue, edit your filter settings and search again.\n          <br />\n          <br />\n          As of today, Insights Vulnerability shows CVEs with Errata. It is\n          possible the CVE you are searching for does not yet have an associated\n          Errata. Please check the {CveDatabaseLink} or if you would like more\n          information, contact {ProdSecLink}\n        </EmptyStateBody>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nexport default NoMatchingCves;\n","import React from 'react';\nimport {\n  CVE_LIST_ALLOWED_PARAMS,\n  CVE_LIST_DEFAULT_FILTERS,\n  CVE_LIST_TABLE_COLUMNS,\n  CVE_LIST_TABLE_MAPPER,\n  EXPOSED_CLUSTERS_OPTIONS,\n  PUBLISHED_OPTIONS,\n  SEVERITY_OPTIONS,\n  CVE_LIST_EXPORT_PREFIX,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport {\n  fetchCveListTable,\n  changeCveListTableParams,\n} from '../../../Store/Actions';\nimport NoMatchingCves from '../../PresentationalComponents/EmptyStates/NoMatchingCves';\nimport { useUrlBoundParams, useExport } from '../../../Helpers/hooks';\nimport useTextFilter from '../Filters/TextFilter';\nimport useRangeFilter from '../Filters/RangeFilter';\nimport {\n  getCvssScoreFromUrlParam,\n  setupFilters,\n} from '../../../Helpers/miscHelper';\nimport checkboxFilter from '../Filters/CheckboxFilter';\nimport radioFilter from '../Filters/RadioFilter';\nimport BaseTable from '../Generic/BaseTable';\nimport { fetchCves } from '../../../Helpers/apiHelper';\n\nconst CveListTable = () => {\n  const { cves, isLoading, meta, error } = useSelector(\n    ({ CveListStore }) => CveListStore\n  );\n\n  const apply = useUrlBoundParams({\n    allowedParams: CVE_LIST_ALLOWED_PARAMS,\n    initialParams: meta,\n    fetchAction: fetchCveListTable,\n    changeParamsAction: changeCveListTableParams,\n  });\n\n  const { search, cvss_score, severity, published, affected_clusters } = meta;\n\n  const [cvss_score_min, cvss_score_max] = getCvssScoreFromUrlParam(cvss_score);\n\n  const onExport = useExport({\n    filenamePrefix: CVE_LIST_EXPORT_PREFIX,\n    fetchAction: fetchCves,\n    allowedParams: CVE_LIST_ALLOWED_PARAMS,\n  });\n\n  const filters = [\n    useTextFilter({\n      urlParam: 'search',\n      label: 'CVE',\n      placeholder: 'Search ID or description',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n    radioFilter({\n      urlParam: 'published',\n      label: 'Publish date',\n      value: published,\n      items: PUBLISHED_OPTIONS,\n      placeholder: 'Filter by publish date',\n      apply,\n      chipLabel: 'Publish date',\n    }),\n    checkboxFilter({\n      urlParam: 'severity',\n      label: 'Severity',\n      value: severity,\n      items: SEVERITY_OPTIONS,\n      placeholder: 'Filter by severity',\n      apply,\n      chipLabel: 'Severity',\n    }),\n    useRangeFilter({\n      urlParam: 'cvss_score',\n      label: 'CVSS score',\n      minMaxLabels: {\n        min: 'Min CVSS',\n        max: 'Max CVSS',\n      },\n      range: {\n        min: 0,\n        max: 10,\n      },\n      value: {\n        min: cvss_score_min,\n        max: cvss_score_max,\n      },\n      placeholder: 'Filter by CVSS score range',\n      apply,\n      chipLabel: 'CVSS base score',\n    }),\n    checkboxFilter({\n      urlParam: 'affected_clusters',\n      label: 'Exposed clusters',\n      value: affected_clusters,\n      items: EXPOSED_CLUSTERS_OPTIONS,\n      placeholder: 'Filter by exposed clusters',\n      apply,\n      chipLabel: 'Exposed clusters',\n    }),\n  ];\n\n  const [filterConfig, activeFiltersConfig] = setupFilters(\n    filters,\n    meta,\n    CVE_LIST_DEFAULT_FILTERS,\n    apply\n  );\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      isExpandable\n      rows={cves.map((row) => CVE_LIST_TABLE_MAPPER(row))}\n      columns={CVE_LIST_TABLE_COLUMNS}\n      filterConfig={filterConfig}\n      activeFiltersConfig={activeFiltersConfig}\n      meta={meta}\n      error={error}\n      emptyState={<NoMatchingCves />}\n      apply={apply}\n      onExport={(format) => onExport(format, meta)}\n    />\n  );\n};\n\nexport default CveListTable;\n","import React, { Fragment, useEffect } from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n  Popover,\n} from '@patternfly/react-core';\nimport {\n  OutlinedQuestionCircleIcon,\n  ExternalLinkAltIcon,\n} from '@patternfly/react-icons';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport CveListTable from './CveListTable';\nimport { useLocalStorage } from '../../../Helpers/hooks';\nimport { HEADER_ALERT_DISMISSED_KEY } from '../../../Helpers/constants';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst CveListPage = () => {\n  const chrome = useChrome();\n\n  const PRODUCT_DOC =\n    'https://access.redhat.com/documentation/en-us/openshift_cluster_manager/2022';\n\n  const [wasHeaderAlertDismissed, setHeaderAlertDismissed] = useLocalStorage(\n    HEADER_ALERT_DISMISSED_KEY\n  );\n\n  useEffect(() => {\n    chrome.updateDocumentTitle(\n      'CVEs - Vulnerability Dashboard | Red Hat Insights | console.redhat.com'\n    );\n  }, []);\n\n  const HeaderTitle = (\n    <Popover\n      hasAutoWidth\n      maxWidth=\"380px\"\n      position=\"right\"\n      enableFlip\n      bodyContent={\n        <Fragment>\n          The Vulnerability service identifies CVEs with errata that may affect\n          your Insights-connected OpenShift clusters. Vulnerability information\n          applies for OCP4.8+ version only.\n        </Fragment>\n      }\n      footerContent={\n        <a href={PRODUCT_DOC} target=\"__blank\" rel=\"noopener noreferrer\">\n          Learn more <ExternalLinkAltIcon />\n        </a>\n      }\n    >\n      <span>\n        CVEs\n        <OutlinedQuestionCircleIcon\n          color=\"var(--pf-global--secondary-color--100)\"\n          className=\"pf-u-ml-sm pointer cves-header-questionmark\"\n          style={{ verticalAlign: '0' }}\n        />\n      </span>\n    </Popover>\n  );\n\n  return (\n    <Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={HeaderTitle} className=\"pf-u-mb-sm\" />\n        {!wasHeaderAlertDismissed && (\n          <Alert\n            variant={AlertVariant.info}\n            isInline\n            className=\"pf-u-mt-md\"\n            title=\"Vulnerability information applies to OCP4.8+ version only\"\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => setHeaderAlertDismissed(true)}\n              />\n            }\n          />\n        )}\n      </PageHeader>\n      <Main>\n        <Alert\n          variant={AlertVariant.info}\n          isInline\n          title=\"Check out Red Hat's fully managed Kubernetes-native security platform\"\n        >\n          Performs in-depth vulnerability analysis and protects containerized\n          applications across the full application life cycle.\n          <br />\n          <br />\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`${\n              chrome.isBeta() ? '/preview' : ''\n            }/application-services/acs/overview`}\n          >\n            Visit Red Hat Advanced Cluster Security Cloud Service (RHACSCS)\n            <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n          </a>\n        </Alert>\n        <CveListTable />\n      </Main>\n    </Fragment>\n  );\n};\n\nexport default CveListPage;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst radioFilter = ({\n  urlParam,\n  label,\n  value,\n  placeholder,\n  items,\n  apply,\n  chipLabel,\n}) => {\n  const onValueChanged = (value) => {\n    apply({\n      [urlParam]: value,\n      offset: 0,\n    });\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.radio,\n    urlParam,\n    key: urlParam,\n    filterValues: {\n      onChange: (event, value) => {\n        onValueChanged(value);\n      },\n      items,\n      value: value || items[0].value,\n      placeholder,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: () => {\n      onValueChanged(undefined);\n    },\n    key: urlParam,\n    category: chipLabel,\n    chips: items\n      .filter((item) => item.value === value)\n      ?.map((item) => ({ name: item.label, value: item.value })),\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default radioFilter;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Split, SplitItem, TextInput, Select } from '@patternfly/react-core';\n\nconst RangeFilterComponent = ({\n  setValues,\n  range,\n  minMaxLabels,\n  selectProps,\n  inputValue,\n  setInputValue,\n}) => {\n  const [isOpen, setOpen] = useState(false);\n\n  const areValuesValid = (currentValues, inputName) => {\n    const numberValue = {\n      min: Number(currentValues.min),\n      max: Number(currentValues.max),\n    };\n\n    return (\n      currentValues[inputName] != '' &&\n      numberValue[inputName] <= range.max &&\n      numberValue[inputName] >= range.min &&\n      numberValue.min <= numberValue.max\n    );\n  };\n\n  const handleInputChange = (newValue, inputName) => {\n    const newRange = { ...inputValue, [inputName]: newValue };\n\n    if (areValuesValid(newRange, 'min') && areValuesValid(newRange, 'max')) {\n      setValues({\n        min: Number(newRange.min),\n        max: Number(newRange.max),\n      });\n    }\n\n    setInputValue(newRange);\n  };\n\n  const filterContent = (\n    <Split className=\"pf-u-m-md\">\n      <SplitItem>\n        <span style={{ fontSize: 'var(--pf-global--FontSize--sm)' }}>\n          {minMaxLabels.min}\n        </span>\n        <br />\n        <TextInput\n          type=\"number\"\n          onChange={(value) => handleInputChange(value, 'min')}\n          validated={areValuesValid(inputValue, 'min') ? 'default' : 'error'}\n          className=\"range-filter-input\"\n          id=\"range-filter-input-min\"\n          value={inputValue.min}\n        />\n      </SplitItem>\n      <SplitItem>\n        <br />\n        <span className=\"pf-u-m-sm\">-</span>\n      </SplitItem>\n      <SplitItem>\n        <span style={{ fontSize: 'var(--pf-global--FontSize--sm)' }}>\n          {minMaxLabels.max}\n        </span>\n        <br />\n        <TextInput\n          type=\"number\"\n          onChange={(value) => handleInputChange(value, 'max')}\n          validated={areValuesValid(inputValue, 'max') ? 'default' : 'error'}\n          className=\"range-filter-input\"\n          id=\"range-filter-input-max\"\n          value={inputValue.max}\n        />\n      </SplitItem>\n    </Split>\n  );\n\n  return (\n    <Select\n      variant=\"panel\"\n      aria-label=\"Select Input\"\n      customContent={filterContent}\n      onToggle={() => setOpen(!isOpen)}\n      isOpen={isOpen}\n      width=\"auto\"\n      {...selectProps}\n    />\n  );\n};\n\nRangeFilterComponent.propTypes = {\n  setValues: propTypes.func,\n  range: propTypes.shape({ min: propTypes.number, max: propTypes.number }),\n  minMaxLabels: propTypes.shape({ min: propTypes.node, max: propTypes.node }),\n  selectProps: propTypes.object,\n  inputValue: propTypes.shape({ min: propTypes.string, max: propTypes.string }),\n  setInputValue: propTypes.func,\n};\n\nexport default RangeFilterComponent;\n","var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n","import React, { useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport RangeFilterComponent from '../../PresentationalComponents/RangeFilterComponent';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nconst useRangeFilter = ({\n  urlParam,\n  label,\n  minMaxLabels,\n  range,\n  value,\n  placeholder,\n  apply,\n  chipLabel,\n  chipDecimalPlaces = 1,\n}) => {\n  const [handleSearch] = useState(() =>\n    debounce((newValue) => {\n      if (\n        newValue.min >= range.min &&\n        newValue.max <= range.max &&\n        newValue.min <= newValue.max\n      ) {\n        apply({\n          [urlParam]: `${newValue.min},${newValue.max}`,\n          offset: 0,\n        });\n      }\n    }, 600)\n  );\n\n  const [inputValue, setInputValue] = useState();\n\n  useDeepCompareEffect(() => {\n    setInputValue({\n      min: (value ?? range).min.toString(),\n      max: (value ?? range).max.toString(),\n    });\n  }, [value]);\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.custom,\n    key: urlParam,\n    urlParam,\n    filterValues: {\n      children: (\n        <RangeFilterComponent\n          setValues={handleSearch}\n          range={range}\n          className=\"pf-u-mb-0\"\n          selectProps={{ placeholderText: placeholder }}\n          minMaxLabels={minMaxLabels}\n          inputValue={inputValue}\n          setInputValue={setInputValue}\n        />\n      ),\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: value.min !== range.min || value.max !== range.max,\n    onDelete: () => {\n      apply({\n        [urlParam]: undefined,\n        offset: 0,\n      });\n    },\n    key: urlParam,\n    category: chipLabel,\n    chips: [\n      {\n        name:\n          value.min.toFixed(chipDecimalPlaces) +\n          ' - ' +\n          value.max.toFixed(chipDecimalPlaces),\n      },\n    ],\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default useRangeFilter;\n","import * as React from 'react';\nimport { dequal } from 'dequal';\n\nfunction checkDeps(deps) {\n  if (!deps || !deps.length) {\n    throw new Error('useDeepCompareEffect should not be used with no dependencies. Use React.useEffect instead.');\n  }\n\n  if (deps.every(isPrimitive)) {\n    throw new Error('useDeepCompareEffect should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n  }\n}\n\nfunction isPrimitive(val) {\n  return val == null || /^[sbn]/.test(typeof val);\n}\n/**\n * @param value the value to be memoized (usually a dependency list)\n * @returns a momoized version of the value as long as it remains deeply equal\n */\n\n\nfunction useDeepCompareMemoize(value) {\n  var ref = React.useRef(value);\n  var signalRef = React.useRef(0);\n\n  if (!dequal(value, ref.current)) {\n    ref.current = value;\n    signalRef.current += 1;\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  return React.useMemo(function () {\n    return ref.current;\n  }, [signalRef.current]);\n}\n\nfunction useDeepCompareEffect(callback, dependencies) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkDeps(dependencies);\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  return React.useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nfunction useDeepCompareEffectNoCheck(callback, dependencies) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nexport { useDeepCompareEffect as default, useDeepCompareEffectNoCheck, useDeepCompareMemoize };\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","CveDatabaseLink","React","href","target","rel","className","ExternalLinkAltIcon","ProdSecLink","Bullseye","EmptyState","variant","EmptyStateVariant","Title","headingLevel","size","EmptyStateBody","_useSelector","useSelector","_ref","CveListStore","cves","isLoading","meta","error","apply","useUrlBoundParams","allowedParams","CVE_LIST_ALLOWED_PARAMS","initialParams","fetchAction","fetchCveListTable","changeParamsAction","changeCveListTableParams","search","cvss_score","severity","published","affected_clusters","_getCvssScoreFromUrlP","getCvssScoreFromUrlParam","_getCvssScoreFromUrlP2","_slicedToArray","cvss_score_min","cvss_score_max","onExport","useExport","filenamePrefix","CVE_LIST_EXPORT_PREFIX","fetchCves","filters","useTextFilter","urlParam","label","placeholder","value","chipLabel","radioFilter","items","PUBLISHED_OPTIONS","checkboxFilter","SEVERITY_OPTIONS","useRangeFilter","minMaxLabels","min","max","range","EXPOSED_CLUSTERS_OPTIONS","_setupFilters","setupFilters","CVE_LIST_DEFAULT_FILTERS","_setupFilters2","filterConfig","activeFiltersConfig","BaseTable","isExpandable","rows","map","row","CVE_LIST_TABLE_MAPPER","columns","CVE_LIST_TABLE_COLUMNS","emptyState","NoMatchingCves","format","chrome","useChrome","_useLocalStorage","useLocalStorage","HEADER_ALERT_DISMISSED_KEY","_useLocalStorage2","wasHeaderAlertDismissed","setHeaderAlertDismissed","useEffect","updateDocumentTitle","HeaderTitle","Popover","hasAutoWidth","maxWidth","position","enableFlip","bodyContent","Fragment","footerContent","OutlinedQuestionCircleIcon","color","style","verticalAlign","PageHeader","PageHeaderTitle","title","Alert","AlertVariant","isInline","actionClose","AlertActionCloseButton","onClose","Main","concat","isBeta","CveListTable","_items$filter","onValueChanged","_apply","_defineProperty","type","conditionalFilterType","key","filterValues","onChange","event","isShown","onDelete","undefined","category","chips","filter","item","RangeFilterComponent","setValues","selectProps","inputValue","setInputValue","_useState","useState","_useState2","isOpen","setOpen","areValuesValid","currentValues","inputName","numberValue","Number","handleInputChange","newValue","newRange","_objectSpread","filterContent","Split","SplitItem","fontSize","TextInput","validated","id","Select","_extends","customContent","onToggle","propTypes","has","Object","prototype","hasOwnProperty","find","iter","tar","keys","dequal","foo","bar","ctor","len","tmp","constructor","Date","getTime","RegExp","toString","Array","length","Set","Map","get","ArrayBuffer","Uint8Array","DataView","byteLength","getInt8","isView","call","callback","dependencies","_ref$chipDecimalPlace","chipDecimalPlaces","debounce","handleSearch","_useState3","_useState4","ref","signalRef","current","useDeepCompareMemoize","children","placeholderText","_apply2","toFixed"],"sourceRoot":""}