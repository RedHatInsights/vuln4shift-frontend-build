{"version":3,"file":"js/CveListPage.1658508344627.fff7bb18766c0dc66f8d.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/check-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/NoCves.js","webpack:///./src/Components/PresentationalComponents/RangeFilterComponent.js","webpack:///./src/Components/SmartComponents/Filters/RangeFilter.js","webpack:///./src/Components/SmartComponents/Filters/CheckboxFilter.js","webpack:///./src/Components/SmartComponents/Filters/RadioFilter.js","webpack:///./src/Components/SmartComponents/Filters/TernaryFilter.js","webpack:///./src/Components/SmartComponents/CveList/CveListTable.js","webpack:///./src/Components/SmartComponents/CveList/CveListPage.js","webpack:///./src/Components/SmartComponents/Filters/TextFilter.js","webpack:///./src/Components/SmartComponents/Generic/BaseTable.js","webpack:///./src/Helpers/hooks.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.CheckCircleIconConfig = {\n  name: 'CheckCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CheckCircleIcon = require('../createIcon').createIcon(exports.CheckCircleIconConfig);\nexports[\"default\"] = exports.CheckCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExternalLinkAltIcon = require('../createIcon').createIcon(exports.ExternalLinkAltIconConfig);\nexports[\"default\"] = exports.ExternalLinkAltIcon;","\"use strict\"\nexports.__esModule = true;\nexports.OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.OutlinedQuestionCircleIcon = require('../createIcon').createIcon(exports.OutlinedQuestionCircleIconConfig);\nexports[\"default\"] = exports.OutlinedQuestionCircleIcon;","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Bullseye,\n  Title,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\n\nconst NoCves = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={CheckCircleIcon} size=\"sm\" />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        No CVEs\n      </Title>\n      <EmptyStateBody>\n        Your clusters are not affected by any CVEs.\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoCves;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Split, SplitItem, TextInput, Select } from '@patternfly/react-core';\n\nconst RangeFilterComponent = ({\n  defaultValues,\n  setValues,\n  range,\n  minMaxLabels,\n  selectProps,\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const [inputValue, setInputValue] = useState({\n    min: defaultValues.min.toString(),\n    max: defaultValues.max.toString(),\n  });\n\n  const areValuesValid = (currentValues, inputName) => {\n    const numberValue = {\n      min: Number(currentValues.min),\n      max: Number(currentValues.max),\n    };\n\n    return (\n      currentValues[inputName] != '' &&\n      numberValue[inputName] <= range.max &&\n      numberValue[inputName] >= range.min &&\n      numberValue.min <= numberValue.max\n    );\n  };\n\n  const handleInputChange = (newValue, inputName) => {\n    const newRange = { ...inputValue, [inputName]: newValue };\n\n    if (areValuesValid(newRange, 'min') && areValuesValid(newRange, 'max')) {\n      setValues({\n        min: Number(newRange.min),\n        max: Number(newRange.max),\n      });\n    }\n\n    setInputValue(newRange);\n  };\n\n  const filterContent = (\n    <Split className=\"pf-u-m-md\">\n      <SplitItem>\n        <span style={{ fontSize: 'var(--pf-global--FontSize--sm)' }}>\n          {minMaxLabels.min}\n        </span>\n        <br />\n        <TextInput\n          type=\"number\"\n          onChange={(value) => handleInputChange(value, 'min')}\n          validated={areValuesValid(inputValue, 'min') ? 'default' : 'error'}\n          className=\"range-filter-input\"\n          id=\"range-filter-input-min\"\n          value={inputValue.min}\n        />\n      </SplitItem>\n      <SplitItem>\n        <br />\n        <span className=\"pf-u-m-sm\">-</span>\n      </SplitItem>\n      <SplitItem>\n        <span style={{ fontSize: 'var(--pf-global--FontSize--sm)' }}>\n          {minMaxLabels.max}\n        </span>\n        <br />\n        <TextInput\n          type=\"number\"\n          onChange={(value) => handleInputChange(value, 'max')}\n          validated={areValuesValid(inputValue, 'max') ? 'default' : 'error'}\n          className=\"range-filter-input\"\n          id=\"range-filter-input-max\"\n          value={inputValue.max}\n        />\n      </SplitItem>\n    </Split>\n  );\n\n  return (\n    <Select\n      variant=\"panel\"\n      aria-label=\"Select Input\"\n      customContent={filterContent}\n      onToggle={() => setOpen(!isOpen)}\n      isOpen={isOpen}\n      width=\"auto\"\n      {...selectProps}\n    />\n  );\n};\n\nRangeFilterComponent.propTypes = {\n  defaultValues: propTypes.shape({\n    min: propTypes.number,\n    max: propTypes.number,\n  }),\n  setValues: propTypes.func,\n  range: propTypes.shape({ min: propTypes.number, max: propTypes.number }),\n  minMaxLabels: propTypes.shape({ min: propTypes.node, max: propTypes.node }),\n  selectProps: propTypes.object,\n};\n\nexport default RangeFilterComponent;\n","import React, { useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport RangeFilterComponent from '../../PresentationalComponents/RangeFilterComponent';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst useRangeFilter = ({\n  urlParam,\n  label,\n  minMaxLabels,\n  range,\n  value,\n  placeholder,\n  apply,\n}) => {\n  const [searchValue, setSearchValue] = useState();\n  const [handleSearch] = useState(() =>\n    debounce((newValue) => {\n      if (\n        newValue.min >= 0 &&\n        newValue.max <= 10 &&\n        newValue.min <= newValue.max\n      ) {\n        apply({\n          [urlParam]: `${newValue.min},${newValue.max}`,\n          offset: 0,\n        });\n      }\n    }, 600)\n  );\n\n  useEffect(() => {\n    setSearchValue({\n      min: isNaN(value.min) ? range.min : value.min,\n      max: isNaN(value.max) ? range.max : value.max,\n    });\n  }, [value.min, value.max]);\n\n  const setValue = (newValue) => {\n    setSearchValue(newValue);\n    handleSearch(newValue);\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.custom,\n    key: urlParam,\n    urlParam,\n    filterValues: {\n      children: (\n        <RangeFilterComponent\n          defaultValues={searchValue}\n          setValues={setValue}\n          range={range}\n          className=\"pf-u-mb-0\"\n          selectProps={{ placeholderText: placeholder }}\n          minMaxLabels={minMaxLabels}\n        />\n      ),\n    },\n  };\n\n  return { filterConfig };\n};\n\nexport default useRangeFilter;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst checkboxFilter = ({\n  urlParam,\n  label,\n  value,\n  placeholder,\n  items,\n  apply,\n  chipLabel,\n}) => {\n  const onValuesChanged = (values) => {\n    apply({\n      [urlParam]: values.join(','),\n      offset: 0,\n    });\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.checkbox,\n    urlParam,\n    key: urlParam,\n    filterValues: {\n      onChange: (event, value) => {\n        onValuesChanged(value);\n      },\n      items,\n      value: value ? value.split(',') : [],\n      placeholder,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: (chips) => {\n      const itemsToRemove = chips.map((chip) => chip.value);\n\n      const newValue = value\n        .split(',')\n        .filter((value) => !itemsToRemove.includes(value));\n\n      onValuesChanged(newValue);\n    },\n    key: urlParam,\n    category: chipLabel,\n    chips: items\n      .filter((item) => value?.split(',').includes(item.value))\n      .map((item) => ({ name: item.label, value: item.value })),\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default checkboxFilter;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst radioFilter = ({ urlParam, label, value, placeholder, items, apply }) => {\n  const onValueChanged = (value) => {\n    apply({\n      [urlParam]: value,\n      offset: 0,\n    });\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.radio,\n    urlParam,\n    key: urlParam,\n    filterValues: {\n      onChange: (event, value) => {\n        onValueChanged(value);\n      },\n      items,\n      value: value || items[0].value,\n      placeholder,\n    },\n  };\n\n  return { filterConfig };\n};\n\nexport default radioFilter;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst ternaryFilter = ({\n  urlParam,\n  label,\n  value,\n  placeholder,\n  items,\n  apply,\n}) => {\n  const onValuesChanged = (values) => {\n    apply({\n      [urlParam]: items.map((item) => values.includes(item.value)).join(','),\n      offset: 0,\n    });\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.checkbox,\n    urlParam,\n    key: urlParam,\n    filterValues: {\n      onChange: (event, value) => {\n        onValuesChanged(value);\n      },\n      items,\n      value: value\n        ? items\n            .map((item) => item.value)\n            .filter((_, index) => value.split(',')[index] === 'true')\n        : [],\n      placeholder,\n    },\n  };\n\n  return { filterConfig };\n};\n\nexport default ternaryFilter;\n","import React from 'react';\nimport {\n  CVE_LIST_ALLOWED_PARAMS,\n  CVE_LIST_TABLE_COLUMNS,\n  CVE_LIST_TABLE_MAPPER,\n  EXPOSED_CLUSTERS_OPTIONS,\n  PUBLISHED_OPTIONS,\n  SEVERITY_OPTIONS,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport {\n  fetchCveListTable,\n  changeCveListTableParams,\n} from '../../../Store/Actions';\nimport NoCves from '../../PresentationalComponents/EmptyStates/NoCves';\nimport { useUrlBoundParams } from '../../../Helpers/hooks';\nimport useTextFilter from '../Filters/TextFilter';\nimport useRangeFilter from '../Filters/RangeFilter';\nimport { getCvssScoreFromUrlParam } from '../../../Helpers/miscHelper';\nimport checkboxFilter from '../Filters/CheckboxFilter';\nimport radioFilter from '../Filters/RadioFilter';\nimport ternaryFilter from '../Filters/TernaryFilter';\nimport BaseTable from '../Generic/BaseTable';\n\nconst CveListTable = () => {\n  const { cves, isLoading, meta } = useSelector(\n    ({ CveListStore }) => CveListStore\n  );\n\n  const apply = useUrlBoundParams({\n    allowedParams: CVE_LIST_ALLOWED_PARAMS,\n    defaultParams: meta,\n    fetchAction: fetchCveListTable,\n    changeParamsAction: changeCveListTableParams,\n  });\n\n  const { search, cvss_score, severity, published, affected_clusters } = meta;\n\n  const [cvss_score_min, cvss_score_max] = getCvssScoreFromUrlParam(cvss_score);\n\n  const filters = [\n    useTextFilter({\n      urlParam: 'search',\n      label: 'CVE',\n      placeholder: 'Search ID or description',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n    radioFilter({\n      urlParam: 'published',\n      label: 'Publish date',\n      value: published,\n      items: PUBLISHED_OPTIONS,\n      placeholder: 'Filter by publish date',\n      apply,\n    }),\n    checkboxFilter({\n      urlParam: 'severity',\n      label: 'Severity',\n      value: severity,\n      items: SEVERITY_OPTIONS,\n      placeholder: 'Filter by severity',\n      apply,\n      chipLabel: 'Severity',\n    }),\n    useRangeFilter({\n      urlParam: 'cvss_score',\n      label: 'CVSS score',\n      minMaxLabels: {\n        min: 'Min CVSS',\n        max: 'Max CVSS',\n      },\n      range: {\n        min: 0,\n        max: 10,\n      },\n      value: {\n        min: cvss_score_min,\n        max: cvss_score_max,\n      },\n      placeholder: 'Filter by CVSS score range',\n      apply,\n    }),\n    ternaryFilter({\n      urlParam: 'affected_clusters',\n      label: 'Exposed clusters',\n      value: affected_clusters,\n      items: EXPOSED_CLUSTERS_OPTIONS,\n      placeholder: 'Filter by exposed clusters',\n      apply,\n    }),\n  ];\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      isExpandable\n      rows={cves.map((row) => CVE_LIST_TABLE_MAPPER(row))}\n      columns={CVE_LIST_TABLE_COLUMNS}\n      filters={filters}\n      meta={meta}\n      emptyState={<NoCves />}\n      apply={apply}\n    />\n  );\n};\n\nexport default CveListTable;\n","import React, { Fragment } from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n  Popover,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport {\n  OutlinedQuestionCircleIcon,\n  ExternalLinkAltIcon,\n} from '@patternfly/react-icons';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport CveListTable from './CveListTable';\nimport { useLocalStorage } from '../../../Helpers/hooks';\nimport { HEADER_ALERT_DISMISSED_KEY } from '../../../Helpers/constants';\n\nconst CveListPage = () => {\n  // TODO: Add correct link\n  const PRODUCT_DOC = 'https://access.redhat.com/';\n\n  const [wasHeaderAlertDismissed, setHeaderAlertDismissed] = useLocalStorage(\n    HEADER_ALERT_DISMISSED_KEY\n  );\n\n  const HeaderTitle = (\n    <Popover\n      className=\"cve-list-page-header-popover\"\n      position=\"right\"\n      flipBehavior={[]}\n      bodyContent={\n        <Fragment>\n          The Vulnerability service identifies CVEs with errata that may affect\n          your Insights-connected OpenShift clusters. Vulnerability information\n          applies for OCP4.8+ version only.\n          <br />\n          <br />\n          To access comprehensive Kubernetes security solution, go to&nbsp;\n          <a>Red Hat Advanced Cluster Security for Kubernetes</a>.\n        </Fragment>\n      }\n      footerContent={\n        <Split hasGutter>\n          <SplitItem>\n            <a href={PRODUCT_DOC} target=\"__blank\" rel=\"noopener noreferrer\">\n              Learn more <ExternalLinkAltIcon />\n            </a>\n          </SplitItem>\n          <SplitItem>\n            <a href={PRODUCT_DOC} target=\"__blank\" rel=\"noopener noreferrer\">\n              Learn about ACS <ExternalLinkAltIcon />\n            </a>\n          </SplitItem>\n        </Split>\n      }\n      appendTo={document.querySelector('.ocpVulnerability')}\n    >\n      <span>\n        CVEs\n        <OutlinedQuestionCircleIcon\n          color=\"var(--pf-global--secondary-color--100)\"\n          className=\"pf-u-ml-sm pointer cves-header-questionmark\"\n          style={{ verticalAlign: '0' }}\n        />\n      </span>\n    </Popover>\n  );\n\n  return (\n    <Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={HeaderTitle} className=\"pf-u-mb-sm\" />\n        {!wasHeaderAlertDismissed && (\n          <Alert\n            variant={AlertVariant.info}\n            isInline\n            className=\"pf-u-mt-md\"\n            title=\"Vulnerability information applies to OCP4.8+ version only\"\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => setHeaderAlertDismissed(true)}\n              />\n            }\n          />\n        )}\n      </PageHeader>\n      <Main>\n        <CveListTable />\n      </Main>\n    </Fragment>\n  );\n};\n\nexport default CveListPage;\n","import { useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst useTextFilter = ({\n  urlParam,\n  label,\n  placeholder,\n  value,\n  apply,\n  chipLabel,\n}) => {\n  const [searchValue, setSearchValue] = useState();\n  const [handleSearch] = useState(() =>\n    debounce((newValue) => {\n      if (newValue !== undefined) {\n        apply({ [urlParam]: newValue, offset: 0 });\n      }\n    }, 400)\n  );\n\n  useEffect(() => setSearchValue(value), [value]);\n\n  const filterConfig = {\n    type: conditionalFilterType.text,\n    label: label,\n    key: urlParam,\n    filterValues: {\n      'aria-label': 'search-field',\n      id: `search-${label.id}`,\n      onChange: (event, value) => {\n        setSearchValue(value);\n        handleSearch(value);\n      },\n      placeholder,\n      value: searchValue,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: () => apply({ [urlParam]: undefined, offset: 0 }),\n    key: urlParam,\n    category: chipLabel,\n    chips: [\n      {\n        name: value,\n      },\n    ],\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default useTextFilter;\n","import React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport BaseTableBody from '../Generic/BaseTableBody';\nimport BaseToolbar from '../Generic/BaseToolbar';\nimport BottomPagination from '../../PresentationalComponents/BottomPagination';\nimport { setupFilters } from '../../../Helpers/miscHelper';\n\nconst BaseTable = ({\n  isLoading,\n  isExpandable,\n  rows,\n  columns,\n  filters = [],\n  meta,\n  emptyState,\n  apply,\n}) => {\n  const { offset, limit, total_items, sort } = meta;\n\n  const [filterConfig, activeFiltersConfig] = setupFilters(filters);\n\n  return (\n    <Fragment>\n      <BaseToolbar\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n        filterConfig={filterConfig}\n        activeFiltersConfig={activeFiltersConfig}\n      />\n      <BaseTableBody\n        isLoading={isLoading}\n        columns={columns}\n        rows={rows}\n        isExpandable={isExpandable}\n        emptyState={emptyState}\n        sortParam={sort}\n        apply={apply}\n      />\n      <BottomPagination\n        page={offset / limit + 1}\n        perPage={limit}\n        itemCount={total_items}\n        apply={apply}\n      />\n    </Fragment>\n  );\n};\n\nBaseTable.propTypes = {\n  isLoading: propTypes.bool.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node.isRequired,\n      sortParam: propTypes.string,\n    })\n  ).isRequired,\n  rows: propTypes.arrayOf(\n    propTypes.shape({\n      key: propTypes.string.isRequired,\n      cells: propTypes.arrayOf(propTypes.node).isRequired,\n      expandableContent: propTypes.node,\n    })\n  ).isRequired,\n  isExpandable: propTypes.bool,\n  emptyState: propTypes.node.isRequired,\n  sortParam: propTypes.string,\n  filters: propTypes.array,\n  meta: propTypes.shape({\n    offset: propTypes.number,\n    limit: propTypes.number,\n    total_items: propTypes.number,\n    sort: propTypes.string,\n  }),\n  apply: propTypes.func,\n};\n\nexport default BaseTable;\n","import { useState, useEffect } from 'react';\nimport qs from 'query-string';\nimport { useDispatch } from 'react-redux';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { PUBLISHED_OPTIONS } from './constants';\n\nexport const useLocalStorage = (key) => {\n  const [sessionValue, setSessionValue] = useState(localStorage.getItem(key));\n\n  const setValue = (newValue) => {\n    setSessionValue(newValue);\n    localStorage.setItem(key, newValue);\n  };\n\n  return [sessionValue, setValue];\n};\n\nexport function filterUrlParams(urlParams, allowedParams) {\n  Object.entries(urlParams)\n    .filter(([key, value]) => !allowedParams.includes(key) || value === '')\n    .forEach(([key]) => delete urlParams[key]);\n\n  return urlParams;\n}\n\nexport const useUrlParams = (allowedParams) => {\n  const url = new URL(window.location);\n  const urlParams = filterUrlParams(qs.parse(url.search), allowedParams);\n\n  const setUrlParams = (parameters) => {\n    const searchParams = qs.stringify(\n      filterUrlParams(parameters, allowedParams)\n    );\n\n    window.history.replaceState(\n      null,\n      null,\n      `${url.origin}${url.pathname}?${searchParams}`\n    );\n  };\n\n  return [urlParams, setUrlParams];\n};\n\nconst transformPublishedParam = (urlParams) => {\n  const formatDate = (timestamp) => {\n    const pad = (number) => `${`${number}`.length === 1 ? '0' : ''}${number}`;\n\n    const date = new Date(timestamp);\n\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1; // month is zero indexed\n    const day = date.getDate();\n\n    return `${year}-${pad(month)}-${pad(day)}`;\n  };\n\n  if (urlParams.published) {\n    const option = PUBLISHED_OPTIONS.find(\n      (option) => option.value === urlParams.published\n    );\n\n    urlParams.published = `${option.from ? formatDate(option.from) : ''},${\n      option.to ? formatDate(option.to) : ''\n    }`;\n  }\n\n  return urlParams;\n};\n\n// when creating additional transformer in the future\n// create a new function for it and then add the function to this array\nconst URL_TRANSFORMERS = [transformPublishedParam];\n\nconst transformUrlParamsBeforeFetching = (urlParams) => {\n  let newParams = { ...urlParams };\n\n  URL_TRANSFORMERS.forEach((transformer) => {\n    newParams = transformer(newParams);\n  });\n\n  return newParams;\n};\n\nconst NUMERICAL_URL_PARAMS = ['limit', 'offset'];\n\nexport const useUrlBoundParams = ({\n  allowedParams,\n  defaultParams,\n  additionalParam,\n  fetchAction,\n  changeParamsAction,\n}) => {\n  const dispatch = useDispatch();\n\n  const [urlParams] = useUrlParams(allowedParams);\n\n  useEffect(() => {\n    apply({ ...defaultParams, ...urlParams });\n  }, []);\n\n  useDeepCompareEffect(() => {\n    dispatch(\n      fetchAction(transformUrlParamsBeforeFetching(urlParams), additionalParam)\n    );\n  }, [urlParams]);\n\n  const apply = (newParams) => {\n    const [urlParams, setUrlParams] = useUrlParams(allowedParams);\n\n    let combinedParams = { ...urlParams, ...newParams };\n\n    for (const property in combinedParams) {\n      if (NUMERICAL_URL_PARAMS.includes(property)) {\n        combinedParams[property] = Number(combinedParams[property]);\n      }\n    }\n\n    setUrlParams(combinedParams);\n    dispatch(changeParamsAction(combinedParams));\n  };\n\n  return apply;\n};\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","Bullseye","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","CheckCircleIcon","size","Title","headingLevel","EmptyStateBody","RangeFilterComponent","defaultValues","setValues","range","minMaxLabels","selectProps","useState","isOpen","setOpen","min","toString","max","inputValue","setInputValue","areValuesValid","currentValues","inputName","numberValue","Number","handleInputChange","newValue","newRange","filterContent","Split","className","SplitItem","style","fontSize","TextInput","type","onChange","value","validated","id","Select","customContent","onToggle","propTypes","urlParam","label","placeholder","apply","searchValue","setSearchValue","debounce","handleSearch","useEffect","isNaN","filterConfig","conditionalFilterType","key","filterValues","children","placeholderText","items","chipLabel","onValuesChanged","values","join","event","split","activeFiltersConfig","isShown","onDelete","chips","itemsToRemove","map","chip","filter","includes","category","item","onValueChanged","_","index","useSelector","CveListStore","cves","isLoading","meta","useUrlBoundParams","allowedParams","CVE_LIST_ALLOWED_PARAMS","defaultParams","fetchAction","fetchCveListTable","changeParamsAction","changeCveListTableParams","search","cvss_score","severity","published","affected_clusters","getCvssScoreFromUrlParam","cvss_score_min","cvss_score_max","filters","useTextFilter","radioFilter","PUBLISHED_OPTIONS","checkboxFilter","SEVERITY_OPTIONS","useRangeFilter","ternaryFilter","EXPOSED_CLUSTERS_OPTIONS","BaseTable","isExpandable","rows","row","CVE_LIST_TABLE_MAPPER","columns","CVE_LIST_TABLE_COLUMNS","emptyState","NoCves","PRODUCT_DOC","useLocalStorage","HEADER_ALERT_DISMISSED_KEY","wasHeaderAlertDismissed","setHeaderAlertDismissed","HeaderTitle","Popover","position","flipBehavior","bodyContent","Fragment","footerContent","hasGutter","href","target","rel","appendTo","document","querySelector","color","verticalAlign","PageHeader","PageHeaderTitle","title","Alert","AlertVariant","isInline","actionClose","AlertActionCloseButton","onClose","Main","undefined","offset","limit","total_items","sort","setupFilters","page","perPage","itemCount","sortParam","isRequired","cells","expandableContent","localStorage","getItem","sessionValue","setSessionValue","setItem","filterUrlParams","urlParams","Object","entries","forEach","useUrlParams","url","URL","window","location","qs","parameters","searchParams","history","replaceState","origin","pathname","URL_TRANSFORMERS","formatDate","timestamp","pad","number","length","date","Date","year","getFullYear","month","getMonth","day","getDate","option","from","to","NUMERICAL_URL_PARAMS","additionalParam","dispatch","useDispatch","useDeepCompareEffect","newParams","transformer","transformUrlParamsBeforeFetching","setUrlParams","combinedParams","property"],"sourceRoot":""}