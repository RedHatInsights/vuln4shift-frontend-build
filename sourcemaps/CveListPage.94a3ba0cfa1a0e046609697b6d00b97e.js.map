{"version":3,"file":"js/CveListPage.0a5c9b8c1dccf92092c2.js","mappings":"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","sources":["webpack:///./src/Components/PresentationalComponents/EmptyStates/NoMatchingCves.js","webpack:///./src/Components/SmartComponents/CveList/CveListTable.js","webpack:///./src/Components/SmartComponents/CveList/CveListPage.js","webpack:///./src/Components/SmartComponents/Filters/RadioFilter.js","webpack:///./src/Components/PresentationalComponents/RangeFilterComponent.js","webpack:///./src/Components/SmartComponents/Filters/RangeFilter.js","webpack:///./node_modules/dequal/dist/index.mjs","webpack:///./node_modules/use-deep-compare-effect/dist/use-deep-compare-effect.esm.js"],"sourcesContent":["import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  Bullseye,\n  EmptyStateHeader,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst NoMatchingCves = () => {\n  const CveDatabaseLink = (\n    <a\n      href=\"https://access.redhat.com/security/security-updates/#/cve\"\n      target=\"__blank\"\n      rel=\"noopener noreferrer\"\n      className=\"nowrap\"\n    >\n      Red Hat CVE Database <ExternalLinkAltIcon />\n    </a>\n  );\n\n  const ProdSecLink = (\n    <a\n      href=\"https://access.redhat.com/security/team/contact/\"\n      target=\"__blank\"\n      rel=\"noopener noreferrer\"\n      className=\"nowrap\"\n    >\n      Red Hat Product Security <ExternalLinkAltIcon />\n    </a>\n  );\n\n  return (\n    <Bullseye>\n      <EmptyState variant=\"lg\">\n        <EmptyStateHeader\n          titleText=\"No matching CVEs found\"\n          headingLevel=\"h5\"\n        />\n        <EmptyStateBody>\n          To continue, edit your filter settings and search again.\n          <br />\n          <br />\n          As of today, Insights Vulnerability shows CVEs with Errata. It is\n          possible the CVE you are searching for does not yet have an associated\n          Errata. Please check the {CveDatabaseLink} or if you would like more\n          information, contact {ProdSecLink}\n        </EmptyStateBody>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nexport default NoMatchingCves;\n","import React from 'react';\nimport {\n  CVE_LIST_ALLOWED_PARAMS,\n  CVE_LIST_DEFAULT_FILTERS,\n  CVE_LIST_TABLE_COLUMNS,\n  CVE_LIST_TABLE_MAPPER,\n  EXPOSED_CLUSTERS_OPTIONS,\n  PUBLISHED_OPTIONS,\n  SEVERITY_OPTIONS,\n  CVE_LIST_EXPORT_PREFIX,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport {\n  fetchCveListTable,\n  changeCveListTableParams,\n} from '../../../Store/Actions';\nimport NoMatchingCves from '../../PresentationalComponents/EmptyStates/NoMatchingCves';\nimport { useUrlBoundParams, useExport } from '../../../Helpers/hooks';\nimport useTextFilter from '../Filters/TextFilter';\nimport useRangeFilter from '../Filters/RangeFilter';\nimport {\n  getCvssScoreFromUrlParam,\n  setupFilters,\n} from '../../../Helpers/miscHelper';\nimport checkboxFilter from '../Filters/CheckboxFilter';\nimport radioFilter from '../Filters/RadioFilter';\nimport BaseTable from '../Generic/BaseTable';\nimport { fetchCves } from '../../../Helpers/apiHelper';\n\nconst CveListTable = () => {\n  const { cves, isLoading, meta, error } = useSelector(\n    ({ CveListStore }) => CveListStore\n  );\n\n  const apply = useUrlBoundParams({\n    allowedParams: CVE_LIST_ALLOWED_PARAMS,\n    initialParams: meta,\n    fetchAction: fetchCveListTable,\n    changeParamsAction: changeCveListTableParams,\n  });\n\n  const { search, cvss_score, severity, published, affected_clusters } = meta;\n\n  const [cvss_score_min, cvss_score_max] = getCvssScoreFromUrlParam(cvss_score);\n\n  const onExport = useExport({\n    filenamePrefix: CVE_LIST_EXPORT_PREFIX,\n    fetchAction: fetchCves,\n    allowedParams: CVE_LIST_ALLOWED_PARAMS,\n  });\n\n  const filters = [\n    useTextFilter({\n      urlParam: 'search',\n      label: 'CVE',\n      placeholder: 'Search ID or description',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n    radioFilter({\n      urlParam: 'published',\n      label: 'Publish date',\n      value: published,\n      items: PUBLISHED_OPTIONS,\n      placeholder: 'Filter by publish date',\n      apply,\n      chipLabel: 'Publish date',\n    }),\n    checkboxFilter({\n      urlParam: 'severity',\n      label: 'Severity',\n      value: severity,\n      items: SEVERITY_OPTIONS,\n      placeholder: 'Filter by severity',\n      apply,\n      chipLabel: 'Severity',\n    }),\n    useRangeFilter({\n      urlParam: 'cvss_score',\n      label: 'CVSS score',\n      minMaxLabels: {\n        min: 'Min CVSS',\n        max: 'Max CVSS',\n      },\n      range: {\n        min: 0,\n        max: 10,\n      },\n      value: {\n        min: cvss_score_min,\n        max: cvss_score_max,\n      },\n      placeholder: 'Filter by CVSS score range',\n      apply,\n      chipLabel: 'CVSS base score',\n    }),\n    checkboxFilter({\n      urlParam: 'affected_clusters',\n      label: 'Exposed clusters',\n      value: affected_clusters,\n      items: EXPOSED_CLUSTERS_OPTIONS,\n      placeholder: 'Filter by exposed clusters',\n      apply,\n      chipLabel: 'Exposed clusters',\n    }),\n  ];\n\n  const [filterConfig, activeFiltersConfig] = setupFilters(\n    filters,\n    meta,\n    CVE_LIST_DEFAULT_FILTERS,\n    apply\n  );\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      isExpandable\n      rows={cves.map((row) => CVE_LIST_TABLE_MAPPER(row))}\n      columns={CVE_LIST_TABLE_COLUMNS}\n      filterConfig={filterConfig}\n      activeFiltersConfig={activeFiltersConfig}\n      meta={meta}\n      error={error}\n      emptyState={<NoMatchingCves />}\n      apply={apply}\n      onExport={(format) => onExport(format, meta)}\n    />\n  );\n};\n\nexport default CveListTable;\n","import React, { Fragment, useEffect } from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n  Icon,\n  Popover,\n} from '@patternfly/react-core';\nimport {\n  OutlinedQuestionCircleIcon,\n  ExternalLinkAltIcon,\n} from '@patternfly/react-icons';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport CveListTable from './CveListTable';\nimport { useLocalStorage } from '../../../Helpers/hooks';\nimport { HEADER_ALERT_DISMISSED_KEY } from '../../../Helpers/constants';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst CveListPage = () => {\n  const chrome = useChrome();\n\n  const PRODUCT_DOC =\n    'https://access.redhat.com/documentation/en-us/openshift_cluster_manager/2022';\n\n  const [wasHeaderAlertDismissed, setHeaderAlertDismissed] = useLocalStorage(\n    HEADER_ALERT_DISMISSED_KEY\n  );\n\n  useEffect(() => {\n    chrome.updateDocumentTitle(\n      'CVEs - Vulnerability Dashboard | Red Hat Insights | console.redhat.com'\n    );\n  }, []);\n\n  const HeaderTitle = (\n    <Popover\n      hasAutoWidth\n      maxWidth=\"380px\"\n      position=\"right\"\n      enableFlip\n      bodyContent={\n        <Fragment>\n          The Vulnerability service identifies CVEs with errata that may affect\n          your Insights-connected OpenShift clusters. Vulnerability information\n          applies for OCP4.8+ version only.\n        </Fragment>\n      }\n      footerContent={\n        <a href={PRODUCT_DOC} target=\"__blank\" rel=\"noopener noreferrer\">\n          Learn more <ExternalLinkAltIcon />\n        </a>\n      }\n    >\n      <span>\n        CVEs\n        <Icon\n          className=\"pf-u-ml-sm pointer cves-header-questionmark\"\n          style={{\n            verticalAlign: '0',\n            color: 'var(--pf-global--secondary-color--100)',\n          }}\n        >\n          <OutlinedQuestionCircleIcon />\n        </Icon>\n      </span>\n    </Popover>\n  );\n\n  return (\n    <Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={HeaderTitle} className=\"pf-u-mb-sm\" />\n        {!wasHeaderAlertDismissed && (\n          <Alert\n            variant={AlertVariant.info}\n            isInline\n            className=\"pf-u-mt-md\"\n            title=\"Vulnerability information applies to OCP4.8+ version only\"\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => setHeaderAlertDismissed(true)}\n              />\n            }\n          />\n        )}\n      </PageHeader>\n      <Main>\n        <Alert\n          variant={AlertVariant.info}\n          isInline\n          title=\"Check out Red Hat's fully managed Kubernetes-native security platform\"\n        >\n          Performs in-depth vulnerability analysis and protects containerized\n          applications across the full application life cycle.\n          <br />\n          <br />\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`${\n              chrome.isBeta() ? '/preview' : ''\n            }/application-services/acs/overview`}\n          >\n            Visit Red Hat Advanced Cluster Security Cloud Service (RHACSCS)\n            <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n          </a>\n        </Alert>\n        <CveListTable />\n      </Main>\n    </Fragment>\n  );\n};\n\nexport default CveListPage;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst radioFilter = ({\n  urlParam,\n  label,\n  value,\n  placeholder,\n  items,\n  apply,\n  chipLabel,\n}) => {\n  const onValueChanged = (value) => {\n    apply({\n      [urlParam]: value,\n      offset: 0,\n    });\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.radio,\n    urlParam,\n    key: urlParam,\n    filterValues: {\n      onChange: (event, value) => {\n        onValueChanged(value);\n      },\n      items,\n      value: value || items[0].value,\n      placeholder,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: () => {\n      onValueChanged(undefined);\n    },\n    key: urlParam,\n    category: chipLabel,\n    chips: items\n      .filter((item) => item.value === value)\n      ?.map((item) => ({ name: item.label, value: item.value })),\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default radioFilter;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Split, SplitItem, TextInput } from '@patternfly/react-core';\nimport { Select } from '@patternfly/react-core/deprecated';\n\nconst RangeFilterComponent = ({\n  setValues,\n  range,\n  minMaxLabels,\n  selectProps,\n  inputValue,\n  setInputValue,\n}) => {\n  const [isOpen, setOpen] = useState(false);\n\n  const areValuesValid = (currentValues, inputName) => {\n    const numberValue = {\n      min: Number(currentValues.min),\n      max: Number(currentValues.max),\n    };\n\n    return (\n      currentValues[inputName] != '' &&\n      numberValue[inputName] <= range.max &&\n      numberValue[inputName] >= range.min &&\n      numberValue.min <= numberValue.max\n    );\n  };\n\n  const handleInputChange = (newValue, inputName) => {\n    const newRange = { ...inputValue, [inputName]: newValue };\n\n    if (areValuesValid(newRange, 'min') && areValuesValid(newRange, 'max')) {\n      setValues({\n        min: Number(newRange.min),\n        max: Number(newRange.max),\n      });\n    }\n\n    setInputValue(newRange);\n  };\n\n  const filterContent = (\n    <Split className=\"pf-u-m-md\">\n      <SplitItem>\n        <span style={{ fontSize: 'var(--pf-global--FontSize--sm)' }}>\n          {minMaxLabels.min}\n        </span>\n        <br />\n        <TextInput\n          type=\"number\"\n          onChange={(_event, value) => handleInputChange(value, 'min')}\n          validated={areValuesValid(inputValue, 'min') ? 'default' : 'error'}\n          className=\"range-filter-input\"\n          id=\"range-filter-input-min\"\n          value={inputValue.min}\n        />\n      </SplitItem>\n      <SplitItem>\n        <br />\n        <span className=\"pf-u-m-sm\">-</span>\n      </SplitItem>\n      <SplitItem>\n        <span style={{ fontSize: 'var(--pf-global--FontSize--sm)' }}>\n          {minMaxLabels.max}\n        </span>\n        <br />\n        <TextInput\n          type=\"number\"\n          onChange={(_event, value) => handleInputChange(value, 'max')}\n          validated={areValuesValid(inputValue, 'max') ? 'default' : 'error'}\n          className=\"range-filter-input\"\n          id=\"range-filter-input-max\"\n          value={inputValue.max}\n        />\n      </SplitItem>\n    </Split>\n  );\n\n  return (\n    <Select\n      variant=\"panel\"\n      aria-label=\"Select Input\"\n      customContent={filterContent}\n      onToggle={() => setOpen(!isOpen)}\n      isOpen={isOpen}\n      width=\"auto\"\n      {...selectProps}\n    />\n  );\n};\n\nRangeFilterComponent.propTypes = {\n  setValues: propTypes.func,\n  range: propTypes.shape({ min: propTypes.number, max: propTypes.number }),\n  minMaxLabels: propTypes.shape({ min: propTypes.node, max: propTypes.node }),\n  selectProps: propTypes.object,\n  inputValue: propTypes.shape({ min: propTypes.string, max: propTypes.string }),\n  setInputValue: propTypes.func,\n};\n\nexport default RangeFilterComponent;\n","import React, { useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport RangeFilterComponent from '../../PresentationalComponents/RangeFilterComponent';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nconst useRangeFilter = ({\n  urlParam,\n  label,\n  minMaxLabels,\n  range,\n  value,\n  placeholder,\n  apply,\n  chipLabel,\n  chipDecimalPlaces = 1,\n}) => {\n  const [handleSearch] = useState(() =>\n    debounce((newValue) => {\n      if (\n        newValue.min >= range.min &&\n        newValue.max <= range.max &&\n        newValue.min <= newValue.max\n      ) {\n        apply({\n          [urlParam]: `${newValue.min},${newValue.max}`,\n          offset: 0,\n        });\n      }\n    }, 600)\n  );\n\n  const [inputValue, setInputValue] = useState();\n\n  useDeepCompareEffect(() => {\n    setInputValue({\n      min: (value ?? range).min.toString(),\n      max: (value ?? range).max.toString(),\n    });\n  }, [value]);\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.custom,\n    key: urlParam,\n    urlParam,\n    filterValues: {\n      children: (\n        <RangeFilterComponent\n          setValues={handleSearch}\n          range={range}\n          className=\"pf-u-mb-0\"\n          selectProps={{ placeholderText: placeholder }}\n          minMaxLabels={minMaxLabels}\n          inputValue={inputValue}\n          setInputValue={setInputValue}\n        />\n      ),\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: value.min !== range.min || value.max !== range.max,\n    onDelete: () => {\n      apply({\n        [urlParam]: undefined,\n        offset: 0,\n      });\n    },\n    key: urlParam,\n    category: chipLabel,\n    chips: [\n      {\n        name:\n          value.min.toFixed(chipDecimalPlaces) +\n          ' - ' +\n          value.max.toFixed(chipDecimalPlaces),\n      },\n    ],\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default useRangeFilter;\n","var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n","import * as React from 'react';\nimport { dequal } from 'dequal';\n\nfunction checkDeps(deps) {\n  if (!deps || !deps.length) {\n    throw new Error('useDeepCompareEffect should not be used with no dependencies. Use React.useEffect instead.');\n  }\n\n  if (deps.every(isPrimitive)) {\n    throw new Error('useDeepCompareEffect should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n  }\n}\n\nfunction isPrimitive(val) {\n  return val == null || /^[sbn]/.test(typeof val);\n}\n/**\n * @param value the value to be memoized (usually a dependency list)\n * @returns a momoized version of the value as long as it remains deeply equal\n */\n\n\nfunction useDeepCompareMemoize(value) {\n  var ref = React.useRef(value);\n  var signalRef = React.useRef(0);\n\n  if (!dequal(value, ref.current)) {\n    ref.current = value;\n    signalRef.current += 1;\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  return React.useMemo(function () {\n    return ref.current;\n  }, [signalRef.current]);\n}\n\nfunction useDeepCompareEffect(callback, dependencies) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkDeps(dependencies);\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  return React.useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nfunction useDeepCompareEffectNoCheck(callback, dependencies) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nexport { useDeepCompareEffect as default, useDeepCompareEffectNoCheck, useDeepCompareMemoize };\n"],"names":["CveDatabaseLink","href","target","rel","className","ProdSecLink","Bullseye","EmptyState","variant","EmptyStateHeader","titleText","headingLevel","EmptyStateBody","cves","isLoading","meta","error","CveListStore","apply","allowedParams","initialParams","fetchAction","changeParamsAction","search","cvss_score","severity","published","affected_clusters","cvss_score_min","cvss_score_max","onExport","filenamePrefix","filters","urlParam","label","placeholder","value","chipLabel","items","minMaxLabels","min","max","range","filterConfig","activeFiltersConfig","BaseTable","isExpandable","rows","map","row","columns","emptyState","NoMatchingCves","format","chrome","useChrome","wasHeaderAlertDismissed","setHeaderAlertDismissed","useEffect","updateDocumentTitle","HeaderTitle","Popover","hasAutoWidth","maxWidth","position","enableFlip","bodyContent","Fragment","footerContent","Icon","style","verticalAlign","color","PageHeader","PageHeaderTitle","title","Alert","AlertVariant","info","isInline","actionClose","AlertActionCloseButton","onClose","Main","isBeta","onValueChanged","offset","type","radio","key","filterValues","onChange","event","isShown","onDelete","undefined","category","chips","filter","item","name","RangeFilterComponent","setValues","selectProps","inputValue","setInputValue","isOpen","setOpen","useState","areValuesValid","currentValues","inputName","numberValue","Number","handleInputChange","newValue","newRange","filterContent","Split","SplitItem","fontSize","TextInput","_event","validated","id","Select","customContent","onToggle","width","propTypes","chipDecimalPlaces","handleSearch","toString","custom","children","placeholderText","toFixed","has","Object","prototype","hasOwnProperty","find","iter","tar","keys","dequal","foo","bar","ctor","len","tmp","constructor","Date","getTime","RegExp","Array","length","Set","size","Map","get","ArrayBuffer","Uint8Array","DataView","byteLength","getInt8","isView","call","useDeepCompareEffect","callback","dependencies","ref","signalRef","current"],"sourceRoot":""}