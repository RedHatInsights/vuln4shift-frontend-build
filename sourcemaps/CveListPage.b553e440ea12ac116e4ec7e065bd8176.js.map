{"version":3,"file":"js/CveListPage.1651589361123.101599e1367e0f7bb760.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/createIcon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon.js","webpack:///./src/Components/SmartComponents/CveListPage.js","webpack:///./src/Components/SmartComponents/BaseTable.js","webpack:///./src/Temp/mockAPI.js","webpack:///./src/Components/SmartComponents/BaseToolbar.js","webpack:///./src/Components/PresentationalComponents/BottomPagination.js","webpack:///./src/Components/SmartComponents/CveTable.js","webpack:///./src/Store/Actions.js","webpack:///./src/Helpers/constants.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createIcon = exports.getSize = exports.IconSize = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nvar IconSize;\n(function (IconSize) {\n    IconSize[\"sm\"] = \"sm\";\n    IconSize[\"md\"] = \"md\";\n    IconSize[\"lg\"] = \"lg\";\n    IconSize[\"xl\"] = \"xl\";\n})(IconSize = exports.IconSize || (exports.IconSize = {}));\nconst getSize = (size) => {\n    switch (size) {\n        case IconSize.sm:\n            return '1em';\n        case IconSize.md:\n            return '1.5em';\n        case IconSize.lg:\n            return '2em';\n        case IconSize.xl:\n            return '3em';\n        default:\n            return '1em';\n    }\n};\nexports.getSize = getSize;\nlet currentId = 0;\n/**\n * Factory to create Icon class components for consumers\n */\nfunction createIcon({ name, xOffset = 0, yOffset = 0, width, height, svgPath }) {\n    var _a;\n    return _a = class SVGIcon extends React.Component {\n            constructor() {\n                super(...arguments);\n                this.id = `icon-title-${currentId++}`;\n            }\n            render() {\n                const _a = this.props, { size, color, title, noVerticalAlign } = _a, props = tslib_1.__rest(_a, [\"size\", \"color\", \"title\", \"noVerticalAlign\"]);\n                const hasTitle = Boolean(title);\n                const heightWidth = exports.getSize(size);\n                const baseAlign = -0.125 * Number.parseFloat(heightWidth);\n                const style = noVerticalAlign ? null : { verticalAlign: `${baseAlign}em` };\n                const viewBox = [xOffset, yOffset, width, height].join(' ');\n                return (React.createElement(\"svg\", Object.assign({ style: style, fill: color, height: heightWidth, width: heightWidth, viewBox: viewBox, \"aria-labelledby\": hasTitle ? this.id : null, \"aria-hidden\": hasTitle ? null : true, role: \"img\" }, props),\n                    hasTitle && React.createElement(\"title\", { id: this.id }, title),\n                    React.createElement(\"path\", { d: svgPath })));\n            }\n        },\n        _a.displayName = name,\n        _a.defaultProps = {\n            color: 'currentColor',\n            size: IconSize.sm,\n            noVerticalAlign: false\n        },\n        _a;\n}\nexports.createIcon = createIcon;\n//# sourceMappingURL=createIcon.js.map","\"use strict\"\nexports.__esModule = true;\nexports.ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExternalLinkAltIcon = require('../createIcon').createIcon(exports.ExternalLinkAltIconConfig);\nexports[\"default\"] = exports.ExternalLinkAltIcon;","\"use strict\"\nexports.__esModule = true;\nexports.OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.OutlinedQuestionCircleIcon = require('../createIcon').createIcon(exports.OutlinedQuestionCircleIconConfig);\nexports[\"default\"] = exports.OutlinedQuestionCircleIcon;","import React, { Fragment } from 'react';\nimport { Alert, AlertVariant, Popover } from '@patternfly/react-core';\nimport {\n  OutlinedQuestionCircleIcon,\n  ExternalLinkAltIcon,\n} from '@patternfly/react-icons';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport CveTable from './CveTable';\n\nconst CveListPage = () => {\n  // TODO: Add correct link\n  const PRODUCT_DOC = 'https://access.redhat.com/';\n\n  const HeaderTitle = (\n    <Popover\n      enableFlip\n      position=\"right\"\n      bodyContent={\n        <Fragment>\n          The Vulnerability service identifies CVEs with errata that may affect\n          your Insights-connected OpenShift clusters.\n          <br />\n          <br />\n          Vulnerability information applies for OCP4.8+ version only.\n        </Fragment>\n      }\n      footerContent={\n        <a href={PRODUCT_DOC} target=\"__blank\" rel=\"noopener noreferrer\">\n          Learn more <ExternalLinkAltIcon />\n        </a>\n      }\n    >\n      <span>\n        CVEs\n        <OutlinedQuestionCircleIcon\n          color=\"var(--pf-global--secondary-color--100)\"\n          className=\"pf-u-ml-sm pointer cves-header-questionmark\"\n          style={{ verticalAlign: '0' }}\n        />\n      </span>\n    </Popover>\n  );\n\n  // TODO: The alert should be dismissable (actionClose prop)\n  return (\n    <Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={HeaderTitle} className=\"pf-u-mb-sm\" />\n        <Alert\n          variant={AlertVariant.info}\n          isInline\n          className=\"pf-u-mt-md\"\n          title=\"Vulnerability information applies to OCP4.8+ version only\"\n        />\n      </PageHeader>\n      <Main>\n        <CveTable />\n      </Main>\n    </Fragment>\n  );\n};\n\nexport default CveListPage;\n","import React, { Fragment, useState } from 'react';\nimport propTypes from 'prop-types';\nimport {\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n  ExpandableRowContent,\n} from '@patternfly/react-table';\n\nconst BaseTable = ({ columns, rows }) => {\n  const [expandedRows, setExpandedRows] = useState([]);\n\n  const setRowExpanded = (row, isExpanding) =>\n    setExpandedRows((prevExpanded) => {\n      const otherExpandedRows = prevExpanded.filter((r) => r !== row);\n      return isExpanding ? [...otherExpandedRows, row] : otherExpandedRows;\n    });\n\n  const isRowExpanded = (row) => expandedRows.includes(row);\n\n  return (\n    <TableComposable variant=\"compact\">\n      <Thead>\n        <Tr>\n          <Th /> {/* expandible caret column */}\n          {columns.map((column) => (\n            <Th key={column.title} sort>\n              {column.title}\n            </Th>\n          ))}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {rows.map((row, rowIndex) => (\n          <Fragment key={rowIndex}>\n            <Tr>\n              <Td\n                expand={{\n                  rowIndex,\n                  isExpanded: isRowExpanded(row.key),\n                  onToggle: () =>\n                    setRowExpanded(row.key, !isRowExpanded(row.key)),\n                }}\n              />\n              {row.cells.map((cell, cellIndex) => (\n                <Td key={cellIndex}>{cell}</Td>\n              ))}\n            </Tr>\n            <Tr isExpanded={isRowExpanded(row.key)}>\n              <Td colspan={100}>\n                <ExpandableRowContent>\n                  {row.expandableContent}\n                </ExpandableRowContent>\n              </Td>\n            </Tr>\n          </Fragment>\n        ))}\n      </Tbody>\n    </TableComposable>\n  );\n};\n\nBaseTable.propTypes = {\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node.isRequired,\n      sortParam: propTypes.string,\n    })\n  ).isRequired,\n  rows: propTypes.arrayOf(\n    propTypes.shape({\n      key: propTypes.string.isRequired,\n      cells: propTypes.arrayOf(propTypes.node).isRequired,\n      expandableContent: propTypes.node,\n    })\n  ).isRequired,\n};\n\nexport default BaseTable;\n","// This is a temporary file with JSON API mocks.\n// Delete this file along with mockEndpoints/ folder\n// API endpoints have been implemented properly.\n\nimport CVES from './mockEndpoints/cves.json';\n\nexport const fetchCves = () => {\n  return CVES;\n};\n","import { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport React from 'react';\n\nconst BaseToolbar = () => {\n  return (\n    <PrimaryToolbar\n      pagination={{\n        isDisabled: false,\n        itemCount: 20,\n        page: 1,\n        perPage: 20,\n        ouiaId: 'pagination-top',\n      }}\n    />\n  );\n};\n\nexport default BaseToolbar;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\n\nconst BottomPagination = ({ page, perPage, itemCount }) => {\n  return (\n    <Pagination\n      page={page}\n      itemCount={itemCount}\n      perPage={perPage}\n      variant={PaginationVariant.bottom}\n      ouiaId=\"pagination-bottom\"\n      isDisabled={itemCount === 0}\n    />\n  );\n};\n\nBottomPagination.propTypes = {\n  page: propTypes.number,\n  perPage: propTypes.number,\n  itemCount: propTypes.number,\n};\n\nexport default BottomPagination;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport SkeletonTable from '@redhat-cloud-services/frontend-components/SkeletonTable/SkeletonTable';\nimport BaseTable from './BaseTable';\nimport {\n  CVE_LIST_TABLE_COLUMNS,\n  CVE_LIST_TABLE_MAPPER,\n} from '../../Helpers/constants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCveListTable } from '../../Store/Actions';\nimport BaseToolbar from './BaseToolbar';\nimport BottomPagination from '../PresentationalComponents/BottomPagination';\n\nconst CveTable = () => {\n  const dispatch = useDispatch();\n  const cves = useSelector(({ CveListStore }) => CveListStore.cves);\n\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // API response delay simulation\n    setTimeout(() => setLoading(false), 1000);\n\n    dispatch(fetchCveListTable());\n  }, []);\n\n  return isLoading ? (\n    <SkeletonTable colSize={CVE_LIST_TABLE_COLUMNS.length} rowSize={20} />\n  ) : (\n    <Fragment>\n      <BaseToolbar />\n      <BaseTable\n        columns={CVE_LIST_TABLE_COLUMNS}\n        rows={cves.map((row) => CVE_LIST_TABLE_MAPPER(row))}\n      />\n      <BottomPagination page={1} perPage={20} itemCount={20} />\n    </Fragment>\n  );\n};\n\nexport default CveTable;\n","import * as ActionTypes from '../Store/ActionTypes';\nimport { fetchCves } from '../Temp/mockAPI';\n\nexport const fetchCveListTable = (params) => ({\n  type: ActionTypes.FETCH_CVE_LIST_TABLE,\n  meta: {\n    timestamp: new Date(),\n  },\n  payload: () => fetchCves(params),\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { processDate } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport parseCvssScore from '@redhat-cloud-services/frontend-components-utilities/parseCvssScore';\nimport { Shield } from '@redhat-cloud-services/frontend-components/Shield';\n\nexport const SEVERITY_OPTIONS = {\n  critical: {\n    label: 'Critical',\n    iconColor: 'var(--pf-global--danger-color--100)',\n    textColor: 'var(--pf-global--danger-color--100)',\n    isInShieldSet: true,\n  },\n  important: {\n    label: 'Important',\n    iconColor: 'var(--pf-global--palette--orange-300)',\n    textColor: 'var(--pf-global--palette--orange-400)',\n    isInShieldSet: true,\n  },\n  moderate: {\n    label: 'Moderate',\n    iconColor: 'var(--pf-global--warning-color--100)',\n    textColor: 'var(--pf-global--warning-color--200)',\n    isInShieldSet: true,\n  },\n  low: {\n    label: 'Low',\n    iconColor: 'var(--pf-global--Color--200)',\n    textColor: 'var(--pf-global--default-color--300)',\n    isInShieldSet: true,\n  },\n  unknown: {\n    label: 'Unknown',\n  },\n};\n\nexport const CVE_LIST_TABLE_COLUMNS = [\n  {\n    title: 'CVE ID',\n  },\n  {\n    title: 'Publish date',\n  },\n  {\n    title: 'Severity',\n  },\n  {\n    title: 'CVSS base score',\n  },\n  {\n    title: 'Clusters exposed',\n  },\n  {\n    title: 'Images exposed',\n  },\n];\n\nexport const CVE_LIST_TABLE_MAPPER = (row) => ({\n  key: row.synopsis,\n  cells: [\n    <Link to={'/cves/' + row.synopsis} key={row.synopsis}>\n      {row.synopsis}\n    </Link>,\n    processDate(row.publish_date),\n    <Shield hasLabel impact={row.severity} key={row.synopsis} />,\n    parseCvssScore(row.cvss2_score, row.cvss3_score, true),\n    <Link to={'/cves/' + row.synopsis} key={row.synopsis}>\n      {row.clusters_exposed}\n    </Link>,\n    row.images_exposed,\n  ],\n  expandableContent: row.description,\n});\n"],"names":["Object","defineProperty","exports","value","createIcon","getSize","IconSize","tslib_1","React","__importStar","size","sm","md","lg","xl","currentId","name","xOffset","yOffset","width","height","svgPath","_a","Component","constructor","super","arguments","this","id","render","props","color","title","noVerticalAlign","__rest","hasTitle","Boolean","heightWidth","baseAlign","Number","parseFloat","style","verticalAlign","viewBox","join","createElement","assign","fill","role","d","displayName","defaultProps","HeaderTitle","Popover","enableFlip","position","bodyContent","Fragment","footerContent","href","target","rel","className","Alert","variant","AlertVariant","isInline","BaseTable","columns","rows","useState","expandedRows","setExpandedRows","isRowExpanded","row","includes","TableComposable","Thead","Tr","Th","map","column","key","sort","Tbody","rowIndex","Td","expand","isExpanded","onToggle","isExpanding","prevExpanded","otherExpandedRows","filter","r","setRowExpanded","cells","cell","cellIndex","colspan","ExpandableRowContent","expandableContent","propTypes","sortParam","isRequired","PrimaryToolbar","pagination","isDisabled","itemCount","page","perPage","ouiaId","BottomPagination","Pagination","PaginationVariant","dispatch","useDispatch","cves","useSelector","CveListStore","isLoading","setLoading","useEffect","setTimeout","type","ActionTypes","meta","timestamp","Date","payload","CVES","colSize","CVE_LIST_TABLE_COLUMNS","rowSize","CVE_LIST_TABLE_MAPPER","SEVERITY_OPTIONS","critical","label","iconColor","textColor","isInShieldSet","important","moderate","low","unknown","synopsis","Link","to","processDate","publish_date","hasLabel","impact","severity","parseCvssScore","cvss2_score","cvss3_score","clusters_exposed","images_exposed","description"],"sourceRoot":""}