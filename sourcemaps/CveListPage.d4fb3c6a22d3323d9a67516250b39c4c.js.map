{"version":3,"file":"js/CveListPage.1658782722015.8fed4eb1907846ab28b9.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/check-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon.js","webpack:///./src/Components/PresentationalComponents/EmptyStates/NoCves.js","webpack:///./src/Components/SmartComponents/Filters/TernaryFilter.js","webpack:///./src/Components/SmartComponents/CveList/CveListTable.js","webpack:///./src/Components/SmartComponents/CveList/CveListPage.js","webpack:///./src/Components/SmartComponents/Filters/CheckboxFilter.js","webpack:///./src/Components/SmartComponents/Filters/RadioFilter.js","webpack:///./src/Components/PresentationalComponents/RangeFilterComponent.js","webpack:///./src/Components/SmartComponents/Filters/RangeFilter.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.CheckCircleIconConfig = {\n  name: 'CheckCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CheckCircleIcon = require('../createIcon').createIcon(exports.CheckCircleIconConfig);\nexports[\"default\"] = exports.CheckCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExternalLinkAltIcon = require('../createIcon').createIcon(exports.ExternalLinkAltIconConfig);\nexports[\"default\"] = exports.ExternalLinkAltIcon;","\"use strict\"\nexports.__esModule = true;\nexports.OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.OutlinedQuestionCircleIcon = require('../createIcon').createIcon(exports.OutlinedQuestionCircleIconConfig);\nexports[\"default\"] = exports.OutlinedQuestionCircleIcon;","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Bullseye,\n  Title,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\n\nconst NoCves = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.large}>\n      <EmptyStateIcon icon={CheckCircleIcon} size=\"sm\" />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        No CVEs\n      </Title>\n      <EmptyStateBody>\n        Your clusters are not affected by any CVEs.\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoCves;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst ternaryFilter = ({\n  urlParam,\n  label,\n  value,\n  placeholder,\n  items,\n  apply,\n}) => {\n  const onValuesChanged = (values) => {\n    apply({\n      [urlParam]: items.map((item) => values.includes(item.value)).join(','),\n      offset: 0,\n    });\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.checkbox,\n    urlParam,\n    key: urlParam,\n    filterValues: {\n      onChange: (event, value) => {\n        onValuesChanged(value);\n      },\n      items,\n      value: value\n        ? items\n            .map((item) => item.value)\n            .filter((_, index) => value.split(',')[index] === 'true')\n        : [],\n      placeholder,\n    },\n  };\n\n  return { filterConfig };\n};\n\nexport default ternaryFilter;\n","import React from 'react';\nimport {\n  CVE_LIST_ALLOWED_PARAMS,\n  CVE_LIST_TABLE_COLUMNS,\n  CVE_LIST_TABLE_MAPPER,\n  EXPOSED_CLUSTERS_OPTIONS,\n  PUBLISHED_OPTIONS,\n  SEVERITY_OPTIONS,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport {\n  fetchCveListTable,\n  changeCveListTableParams,\n} from '../../../Store/Actions';\nimport NoCves from '../../PresentationalComponents/EmptyStates/NoCves';\nimport { useUrlBoundParams } from '../../../Helpers/hooks';\nimport useTextFilter from '../Filters/TextFilter';\nimport useRangeFilter from '../Filters/RangeFilter';\nimport { getCvssScoreFromUrlParam } from '../../../Helpers/miscHelper';\nimport checkboxFilter from '../Filters/CheckboxFilter';\nimport radioFilter from '../Filters/RadioFilter';\nimport ternaryFilter from '../Filters/TernaryFilter';\nimport BaseTable from '../Generic/BaseTable';\n\nconst CveListTable = () => {\n  const { cves, isLoading, meta } = useSelector(\n    ({ CveListStore }) => CveListStore\n  );\n\n  const apply = useUrlBoundParams({\n    allowedParams: CVE_LIST_ALLOWED_PARAMS,\n    initialParams: meta,\n    fetchAction: fetchCveListTable,\n    changeParamsAction: changeCveListTableParams,\n  });\n\n  const { search, cvss_score, severity, published, affected_clusters } = meta;\n\n  const [cvss_score_min, cvss_score_max] = getCvssScoreFromUrlParam(cvss_score);\n\n  const filters = [\n    useTextFilter({\n      urlParam: 'search',\n      label: 'CVE',\n      placeholder: 'Search ID or description',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n    radioFilter({\n      urlParam: 'published',\n      label: 'Publish date',\n      value: published,\n      items: PUBLISHED_OPTIONS,\n      placeholder: 'Filter by publish date',\n      apply,\n    }),\n    checkboxFilter({\n      urlParam: 'severity',\n      label: 'Severity',\n      value: severity,\n      items: SEVERITY_OPTIONS,\n      placeholder: 'Filter by severity',\n      apply,\n      chipLabel: 'Severity',\n    }),\n    useRangeFilter({\n      urlParam: 'cvss_score',\n      label: 'CVSS score',\n      minMaxLabels: {\n        min: 'Min CVSS',\n        max: 'Max CVSS',\n      },\n      range: {\n        min: 0,\n        max: 10,\n      },\n      value: {\n        min: cvss_score_min,\n        max: cvss_score_max,\n      },\n      placeholder: 'Filter by CVSS score range',\n      apply,\n    }),\n    ternaryFilter({\n      urlParam: 'affected_clusters',\n      label: 'Exposed clusters',\n      value: affected_clusters,\n      items: EXPOSED_CLUSTERS_OPTIONS,\n      placeholder: 'Filter by exposed clusters',\n      apply,\n    }),\n  ];\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      isExpandable\n      rows={cves.map((row) => CVE_LIST_TABLE_MAPPER(row))}\n      columns={CVE_LIST_TABLE_COLUMNS}\n      filters={filters}\n      meta={meta}\n      emptyState={<NoCves />}\n      apply={apply}\n    />\n  );\n};\n\nexport default CveListTable;\n","import React, { Fragment } from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n  Popover,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport {\n  OutlinedQuestionCircleIcon,\n  ExternalLinkAltIcon,\n} from '@patternfly/react-icons';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport CveListTable from './CveListTable';\nimport { useLocalStorage } from '../../../Helpers/hooks';\nimport { HEADER_ALERT_DISMISSED_KEY } from '../../../Helpers/constants';\n\nconst CveListPage = () => {\n  // TODO: Add correct link\n  const PRODUCT_DOC = 'https://access.redhat.com/';\n\n  const [wasHeaderAlertDismissed, setHeaderAlertDismissed] = useLocalStorage(\n    HEADER_ALERT_DISMISSED_KEY\n  );\n\n  const HeaderTitle = (\n    <Popover\n      className=\"cve-list-page-header-popover\"\n      position=\"right\"\n      flipBehavior={[]}\n      bodyContent={\n        <Fragment>\n          The Vulnerability service identifies CVEs with errata that may affect\n          your Insights-connected OpenShift clusters. Vulnerability information\n          applies for OCP4.8+ version only.\n          <br />\n          <br />\n          To access comprehensive Kubernetes security solution, go to&nbsp;\n          <a>Red Hat Advanced Cluster Security for Kubernetes</a>.\n        </Fragment>\n      }\n      footerContent={\n        <Split hasGutter>\n          <SplitItem>\n            <a href={PRODUCT_DOC} target=\"__blank\" rel=\"noopener noreferrer\">\n              Learn more <ExternalLinkAltIcon />\n            </a>\n          </SplitItem>\n          <SplitItem>\n            <a href={PRODUCT_DOC} target=\"__blank\" rel=\"noopener noreferrer\">\n              Learn about ACS <ExternalLinkAltIcon />\n            </a>\n          </SplitItem>\n        </Split>\n      }\n      appendTo={document.querySelector('.ocpVulnerability')}\n    >\n      <span>\n        CVEs\n        <OutlinedQuestionCircleIcon\n          color=\"var(--pf-global--secondary-color--100)\"\n          className=\"pf-u-ml-sm pointer cves-header-questionmark\"\n          style={{ verticalAlign: '0' }}\n        />\n      </span>\n    </Popover>\n  );\n\n  return (\n    <Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={HeaderTitle} className=\"pf-u-mb-sm\" />\n        {!wasHeaderAlertDismissed && (\n          <Alert\n            variant={AlertVariant.info}\n            isInline\n            className=\"pf-u-mt-md\"\n            title=\"Vulnerability information applies to OCP4.8+ version only\"\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => setHeaderAlertDismissed(true)}\n              />\n            }\n          />\n        )}\n      </PageHeader>\n      <Main>\n        <CveListTable />\n      </Main>\n    </Fragment>\n  );\n};\n\nexport default CveListPage;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst checkboxFilter = ({\n  urlParam,\n  label,\n  value,\n  placeholder,\n  items,\n  apply,\n  chipLabel,\n}) => {\n  const onValuesChanged = (values) => {\n    apply({\n      [urlParam]: values.join(','),\n      offset: 0,\n    });\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.checkbox,\n    urlParam,\n    key: urlParam,\n    filterValues: {\n      onChange: (event, value) => {\n        onValuesChanged(value);\n      },\n      items,\n      value: value ? value.split(',') : [],\n      placeholder,\n    },\n  };\n\n  const activeFiltersConfig = {\n    isShown: !!value,\n    onDelete: (chips) => {\n      const itemsToRemove = chips.map((chip) => chip.value);\n\n      const newValue = value\n        .split(',')\n        .filter((value) => !itemsToRemove.includes(value));\n\n      onValuesChanged(newValue);\n    },\n    key: urlParam,\n    category: chipLabel,\n    chips: items\n      .filter((item) => value?.split(',').includes(item.value))\n      .map((item) => ({ name: item.label, value: item.value })),\n  };\n\n  return { filterConfig, activeFiltersConfig };\n};\n\nexport default checkboxFilter;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst radioFilter = ({ urlParam, label, value, placeholder, items, apply }) => {\n  const onValueChanged = (value) => {\n    apply({\n      [urlParam]: value,\n      offset: 0,\n    });\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.radio,\n    urlParam,\n    key: urlParam,\n    filterValues: {\n      onChange: (event, value) => {\n        onValueChanged(value);\n      },\n      items,\n      value: value || items[0].value,\n      placeholder,\n    },\n  };\n\n  return { filterConfig };\n};\n\nexport default radioFilter;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Split, SplitItem, TextInput, Select } from '@patternfly/react-core';\n\nconst RangeFilterComponent = ({\n  defaultValues,\n  setValues,\n  range,\n  minMaxLabels,\n  selectProps,\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const [inputValue, setInputValue] = useState({\n    min: defaultValues.min.toString(),\n    max: defaultValues.max.toString(),\n  });\n\n  const areValuesValid = (currentValues, inputName) => {\n    const numberValue = {\n      min: Number(currentValues.min),\n      max: Number(currentValues.max),\n    };\n\n    return (\n      currentValues[inputName] != '' &&\n      numberValue[inputName] <= range.max &&\n      numberValue[inputName] >= range.min &&\n      numberValue.min <= numberValue.max\n    );\n  };\n\n  const handleInputChange = (newValue, inputName) => {\n    const newRange = { ...inputValue, [inputName]: newValue };\n\n    if (areValuesValid(newRange, 'min') && areValuesValid(newRange, 'max')) {\n      setValues({\n        min: Number(newRange.min),\n        max: Number(newRange.max),\n      });\n    }\n\n    setInputValue(newRange);\n  };\n\n  const filterContent = (\n    <Split className=\"pf-u-m-md\">\n      <SplitItem>\n        <span style={{ fontSize: 'var(--pf-global--FontSize--sm)' }}>\n          {minMaxLabels.min}\n        </span>\n        <br />\n        <TextInput\n          type=\"number\"\n          onChange={(value) => handleInputChange(value, 'min')}\n          validated={areValuesValid(inputValue, 'min') ? 'default' : 'error'}\n          className=\"range-filter-input\"\n          id=\"range-filter-input-min\"\n          value={inputValue.min}\n        />\n      </SplitItem>\n      <SplitItem>\n        <br />\n        <span className=\"pf-u-m-sm\">-</span>\n      </SplitItem>\n      <SplitItem>\n        <span style={{ fontSize: 'var(--pf-global--FontSize--sm)' }}>\n          {minMaxLabels.max}\n        </span>\n        <br />\n        <TextInput\n          type=\"number\"\n          onChange={(value) => handleInputChange(value, 'max')}\n          validated={areValuesValid(inputValue, 'max') ? 'default' : 'error'}\n          className=\"range-filter-input\"\n          id=\"range-filter-input-max\"\n          value={inputValue.max}\n        />\n      </SplitItem>\n    </Split>\n  );\n\n  return (\n    <Select\n      variant=\"panel\"\n      aria-label=\"Select Input\"\n      customContent={filterContent}\n      onToggle={() => setOpen(!isOpen)}\n      isOpen={isOpen}\n      width=\"auto\"\n      {...selectProps}\n    />\n  );\n};\n\nRangeFilterComponent.propTypes = {\n  defaultValues: propTypes.shape({\n    min: propTypes.number,\n    max: propTypes.number,\n  }),\n  setValues: propTypes.func,\n  range: propTypes.shape({ min: propTypes.number, max: propTypes.number }),\n  minMaxLabels: propTypes.shape({ min: propTypes.node, max: propTypes.node }),\n  selectProps: propTypes.object,\n};\n\nexport default RangeFilterComponent;\n","import React, { useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport RangeFilterComponent from '../../PresentationalComponents/RangeFilterComponent';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst useRangeFilter = ({\n  urlParam,\n  label,\n  minMaxLabels,\n  range,\n  value,\n  placeholder,\n  apply,\n}) => {\n  const [searchValue, setSearchValue] = useState();\n  const [handleSearch] = useState(() =>\n    debounce((newValue) => {\n      if (\n        newValue.min >= 0 &&\n        newValue.max <= 10 &&\n        newValue.min <= newValue.max\n      ) {\n        apply({\n          [urlParam]: `${newValue.min},${newValue.max}`,\n          offset: 0,\n        });\n      }\n    }, 600)\n  );\n\n  useEffect(() => {\n    setSearchValue({\n      min: isNaN(value.min) ? range.min : value.min,\n      max: isNaN(value.max) ? range.max : value.max,\n    });\n  }, [value.min, value.max]);\n\n  const setValue = (newValue) => {\n    setSearchValue(newValue);\n    handleSearch(newValue);\n  };\n\n  const filterConfig = {\n    label,\n    type: conditionalFilterType.custom,\n    key: urlParam,\n    urlParam,\n    filterValues: {\n      children: (\n        <RangeFilterComponent\n          defaultValues={searchValue}\n          setValues={setValue}\n          range={range}\n          className=\"pf-u-mb-0\"\n          selectProps={{ placeholderText: placeholder }}\n          minMaxLabels={minMaxLabels}\n        />\n      ),\n    },\n  };\n\n  return { filterConfig };\n};\n\nexport default useRangeFilter;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","Bullseye","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","CheckCircleIcon","size","Title","headingLevel","EmptyStateBody","urlParam","label","value","placeholder","items","apply","filterConfig","type","conditionalFilterType","key","filterValues","onChange","event","values","map","item","includes","join","filter","_","index","split","useSelector","CveListStore","cves","isLoading","meta","useUrlBoundParams","allowedParams","CVE_LIST_ALLOWED_PARAMS","initialParams","fetchAction","fetchCveListTable","changeParamsAction","changeCveListTableParams","search","cvss_score","severity","published","affected_clusters","getCvssScoreFromUrlParam","cvss_score_min","cvss_score_max","filters","useTextFilter","chipLabel","radioFilter","PUBLISHED_OPTIONS","checkboxFilter","SEVERITY_OPTIONS","useRangeFilter","minMaxLabels","min","max","range","ternaryFilter","EXPOSED_CLUSTERS_OPTIONS","BaseTable","isExpandable","rows","row","CVE_LIST_TABLE_MAPPER","columns","CVE_LIST_TABLE_COLUMNS","emptyState","NoCves","PRODUCT_DOC","useLocalStorage","HEADER_ALERT_DISMISSED_KEY","wasHeaderAlertDismissed","setHeaderAlertDismissed","HeaderTitle","Popover","className","position","flipBehavior","bodyContent","Fragment","footerContent","Split","hasGutter","SplitItem","href","target","rel","appendTo","document","querySelector","color","style","verticalAlign","PageHeader","PageHeaderTitle","title","Alert","AlertVariant","isInline","actionClose","AlertActionCloseButton","onClose","Main","onValuesChanged","activeFiltersConfig","isShown","onDelete","chips","itemsToRemove","chip","newValue","category","onValueChanged","RangeFilterComponent","defaultValues","setValues","selectProps","useState","isOpen","setOpen","toString","inputValue","setInputValue","areValuesValid","currentValues","inputName","numberValue","Number","handleInputChange","newRange","filterContent","fontSize","TextInput","validated","id","Select","customContent","onToggle","propTypes","searchValue","setSearchValue","debounce","handleSearch","useEffect","isNaN","children","placeholderText"],"sourceRoot":""}