{"version":3,"file":"js/CveListPage.1661856942072.9ec3c5f1b25dc663c7e4.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon.js","webpack:///./src/Components/SmartComponents/CveList/CveListTable.js","webpack:///./src/Components/SmartComponents/CveList/CveListPage.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.OutlinedQuestionCircleIcon = require('../createIcon').createIcon(exports.OutlinedQuestionCircleIconConfig);\nexports[\"default\"] = exports.OutlinedQuestionCircleIcon;","import React from 'react';\nimport {\n  CVE_LIST_ALLOWED_PARAMS,\n  CVE_LIST_DEFAULT_FILTERS,\n  CVE_LIST_TABLE_COLUMNS,\n  CVE_LIST_TABLE_MAPPER,\n  EXPOSED_CLUSTERS_OPTIONS,\n  PUBLISHED_OPTIONS,\n  SEVERITY_OPTIONS,\n  CVE_LIST_EXPORT_PREFIX,\n} from '../../../Helpers/constants';\nimport { useSelector } from 'react-redux';\nimport {\n  fetchCveListTable,\n  changeCveListTableParams,\n} from '../../../Store/Actions';\nimport NoCves from '../../PresentationalComponents/EmptyStates/NoCves';\nimport NoMatchingCves from '../../PresentationalComponents/EmptyStates/NoMatchingCves';\nimport { useUrlBoundParams, useExport } from '../../../Helpers/hooks';\nimport useTextFilter from '../Filters/TextFilter';\nimport useRangeFilter from '../Filters/RangeFilter';\nimport {\n  getCvssScoreFromUrlParam,\n  setupFilters,\n} from '../../../Helpers/miscHelper';\nimport checkboxFilter from '../Filters/CheckboxFilter';\nimport radioFilter from '../Filters/RadioFilter';\nimport BaseTable from '../Generic/BaseTable';\nimport { fetchCves } from '../../../Helpers/apiHelper';\n\nconst CveListTable = () => {\n  const { cves, isLoading, meta, error } = useSelector(\n    ({ CveListStore }) => CveListStore\n  );\n\n  const apply = useUrlBoundParams({\n    allowedParams: CVE_LIST_ALLOWED_PARAMS,\n    initialParams: meta,\n    fetchAction: fetchCveListTable,\n    changeParamsAction: changeCveListTableParams,\n  });\n\n  const { search, cvss_score, severity, published, affected_clusters } = meta;\n\n  const [cvss_score_min, cvss_score_max] = getCvssScoreFromUrlParam(cvss_score);\n\n  const onExport = useExport(CVE_LIST_EXPORT_PREFIX, fetchCves);\n\n  const filters = [\n    useTextFilter({\n      urlParam: 'search',\n      label: 'CVE',\n      placeholder: 'Search ID or description',\n      value: search,\n      apply,\n      chipLabel: 'Search term',\n    }),\n    radioFilter({\n      urlParam: 'published',\n      label: 'Publish date',\n      value: published,\n      items: PUBLISHED_OPTIONS,\n      placeholder: 'Filter by publish date',\n      apply,\n      chipLabel: 'Publish date',\n    }),\n    checkboxFilter({\n      urlParam: 'severity',\n      label: 'Severity',\n      value: severity,\n      items: SEVERITY_OPTIONS,\n      placeholder: 'Filter by severity',\n      apply,\n      chipLabel: 'Severity',\n    }),\n    useRangeFilter({\n      urlParam: 'cvss_score',\n      label: 'CVSS score',\n      minMaxLabels: {\n        min: 'Min CVSS',\n        max: 'Max CVSS',\n      },\n      range: {\n        min: 0,\n        max: 10,\n      },\n      value: {\n        min: cvss_score_min,\n        max: cvss_score_max,\n      },\n      placeholder: 'Filter by CVSS score range',\n      apply,\n      chipLabel: 'CVSS base score',\n    }),\n    checkboxFilter({\n      urlParam: 'affected_clusters',\n      label: 'Exposed clusters',\n      value: affected_clusters,\n      items: EXPOSED_CLUSTERS_OPTIONS,\n      placeholder: 'Filter by exposed clusters',\n      apply,\n      chipLabel: 'Exposed clusters',\n    }),\n  ];\n\n  const [filterConfig, activeFiltersConfig, areAnyFiltersApplied] =\n    setupFilters(filters, meta, CVE_LIST_DEFAULT_FILTERS, apply);\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      isExpandable\n      rows={cves.map((row) => CVE_LIST_TABLE_MAPPER(row))}\n      columns={CVE_LIST_TABLE_COLUMNS}\n      filterConfig={filterConfig}\n      activeFiltersConfig={activeFiltersConfig}\n      meta={meta}\n      error={error}\n      emptyState={\n        areAnyFiltersApplied ? <NoMatchingCves /> : <NoCves multipleClusters />\n      }\n      apply={apply}\n      onExport={(format) => onExport(format, meta)}\n    />\n  );\n};\n\nexport default CveListTable;\n","import React, { Fragment } from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n  Popover,\n} from '@patternfly/react-core';\nimport {\n  OutlinedQuestionCircleIcon,\n  ExternalLinkAltIcon,\n} from '@patternfly/react-icons';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport CveListTable from './CveListTable';\nimport { useLocalStorage } from '../../../Helpers/hooks';\nimport { HEADER_ALERT_DISMISSED_KEY } from '../../../Helpers/constants';\n\nconst CveListPage = () => {\n  const PRODUCT_DOC =\n    'https://access.redhat.com/documentation/en-us/openshift_cluster_manager/2022';\n\n  const [wasHeaderAlertDismissed, setHeaderAlertDismissed] = useLocalStorage(\n    HEADER_ALERT_DISMISSED_KEY\n  );\n\n  const HeaderTitle = (\n    <Popover\n      hasAutoWidth\n      maxWidth=\"380px\"\n      position=\"right\"\n      enableFlip\n      bodyContent={\n        <Fragment>\n          The Vulnerability service identifies CVEs with errata that may affect\n          your Insights-connected OpenShift clusters. Vulnerability information\n          applies for OCP4.8+ version only.\n        </Fragment>\n      }\n      footerContent={\n        <a href={PRODUCT_DOC} target=\"__blank\" rel=\"noopener noreferrer\">\n          Learn more <ExternalLinkAltIcon />\n        </a>\n      }\n    >\n      <span>\n        CVEs\n        <OutlinedQuestionCircleIcon\n          color=\"var(--pf-global--secondary-color--100)\"\n          className=\"pf-u-ml-sm pointer cves-header-questionmark\"\n          style={{ verticalAlign: '0' }}\n        />\n      </span>\n    </Popover>\n  );\n\n  return (\n    <Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={HeaderTitle} className=\"pf-u-mb-sm\" />\n        {!wasHeaderAlertDismissed && (\n          <Alert\n            variant={AlertVariant.info}\n            isInline\n            className=\"pf-u-mt-md\"\n            title=\"Vulnerability information applies to OCP4.8+ version only\"\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => setHeaderAlertDismissed(true)}\n              />\n            }\n          />\n        )}\n      </PageHeader>\n      <Main>\n        <CveListTable />\n      </Main>\n    </Fragment>\n  );\n};\n\nexport default CveListPage;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","useSelector","CveListStore","cves","isLoading","meta","error","apply","useUrlBoundParams","allowedParams","CVE_LIST_ALLOWED_PARAMS","initialParams","fetchAction","fetchCveListTable","changeParamsAction","changeCveListTableParams","search","cvss_score","severity","published","affected_clusters","getCvssScoreFromUrlParam","cvss_score_min","cvss_score_max","onExport","useExport","CVE_LIST_EXPORT_PREFIX","fetchCves","filters","useTextFilter","urlParam","label","placeholder","value","chipLabel","radioFilter","items","PUBLISHED_OPTIONS","checkboxFilter","SEVERITY_OPTIONS","useRangeFilter","minMaxLabels","min","max","range","EXPOSED_CLUSTERS_OPTIONS","setupFilters","CVE_LIST_DEFAULT_FILTERS","filterConfig","activeFiltersConfig","areAnyFiltersApplied","BaseTable","isExpandable","rows","map","row","CVE_LIST_TABLE_MAPPER","columns","CVE_LIST_TABLE_COLUMNS","emptyState","NoMatchingCves","NoCves","multipleClusters","format","PRODUCT_DOC","useLocalStorage","HEADER_ALERT_DISMISSED_KEY","wasHeaderAlertDismissed","setHeaderAlertDismissed","HeaderTitle","Popover","hasAutoWidth","maxWidth","position","enableFlip","bodyContent","Fragment","footerContent","href","target","rel","color","className","style","verticalAlign","PageHeader","PageHeaderTitle","title","Alert","variant","AlertVariant","isInline","actionClose","AlertActionCloseButton","onClose","s","Main"],"sourceRoot":""}